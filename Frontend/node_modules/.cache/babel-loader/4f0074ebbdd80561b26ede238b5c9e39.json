{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport '../../App.css';\nimport { userActions } from '../../_actions';\nimport { getDefaultUserImage } from '../../_constants/avatar';\nimport { CURRENCY } from '../../_helper/money';\nimport { UploadImage } from '../Image/UploadImage';\nimport TimezoneSelect from 'react-timezone-select'; //Define a Login Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.avatarChangeHandler = imageUrl => {\n      this.setState({\n        imageUrl\n      });\n    };\n\n    this.firstNameChangeHandler = e => {\n      this.setState({\n        firstName: e.target.value\n      });\n    };\n\n    this.lastNameChangeHandler = e => {\n      this.setState({\n        lastName: e.target.value\n      });\n    };\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.timezoneHandler = value => {\n      this.setState({\n        timeZone: value.value\n      });\n    };\n\n    this.currencyHandler = value => {\n      this.setState({\n        currency: value[0].name\n      });\n    };\n\n    this.setHasError = errorMsg => {\n      this.setState({\n        errorMsg: errorMsg\n      });\n    };\n\n    this.submitSignup = e => {\n      //var headers = new Headers();\n      //prevent page from refresh\n      e.preventDefault();\n      const data = {\n        user: {\n          first_name: this.state.firstName,\n          last_name: this.state.lastName,\n          email: this.state.username,\n          default_currency: this.state.currency,\n          password: this.state.password,\n          time_zone: this.state.timeZone,\n          avatar: this.state.imageUrl\n        }\n      };\n      this.props.register(data);\n    };\n\n    this.buildErrorComponent = () => {\n      return this.state.errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"alert alert-danger\",\n        role: \"alert\",\n        children: this.state.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 39\n      }, this);\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      password: \"\",\n      errorMsg: \"\",\n      timeZone: null,\n      currency: 'USD',\n      imageUrl: \"\"\n    }; //Bind the handlers to this class\n\n    this.firstNameChangeHandler = this.firstNameChangeHandler.bind(this);\n    this.lastNameChangeHandler = this.lastNameChangeHandler.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitSignup = this.submitSignup.bind(this);\n    this.timezoneHandler = this.timezoneHandler.bind(this);\n    this.currencyHandler = this.currencyHandler.bind(this);\n    this.avatarChangeHandler = this.avatarChangeHandler.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  }\n\n  render() {\n    //redirect based on successful login\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.user && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            style: {\n              'width': '20%',\n              marginTop: '3%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: '17rem'\n              },\n              src: \"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(UploadImage, {\n              defaultImage: getDefaultUserImage(),\n              onChange: this.avatarChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '35rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [this.buildErrorComponent(), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter first name\",\n                    onChange: this.firstNameChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicLastName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter last name\",\n                    onChange: this.lastNameChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    onChange: this.usernameChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    onChange: this.passwordChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    id: \"currency\",\n                    labelKey: \"name\",\n                    onChange: this.currencyHandler,\n                    options: CURRENCY,\n                    placeholder: \"Choose a currency...\",\n                    renderMenuItemChildren: (option, props) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: option.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 53\n                      }, this), ' ']\n                    }, option.name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Time Zone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TimezoneSelect, {\n                    value: 'America/Los Angeles',\n                    onChange: this.timezoneHandler,\n                    timezones: {\n                      'America/Los_Angeles': 'Los Angeles',\n                      'Europe/Berlin': 'Frankfurt',\n                      'Asia/Kuwait': 'Kuwait',\n                      'Asia/Bahrain': 'Bahrain',\n                      'Canada/Mountain': 'Canada Mountain',\n                      'Canada/Pacific': 'Canada Pacific',\n                      'Asia/Kolkata': 'Indian Standard Time' //    ...i18nTimezones,\n\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  type: \"submit\",\n                  onClick: this.submitSignup,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    registering\n  } = state.registration;\n  return {\n    registering,\n    user\n  };\n}\n\nconst actionCreators = {\n  register: userActions.register\n};\nconst connectedRegisterPage = connect(mapState, actionCreators)(Signup);\nexport { connectedRegisterPage as Signup }; //export Login Component","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Signup/Signup.js"],"names":["React","Component","Button","Card","Col","Container","Form","ListGroup","Row","Typeahead","connect","Redirect","userActions","getDefaultUserImage","CURRENCY","UploadImage","TimezoneSelect","Signup","constructor","props","avatarChangeHandler","imageUrl","setState","firstNameChangeHandler","e","firstName","target","value","lastNameChangeHandler","lastName","usernameChangeHandler","username","passwordChangeHandler","password","timezoneHandler","timeZone","currencyHandler","currency","name","setHasError","errorMsg","submitSignup","preventDefault","data","user","first_name","state","last_name","email","default_currency","time_zone","avatar","register","buildErrorComponent","bind","componentWillMount","authFlag","render","alignItems","marginTop","width","option","mapState","authentication","registering","registration","actionCreators","connectedRegisterPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,SAA7C,EAAwDC,GAAxD,QAAmE,iBAAnE;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAEA;;;;;AACA,MAAMC,MAAN,SAAqBhB,SAArB,CAA+B;AAC3B;AACAiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,UAAMA,KAAN,EAFe,CAGf;;AAHe,SA+BnBC,mBA/BmB,GA+BIC,QAAD,IAAc;AAChC,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACH,KAjCkB;;AAAA,SAoCnBE,sBApCmB,GAoCOC,CAAD,IAAO;AAC5B,WAAKF,QAAL,CAAc;AACVG,QAAAA,SAAS,EAAED,CAAC,CAACE,MAAF,CAASC;AADV,OAAd;AAGH,KAxCkB;;AAAA,SA0CnBC,qBA1CmB,GA0CMJ,CAAD,IAAO;AAC3B,WAAKF,QAAL,CAAc;AACVO,QAAAA,QAAQ,EAAEL,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGH,KA9CkB;;AAAA,SAgDnBG,qBAhDmB,GAgDMN,CAAD,IAAO;AAC3B,WAAKF,QAAL,CAAc;AACVS,QAAAA,QAAQ,EAAEP,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGH,KApDkB;;AAAA,SAsDnBK,qBAtDmB,GAsDMR,CAAD,IAAO;AAC3B,WAAKF,QAAL,CAAc;AACVW,QAAAA,QAAQ,EAAET,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGH,KA1DkB;;AAAA,SA4DnBO,eA5DmB,GA4DAP,KAAD,IAAW;AACzB,WAAKL,QAAL,CAAc;AACVa,QAAAA,QAAQ,EAAER,KAAK,CAACA;AADN,OAAd;AAGH,KAhEkB;;AAAA,SAkEnBS,eAlEmB,GAkEAT,KAAD,IAAW;AACzB,WAAKL,QAAL,CAAc;AACVe,QAAAA,QAAQ,EAAEV,KAAK,CAAC,CAAD,CAAL,CAASW;AADT,OAAd;AAGH,KAtEkB;;AAAA,SAuEnBC,WAvEmB,GAuEJC,QAAD,IAAc;AACxB,WAAKlB,QAAL,CAAc;AACVkB,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAGH,KA3EkB;;AAAA,SA6EnBC,YA7EmB,GA6EHjB,CAAD,IAAO;AAClB;AACA;AACAA,MAAAA,CAAC,CAACkB,cAAF;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,IAAI,EAAE;AACFC,UAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWrB,SADrB;AAEFsB,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWjB,QAFpB;AAGFmB,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWf,QAHhB;AAIFkB,UAAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWT,QAJ3B;AAKFJ,UAAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWb,QALnB;AAMFiB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWX,QANpB;AAOFgB,UAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWzB;AAPjB;AADG,OAAb;AAaA,WAAKF,KAAL,CAAWiC,QAAX,CAAoBT,IAApB;AACH,KA/FkB;;AAAA,SAgGnBU,mBAhGmB,GAgGG,MAAM;AACxB,aAAO,KAAKP,KAAL,CAAWN,QAAX,iBAAuB;AAAK,QAAA,KAAK,EAAC,oBAAX;AAAgC,QAAA,IAAI,EAAC,OAArC;AAAA,kBAA8C,KAAKM,KAAL,CAAWN;AAAzD;AAAA;AAAA;AAAA;AAAA,cAA9B;AACH,KAlGkB;;AAIf,SAAKM,KAAL,GAAa;AACTrB,MAAAA,SAAS,EAAE,EADF;AAETI,MAAAA,QAAQ,EAAE,EAFD;AAGTE,MAAAA,QAAQ,EAAE,EAHD;AAITE,MAAAA,QAAQ,EAAE,EAJD;AAKTO,MAAAA,QAAQ,EAAE,EALD;AAMTL,MAAAA,QAAQ,EAAE,IAND;AAOTE,MAAAA,QAAQ,EAAE,KAPD;AAQThB,MAAAA,QAAQ,EAAE;AARD,KAAb,CAJe,CAef;;AACA,SAAKE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B+B,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAK1B,qBAAL,GAA6B,KAAKA,qBAAL,CAA2B0B,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKxB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BwB,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKtB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BsB,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKb,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKpB,eAAL,GAAuB,KAAKA,eAAL,CAAqBoB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKlB,eAAL,GAAuB,KAAKA,eAAL,CAAqBkB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKlC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBkC,IAAzB,CAA8B,IAA9B,CAA3B;AACH,GA1B0B,CA2B3B;;;AACAC,EAAAA,kBAAkB,GAAG;AACjB,SAAKjC,QAAL,CAAc;AACVkC,MAAAA,QAAQ,EAAE;AADA,KAAd;AAGH;;AAqEDC,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAA,iBACK,KAAKtC,KAAL,CAAWyB,IAAX,iBAAmB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADxB,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEc,YAAAA,UAAU,EAAE;AAAd,WAAZ;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,KAAK,EAAE;AAAE,uBAAS,KAAX;AAAkBC,cAAAA,SAAS,EAAE;AAA7B,aAAnB;AAAA,mCACI;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAZ;AAAgC,cAAA,GAAG,EAAC,2HAApC;AAAgK,cAAA,GAAG,EAAC;AAApK;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,YAAY,EAAE/C,mBAAmB,EAA9C;AAAkD,cAAA,QAAQ,EAAE,KAAKO;AAAjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEwC,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA,qCACI,QAAC,IAAD;AAAA,2BACK,KAAKP,mBAAL,EADL,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,eAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAC,kBAAtC;AAAyD,oBAAA,QAAQ,EAAE,KAAK9B;AAAxE;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,mBAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAC,iBAAtC;AAAwD,oBAAA,QAAQ,EAAE,KAAKK;AAAvE;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,gBAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,OAAnB;AAA2B,oBAAA,WAAW,EAAC,aAAvC;AAAqD,oBAAA,QAAQ,EAAE,KAAKE;AAApE;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAcI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,mBAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,UAAnB;AAA8B,oBAAA,WAAW,EAAC,UAA1C;AAAqD,oBAAA,QAAQ,EAAE,KAAKE;AAApE;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ,eAkBI,QAAC,IAAD,CAAM,KAAN;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,SAAD;AACI,oBAAA,EAAE,EAAC,UADP;AAEI,oBAAA,QAAQ,EAAC,MAFb;AAGI,oBAAA,QAAQ,EAAE,KAAKI,eAHnB;AAII,oBAAA,OAAO,EAAEtB,QAJb;AAKI,oBAAA,WAAW,EAAC,sBALhB;AAMI,oBAAA,sBAAsB,EAAE,CAAC+C,MAAD,EAAS1C,KAAT,kBACpB,QAAC,SAAD,CAAW,IAAX;AAAA,8CACI;AAAA,kCAAO0C,MAAM,CAACvB;AAAd;AAAA;AAAA;AAAA;AAAA,8BADJ,EAC+B,GAD/B;AAAA,uBAAqBuB,MAAM,CAACvB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBJ,eAiCI,QAAC,IAAD,CAAM,KAAN;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,cAAD;AACI,oBAAA,KAAK,EAAE,qBADX;AAEI,oBAAA,QAAQ,EAAE,KAAKJ,eAFnB;AAGI,oBAAA,SAAS,EAAE;AACP,6CAAuB,aADhB;AAEP,uCAAiB,WAFV;AAGP,qCAAe,QAHR;AAIP,sCAAgB,SAJT;AAKP,yCAAmB,iBALZ;AAMP,wCAAkB,gBANX;AAOP,sCAAgB,sBAPT,CAQP;;AARO;AAHf;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjCJ,eAkDI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,SAAhB;AAA0B,kBAAA,IAAI,EAAC,QAA/B;AAAwC,kBAAA,OAAO,EAAE,KAAKO,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAyEH;;AAhL0B;;AAmL/B,SAASqB,QAAT,CAAkBhB,KAAlB,EAAyB;AACrB,QAAM;AAAEF,IAAAA;AAAF,MAAWE,KAAK,CAACiB,cAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBlB,KAAK,CAACmB,YAA9B;AACA,SAAO;AAAED,IAAAA,WAAF;AAAepB,IAAAA;AAAf,GAAP;AACH;;AAED,MAAMsB,cAAc,GAAG;AACnBd,EAAAA,QAAQ,EAAExC,WAAW,CAACwC;AADH,CAAvB;AAIA,MAAMe,qBAAqB,GAAGzD,OAAO,CAACoD,QAAD,EAAWI,cAAX,CAAP,CAAkCjD,MAAlC,CAA9B;AACA,SAASkD,qBAAqB,IAAIlD,MAAlC,G,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport '../../App.css';\nimport { userActions } from '../../_actions';\nimport { getDefaultUserImage } from '../../_constants/avatar';\nimport { CURRENCY } from '../../_helper/money';\nimport { UploadImage } from '../Image/UploadImage';\nimport TimezoneSelect from 'react-timezone-select';\n\n//Define a Login Component\nclass Signup extends Component {\n    //call the constructor method\n    constructor(props) {\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            username: \"\",\n            password: \"\",\n            errorMsg: \"\",\n            timeZone: null,\n            currency: 'USD',\n            imageUrl: \"\",\n        }\n\n        //Bind the handlers to this class\n        this.firstNameChangeHandler = this.firstNameChangeHandler.bind(this);\n        this.lastNameChangeHandler = this.lastNameChangeHandler.bind(this);\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n        this.submitSignup = this.submitSignup.bind(this);\n        this.timezoneHandler = this.timezoneHandler.bind(this);\n        this.currencyHandler = this.currencyHandler.bind(this);\n        this.avatarChangeHandler = this.avatarChangeHandler.bind(this);\n    }\n    //Call the Will Mount to set the auth Flag to false\n    componentWillMount() {\n        this.setState({\n            authFlag: false\n        })\n    }\n    avatarChangeHandler = (imageUrl) => {\n        this.setState({ imageUrl });\n    }\n\n    //name change handler to update state variable with the text entered by the user\n    firstNameChangeHandler = (e) => {\n        this.setState({\n            firstName: e.target.value\n        })\n    }\n    //name change handler to update state variable with the text entered by the user\n    lastNameChangeHandler = (e) => {\n        this.setState({\n            lastName: e.target.value\n        })\n    }\n    //username change handler to update state variable with the text entered by the user\n    usernameChangeHandler = (e) => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n    //password change handler to update state variable with the text entered by the user\n    passwordChangeHandler = (e) => {\n        this.setState({\n            password: e.target.value\n        })\n    }\n    //timezone change handler\n    timezoneHandler = (value) => {\n        this.setState({\n            timeZone: value.value\n        })\n    }\n    //timezone change handler\n    currencyHandler = (value) => {\n        this.setState({\n            currency: value[0].name\n        })\n    }\n    setHasError = (errorMsg) => {\n        this.setState({\n            errorMsg: errorMsg\n        })\n    }\n    //submit Login handler to send a request to the node backend\n    submitSignup = (e) => {\n        //var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        const data = {\n            user: {\n                first_name: this.state.firstName,\n                last_name: this.state.lastName,\n                email: this.state.username,\n                default_currency: this.state.currency,\n                password: this.state.password,\n                time_zone: this.state.timeZone,\n                avatar: this.state.imageUrl,\n\n            }\n        }\n\n        this.props.register(data);\n    }\n    buildErrorComponent = () => {\n        return this.state.errorMsg && <div class=\"alert alert-danger\" role=\"alert\">{this.state.errorMsg}</div>\n    }\n    render() {\n        //redirect based on successful login\n        return (\n            <>\n                {this.props.user && <Redirect to=\"/home\" />}\n                <Container>\n                    <Row style={{ alignItems: 'center' }}>\n                        <Col lg={3} style={{ 'width': '20%', marginTop: '3%' }}>\n                            <img style={{ width: '17rem' }} src=\"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\" alt=\"Logo\" />\n                        </Col>\n                        <Col lg={3}>\n                            <UploadImage defaultImage={getDefaultUserImage()} onChange={this.avatarChangeHandler}></UploadImage>\n                        </Col>\n                        <Col lg={6}>\n                            <Card style={{ width: '35rem' }}>\n                                <Form>\n                                    {this.buildErrorComponent()}\n                                    <Form.Group controlId=\"formBasicName\">\n                                        <Form.Label>First name</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Enter first name\" onChange={this.firstNameChangeHandler} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formBasicLastName\">\n                                        <Form.Label>Last name</Form.Label>\n                                        <Form.Control type=\"text\" placeholder=\"Enter last name\" onChange={this.lastNameChangeHandler} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formBasicEmail\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.usernameChangeHandler} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formBasicPassword\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.passwordChangeHandler} />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Currency</Form.Label>\n                                        <Typeahead\n                                            id=\"currency\"\n                                            labelKey=\"name\"\n                                            onChange={this.currencyHandler}\n                                            options={CURRENCY}\n                                            placeholder=\"Choose a currency...\"\n                                            renderMenuItemChildren={(option, props) => (\n                                                <ListGroup.Item key={option.name}>\n                                                    <span>{option.name}</span>{' '}\n                                                </ListGroup.Item>\n                                            )}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Time Zone</Form.Label>\n                                        <TimezoneSelect\n                                            value={'America/Los Angeles'}\n                                            onChange={this.timezoneHandler}\n                                            timezones={{\n                                                'America/Los_Angeles': 'Los Angeles',\n                                                'Europe/Berlin': 'Frankfurt',\n                                                'Asia/Kuwait': 'Kuwait',\n                                                'Asia/Bahrain': 'Bahrain',\n                                                'Canada/Mountain': 'Canada Mountain',\n                                                'Canada/Pacific': 'Canada Pacific',\n                                                'Asia/Kolkata': 'Indian Standard Time',\n                                                //    ...i18nTimezones,\n                                            }}\n                                        />\n                                    </Form.Group>\n                                    <Button variant=\"success\" type=\"submit\" onClick={this.submitSignup}>\n                                        Submit\n                                </Button>\n                                </Form>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nfunction mapState(state) {\n    const { user } = state.authentication;\n    const { registering } = state.registration;\n    return { registering, user };\n}\n\nconst actionCreators = {\n    register: userActions.register\n}\n\nconst connectedRegisterPage = connect(mapState, actionCreators)(Signup);\nexport { connectedRegisterPage as Signup };\n//export Login Component"]},"metadata":{},"sourceType":"module"}