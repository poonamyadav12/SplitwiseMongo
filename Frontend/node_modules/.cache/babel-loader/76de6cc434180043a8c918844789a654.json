{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Groups/MyGroups.js\";\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Button, Card, Col, Container, Form, InputGroup, ListGroup, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { ViewComponent } from '../Home/Home';\nimport { UserAvatar } from '../Shared/Shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyGroups extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: null,\n      searchString: ''\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    try {\n      if (this.props.user) {\n        const response = await axios.get(SERVER_URL + '/user/groups?userId=' + this.props.user.email); //update the state with the response data\n\n        this.setState({\n          groups: response.data\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      const data = error.response.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : ['Some error occured, please try again.'];\n      this.props.errorAlert(msg);\n    }\n  }\n\n  async joinGroup(groupId) {\n    const data = {\n      groupId,\n      userId: this.props.user.email\n    };\n\n    try {\n      const response = await axios.post(SERVER_URL + '/group/join', data);\n      this.forceReload();\n    } catch (error) {\n      const data = error.response.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : ['Some error occured, please try again.'];\n      this.props.errorAlert(msg);\n    }\n  }\n\n  forceReload() {\n    this.fetchData();\n  }\n\n  handleSearchString(e) {\n    this.setState({\n      searchString: e.target.value\n    });\n  }\n\n  setGroupView(groupId) {\n    this.setState({\n      viewComponent: ViewComponent.GROUPVIEW,\n      groupViewData: {\n        groupId\n      }\n    });\n  }\n\n  setFriendView(friend) {\n    this.setState({\n      viewComponent: ViewComponent.FRIENDVIEW,\n      friendViewData: {\n        friend\n      }\n    });\n  }\n\n  render() {\n    if (!this.props.user) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (this.state.viewComponent) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/home',\n          state: {\n            viewComponent: this.state.viewComponent,\n            friendViewData: this.state.friendViewData,\n            groupViewData: this.state.groupViewData\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this);\n    }\n\n    const filteredGroups = _.filter(this.state.groups || [], g => g.name.toLowerCase().includes(this.state.searchString.toLowerCase()));\n\n    const invitedGroups = _.filter(filteredGroups, group => {\n      const groupUser = _.find(group.members, m => m.email === this.props.user.email);\n\n      return groupUser.group_join_status === 'INVITED';\n    });\n\n    const joinedGroups = _.filter(filteredGroups, group => {\n      const groupUser = _.find(group.members, m => m.email === this.props.user.email);\n\n      return groupUser.group_join_status !== 'INVITED';\n    });\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"MY GROUPS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 10,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  prefix: true,\n                  style: {\n                    width: '60vw',\n                    height: '5rem'\n                  },\n                  type: \"text\",\n                  placeholder: \"Search here..\",\n                  onChange: this.handleSearchString.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" GROUP INVITES \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: invitedGroups.length > 0 ? invitedGroups.map(group => {\n            const groupUser = _.find(group.members, m => m.email === this.props.user.email);\n\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(GroupItem, {\n                join_status: groupUser === null || groupUser === void 0 ? void 0 : groupUser.group_join_status,\n                group: group,\n                user: this.props.user,\n                setGroupView: this.setGroupView.bind(this),\n                setFriendView: this.setFriendView.bind(this),\n                joinGroup: this.joinGroup.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No groups.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" GROUPS JOINED \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: joinedGroups.length > 0 ? joinedGroups.map(group => {\n            const groupUser = _.find(group.members, m => m.email === this.props.user.email);\n\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(GroupItem, {\n                join_status: groupUser === null || groupUser === void 0 ? void 0 : groupUser.group_join_status,\n                group: group,\n                user: this.props.user,\n                setGroupView: this.setGroupView.bind(this),\n                setFriendView: this.setFriendView.bind(this),\n                joinGroup: this.joinGroup.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No groups.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst GroupItem = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(GroupHeader, {\n        reloadGroupView: props.reloadGroupView,\n        group: props.group,\n        join_status: props.join_status,\n        eventKey: props.group.id,\n        setGroupView: props.setGroupView,\n        joinGroup: props.joinGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(GroupDetail, {\n          group: props.group,\n          join_status: props.join_status,\n          user: props.user,\n          setFriendView: props.setFriendView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, props.group.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n\n_c = GroupItem;\n\nconst GroupHeader = props => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 10,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => props.setGroupView(props.group.id),\n        className: \"h4\",\n        children: [' ', props.group.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 2,\n      children: props.join_status === 'INVITED' ? /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '2rem'\n        },\n        variant: \"success\",\n        onClick: () => props.joinGroup(props.group.id),\n        children: \"ACCEPT INVITATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = GroupHeader;\n\nconst GroupDetail = props => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      border: '1px solid lightgray',\n      borderRadius: '1rem',\n      padding: '2rem'\n    },\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h5\",\n      children: \"MEMBERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '3rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n          user: props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), props.group.members.length > 0 && props.group.members.filter(member => member.email != props.user.email).map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '3rem'\n        },\n        onClick: () => props.setFriendView(member),\n        children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n          user: member\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = GroupDetail;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear\n};\nconst connectedMyGroups = connect(mapState, actionCreators)(MyGroups);\nexport { connectedMyGroups as MyGroups };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GroupItem\");\n$RefreshReg$(_c2, \"GroupHeader\");\n$RefreshReg$(_c3, \"GroupDetail\");","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Groups/MyGroups.js"],"names":["axios","_","React","Component","Button","Card","Col","Container","Form","InputGroup","ListGroup","Row","connect","Link","Redirect","alertActions","SERVER_URL","ViewComponent","UserAvatar","MyGroups","constructor","props","state","groups","searchString","componentDidMount","fetchData","user","response","get","email","setState","data","error","console","log","msg","Array","isArray","map","d","message","errorAlert","joinGroup","groupId","userId","post","forceReload","handleSearchString","e","target","value","setGroupView","viewComponent","GROUPVIEW","groupViewData","setFriendView","friend","FRIENDVIEW","friendViewData","render","pathname","filteredGroups","filter","g","name","toLowerCase","includes","invitedGroups","group","groupUser","find","members","m","group_join_status","joinedGroups","width","height","bind","length","id","GroupItem","reloadGroupView","join_status","GroupHeader","marginBottom","marginLeft","GroupDetail","border","borderRadius","padding","display","marginRight","member","mapState","authentication","actionCreators","clearAlert","clear","connectedMyGroups"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoEC,GAApE,QAA+E,iBAA/E;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAGA,MAAMC,QAAN,SAAuBhB,SAAvB,CAAiC;AAC/BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KAAb;AACD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM,KAAKC,SAAL,EAAN;AACD;;AAEc,QAATA,SAAS,GAAG;AAChB,QAAI;AACF,UAAI,KAAKL,KAAL,CAAWM,IAAf,EAAqB;AACnB,cAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAN,CACrBb,UAAU,GAAG,sBAAb,GAAsC,KAAKK,KAAL,CAAWM,IAAX,CAAgBG,KADjC,CAAvB,CADmB,CAInB;;AACA,aAAKC,QAAL,CAAc;AACZR,UAAAA,MAAM,EAAEK,QAAQ,CAACI;AADL,SAAd;AAGD;AACF,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,YAAMD,IAAI,GAAGC,KAAK,CAACL,QAAN,CAAeI,IAA5B;AACA,YAAMI,GAAG,GAAGC,KAAK,CAACC,OAAN,CAAcN,IAAd,IACRA,IAAI,CAACO,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,OAAlB,CADQ,GAER,CAAC,uCAAD,CAFJ;AAGA,WAAKpB,KAAL,CAAWqB,UAAX,CAAsBN,GAAtB;AACD;AACF;;AAEc,QAATO,SAAS,CAACC,OAAD,EAAU;AACvB,UAAMZ,IAAI,GAAG;AACXY,MAAAA,OADW;AAEXC,MAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWM,IAAX,CAAgBG;AAFb,KAAb;;AAIA,QAAI;AACF,YAAMF,QAAQ,GAAG,MAAM5B,KAAK,CAAC8C,IAAN,CAAW9B,UAAU,GAAG,aAAxB,EAAuCgB,IAAvC,CAAvB;AACA,WAAKe,WAAL;AACD,KAHD,CAGE,OAAOd,KAAP,EAAc;AACd,YAAMD,IAAI,GAAGC,KAAK,CAACL,QAAN,CAAeI,IAA5B;AACA,YAAMI,GAAG,GAAGC,KAAK,CAACC,OAAN,CAAcN,IAAd,IACRA,IAAI,CAACO,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,OAAlB,CADQ,GAER,CAAC,uCAAD,CAFJ;AAGA,WAAKpB,KAAL,CAAWqB,UAAX,CAAsBN,GAAtB;AACD;AACF;;AAEDW,EAAAA,WAAW,GAAG;AACZ,SAAKrB,SAAL;AACD;;AAEDsB,EAAAA,kBAAkB,CAACC,CAAD,EAAI;AACpB,SAAKlB,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEyB,CAAC,CAACC,MAAF,CAASC;AAAzB,KAAd;AACD;;AAEDC,EAAAA,YAAY,CAACR,OAAD,EAAU;AACpB,SAAKb,QAAL,CAAc;AACZsB,MAAAA,aAAa,EAAEpC,aAAa,CAACqC,SADjB;AAEZC,MAAAA,aAAa,EAAE;AAAEX,QAAAA;AAAF;AAFH,KAAd;AAID;;AAEDY,EAAAA,aAAa,CAACC,MAAD,EAAS;AACpB,SAAK1B,QAAL,CAAc;AACZsB,MAAAA,aAAa,EAAEpC,aAAa,CAACyC,UADjB;AAEZC,MAAAA,cAAc,EAAE;AAAEF,QAAAA;AAAF;AAFJ,KAAd;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKvC,KAAL,CAAWM,IAAhB,EAAsB;AACpB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,QAAI,KAAKL,KAAL,CAAW+B,aAAf,EAA8B;AAC5B,0BACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFQ,UAAAA,QAAQ,EAAE,OADR;AAEFvC,UAAAA,KAAK,EAAE;AACL+B,YAAAA,aAAa,EAAE,KAAK/B,KAAL,CAAW+B,aADrB;AAELM,YAAAA,cAAc,EAAE,KAAKrC,KAAL,CAAWqC,cAFtB;AAGLJ,YAAAA,aAAa,EAAE,KAAKjC,KAAL,CAAWiC;AAHrB;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;;AAED,UAAMO,cAAc,GAAG7D,CAAC,CAAC8D,MAAF,CAAS,KAAKzC,KAAL,CAAWC,MAAX,IAAqB,EAA9B,EAAmCyC,CAAD,IACvDA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8B,KAAK7C,KAAL,CAAWE,YAAX,CAAwB0C,WAAxB,EAA9B,CADqB,CAAvB;;AAGA,UAAME,aAAa,GAAGnE,CAAC,CAAC8D,MAAF,CAASD,cAAT,EAA0BO,KAAD,IAAW;AACxD,YAAMC,SAAS,GAAGrE,CAAC,CAACsE,IAAF,CAChBF,KAAK,CAACG,OADU,EAEfC,CAAD,IAAOA,CAAC,CAAC3C,KAAF,KAAY,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAFnB,CAAlB;;AAIA,aAAOwC,SAAS,CAACI,iBAAV,KAAgC,SAAvC;AACD,KANqB,CAAtB;;AAOA,UAAMC,YAAY,GAAG1E,CAAC,CAAC8D,MAAF,CAASD,cAAT,EAA0BO,KAAD,IAAW;AACvD,YAAMC,SAAS,GAAGrE,CAAC,CAACsE,IAAF,CAChBF,KAAK,CAACG,OADU,EAEfC,CAAD,IAAOA,CAAC,CAAC3C,KAAF,KAAY,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAFnB,CAAlB;;AAIA,aAAOwC,SAAS,CAACI,iBAAV,KAAgC,SAAvC;AACD,KANoB,CAArB;;AAQA,wBACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACE,QAAC,IAAD,CAAM,KAAN;AAAA,qCACE,QAAC,UAAD;AAAA,uCACE,QAAC,IAAD,CAAM,OAAN;AACE,kBAAA,MAAM,MADR;AAEE,kBAAA,KAAK,EAAE;AAAEE,oBAAAA,KAAK,EAAE,MAAT;AAAiBC,oBAAAA,MAAM,EAAE;AAAzB,mBAFT;AAGE,kBAAA,IAAI,EAAC,MAHP;AAIE,kBAAA,WAAW,EAAC,eAJd;AAKE,kBAAA,QAAQ,EAAE,KAAK7B,kBAAL,CAAwB8B,IAAxB,CAA6B,IAA7B;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAqBE,QAAC,SAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,oBACGV,aAAa,CAACW,MAAd,GAAuB,CAAvB,GACCX,aAAa,CAAC7B,GAAd,CAAmB8B,KAAD,IAAW;AAC3B,kBAAMC,SAAS,GAAGrE,CAAC,CAACsE,IAAF,CAChBF,KAAK,CAACG,OADU,EAEfC,CAAD,IAAOA,CAAC,CAAC3C,KAAF,KAAY,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAFnB,CAAlB;;AAKA,gCACE,QAAC,SAAD,CAAW,IAAX;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,WAAW,EAAEwC,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEI,iBAD1B;AAEE,gBAAA,KAAK,EAAEL,KAFT;AAGE,gBAAA,IAAI,EAAE,KAAKhD,KAAL,CAAWM,IAHnB;AAIE,gBAAA,YAAY,EAAE,KAAKyB,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAJhB;AAKE,gBAAA,aAAa,EAAE,KAAKtB,aAAL,CAAmBsB,IAAnB,CAAwB,IAAxB,CALjB;AAME,gBAAA,SAAS,EAAE,KAAKnC,SAAL,CAAemC,IAAf,CAAoB,IAApB;AANb;AAAA;AAAA;AAAA;AAAA;AADF,eAAqBT,KAAK,CAACW,EAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAlBD,CADD,gBAqBC,QAAC,SAAD,CAAW,IAAX;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAmDE,QAAC,SAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,oBACGL,YAAY,CAACI,MAAb,GAAsB,CAAtB,GACCJ,YAAY,CAACpC,GAAb,CAAkB8B,KAAD,IAAW;AAC1B,kBAAMC,SAAS,GAAGrE,CAAC,CAACsE,IAAF,CAChBF,KAAK,CAACG,OADU,EAEfC,CAAD,IAAOA,CAAC,CAAC3C,KAAF,KAAY,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAFnB,CAAlB;;AAKA,gCACE,QAAC,SAAD,CAAW,IAAX;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,WAAW,EAAEwC,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEI,iBAD1B;AAEE,gBAAA,KAAK,EAAEL,KAFT;AAGE,gBAAA,IAAI,EAAE,KAAKhD,KAAL,CAAWM,IAHnB;AAIE,gBAAA,YAAY,EAAE,KAAKyB,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAJhB;AAKE,gBAAA,aAAa,EAAE,KAAKtB,aAAL,CAAmBsB,IAAnB,CAAwB,IAAxB,CALjB;AAME,gBAAA,SAAS,EAAE,KAAKnC,SAAL,CAAemC,IAAf,CAAoB,IAApB;AANb;AAAA;AAAA;AAAA;AAAA;AADF,eAAqBT,KAAK,CAACW,EAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAlBD,CADD,gBAqBC,QAAC,SAAD,CAAW,IAAX;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoFD;;AAjM8B;;AAoMjC,MAAMC,SAAS,GAAI5D,KAAD,iBAChB;AAAA,yBACE,QAAC,IAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,eAAe,EAAEA,KAAK,CAAC6D,eADzB;AAEE,QAAA,KAAK,EAAE7D,KAAK,CAACgD,KAFf;AAGE,QAAA,WAAW,EAAEhD,KAAK,CAAC8D,WAHrB;AAIE,QAAA,QAAQ,EAAE9D,KAAK,CAACgD,KAAN,CAAYW,EAJxB;AAKE,QAAA,YAAY,EAAE3D,KAAK,CAAC+B,YALtB;AAME,QAAA,SAAS,EAAE/B,KAAK,CAACsB;AANnB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAEtB,KAAK,CAACgD,KADf;AAEE,UAAA,WAAW,EAAEhD,KAAK,CAAC8D,WAFrB;AAGE,UAAA,IAAI,EAAE9D,KAAK,CAACM,IAHd;AAIE,UAAA,aAAa,EAAEN,KAAK,CAACmC;AAJvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAWnC,KAAK,CAACgD,KAAN,CAAYW,EAAvB;AAAA;AAAA;AAAA;AAAA;AADF,iBADF;;KAAMC,S;;AAyBN,MAAMG,WAAW,GAAI/D,KAAD,IAAW;AAC7B,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEgE,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA,6BAAa,QAAC,IAAD;AACX,QAAA,EAAE,EAAC,GADQ;AAEX,QAAA,OAAO,EAAE,MAAMhE,KAAK,CAAC+B,YAAN,CAAmB/B,KAAK,CAACgD,KAAN,CAAYW,EAA/B,CAFJ;AAGX,QAAA,SAAS,EAAC,IAHC;AAAA,mBAKV,GALU,EAMV3D,KAAK,CAACgD,KAAN,CAAYJ,IANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,gBACG5C,KAAK,CAAC8D,WAAN,KAAsB,SAAtB,gBACC,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,OAAO,EAAC,SAFV;AAGE,QAAA,OAAO,EAAE,MAAMjE,KAAK,CAACsB,SAAN,CAAgBtB,KAAK,CAACgD,KAAN,CAAYW,EAA5B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAQG;AATN;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBD;;MAAMI,W;;AA0BN,MAAMG,WAAW,GAAIlE,KAAD,IAAW;AAC7B,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLmE,MAAAA,MAAM,EAAE,qBADH;AAELC,MAAAA,YAAY,EAAE,MAFT;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KADT;AAME,IAAA,KAAK,EAAE,IANT;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEvE,KAAK,CAACM;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,EACmC,GADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGN,KAAK,CAACgD,KAAN,CAAYG,OAAZ,CAAoBO,MAApB,GAA6B,CAA7B,IACC1D,KAAK,CAACgD,KAAN,CAAYG,OAAZ,CACGT,MADH,CACW8B,MAAD,IAAYA,MAAM,CAAC/D,KAAP,IAAgBT,KAAK,CAACM,IAAN,CAAWG,KADjD,EAEGS,GAFH,CAEQsD,MAAD,iBACH;AACE,QAAA,KAAK,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf,SADT;AAEE,QAAA,OAAO,EAAE,MAAMvE,KAAK,CAACmC,aAAN,CAAoBqC,MAApB,CAFjB;AAAA,gCAIE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJF,EAI+B,GAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA7BD;;MAAMN,W;;AA+BN,SAASO,QAAT,CAAkBxE,KAAlB,EAAyB;AACvB,QAAM;AAAEK,IAAAA;AAAF,MAAWL,KAAK,CAACyE,cAAvB;AACA,SAAO;AAAEpE,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMqE,cAAc,GAAG;AACrBtD,EAAAA,UAAU,EAAE3B,YAAY,CAACkB,KADJ;AAErBgE,EAAAA,UAAU,EAAElF,YAAY,CAACmF;AAFJ,CAAvB;AAKA,MAAMC,iBAAiB,GAAGvF,OAAO,CAACkF,QAAD,EAAWE,cAAX,CAAP,CAAkC7E,QAAlC,CAA1B;AACA,SAASgF,iBAAiB,IAAIhF,QAA9B","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Button, Card, Col, Container, Form, InputGroup, ListGroup, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { ViewComponent } from '../Home/Home';\nimport { UserAvatar } from '../Shared/Shared';\n\n\nclass MyGroups extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { groups: null, searchString: '' };\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    try {\n      if (this.props.user) {\n        const response = await axios.get(\n          SERVER_URL + '/user/groups?userId=' + this.props.user.email\n        );\n        //update the state with the response data\n        this.setState({\n          groups: response.data,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      const data = error.response.data;\n      const msg = Array.isArray(data)\n        ? data.map((d) => d.message)\n        : ['Some error occured, please try again.'];\n      this.props.errorAlert(msg);\n    }\n  }\n\n  async joinGroup(groupId) {\n    const data = {\n      groupId,\n      userId: this.props.user.email,\n    };\n    try {\n      const response = await axios.post(SERVER_URL + '/group/join', data);\n      this.forceReload();\n    } catch (error) {\n      const data = error.response.data;\n      const msg = Array.isArray(data)\n        ? data.map((d) => d.message)\n        : ['Some error occured, please try again.'];\n      this.props.errorAlert(msg);\n    }\n  }\n\n  forceReload() {\n    this.fetchData();\n  }\n\n  handleSearchString(e) {\n    this.setState({ searchString: e.target.value });\n  }\n\n  setGroupView(groupId) {\n    this.setState({\n      viewComponent: ViewComponent.GROUPVIEW,\n      groupViewData: { groupId },\n    });\n  }\n\n  setFriendView(friend) {\n    this.setState({\n      viewComponent: ViewComponent.FRIENDVIEW,\n      friendViewData: { friend },\n    });\n  }\n\n  render() {\n    if (!this.props.user) {\n      return <Redirect to='/home' />;\n    }\n\n    if (this.state.viewComponent) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/home',\n            state: {\n              viewComponent: this.state.viewComponent,\n              friendViewData: this.state.friendViewData,\n              groupViewData: this.state.groupViewData,\n            }\n          }\n          }\n        />\n      );\n    }\n\n    const filteredGroups = _.filter(this.state.groups || [], (g) =>\n      g.name.toLowerCase().includes(this.state.searchString.toLowerCase())\n    );\n    const invitedGroups = _.filter(filteredGroups, (group) => {\n      const groupUser = _.find(\n        group.members,\n        (m) => m.email === this.props.user.email\n      );\n      return groupUser.group_join_status === 'INVITED';\n    });\n    const joinedGroups = _.filter(filteredGroups, (group) => {\n      const groupUser = _.find(\n        group.members,\n        (m) => m.email === this.props.user.email\n      );\n      return groupUser.group_join_status !== 'INVITED';\n    });\n\n    return (\n      <Container fluid={true}>\n        <Container>\n          <h2>MY GROUPS</h2>\n        </Container>\n        <Container>\n          <Row>\n            <Col lg={10}>\n              <Form.Group>\n                <InputGroup>\n                  <Form.Control\n                    prefix\n                    style={{ width: '60vw', height: '5rem' }}\n                    type='text'\n                    placeholder='Search here..'\n                    onChange={this.handleSearchString.bind(this)}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Col>\n          </Row>\n        </Container>\n        <Container>\n          <h4> GROUP INVITES </h4>\n          <ListGroup variant='flush'>\n            {invitedGroups.length > 0 ? (\n              invitedGroups.map((group) => {\n                const groupUser = _.find(\n                  group.members,\n                  (m) => m.email === this.props.user.email\n                );\n\n                return (\n                  <ListGroup.Item key={group.id}>\n                    <GroupItem\n                      join_status={groupUser?.group_join_status}\n                      group={group}\n                      user={this.props.user}\n                      setGroupView={this.setGroupView.bind(this)}\n                      setFriendView={this.setFriendView.bind(this)}\n                      joinGroup={this.joinGroup.bind(this)}\n                    />\n                  </ListGroup.Item>\n                );\n              })\n            ) : (\n              <ListGroup.Item>\n                <h5>No groups.</h5>\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </Container>\n        <Container>\n          <h4> GROUPS JOINED </h4>\n          <ListGroup variant='flush'>\n            {joinedGroups.length > 0 ? (\n              joinedGroups.map((group) => {\n                const groupUser = _.find(\n                  group.members,\n                  (m) => m.email === this.props.user.email\n                );\n\n                return (\n                  <ListGroup.Item key={group.id}>\n                    <GroupItem\n                      join_status={groupUser?.group_join_status}\n                      group={group}\n                      user={this.props.user}\n                      setGroupView={this.setGroupView.bind(this)}\n                      setFriendView={this.setFriendView.bind(this)}\n                      joinGroup={this.joinGroup.bind(this)}\n                    />\n                  </ListGroup.Item>\n                );\n              })\n            ) : (\n              <ListGroup.Item>\n                <h5>No groups.</h5>\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst GroupItem = (props) => (\n  <>\n    <Card key={props.group.id}>\n      <Container fluid={true}>\n        <GroupHeader\n          reloadGroupView={props.reloadGroupView}\n          group={props.group}\n          join_status={props.join_status}\n          eventKey={props.group.id}\n          setGroupView={props.setGroupView}\n          joinGroup={props.joinGroup}\n        />\n        <Card.Body>\n          <GroupDetail\n            group={props.group}\n            join_status={props.join_status}\n            user={props.user}\n            setFriendView={props.setFriendView}\n          />\n        </Card.Body>\n      </Container>\n    </Card>\n  </>\n);\n\nconst GroupHeader = (props) => {\n  return (\n    <Row style={{ marginBottom: '1rem' }}>\n      <Col sm={10}><Link\n        to='#'\n        onClick={() => props.setGroupView(props.group.id)}\n        className='h4'\n      >\n        {' '}\n        {props.group.name}\n      </Link></Col>\n      <Col sm={2}>\n        {props.join_status === 'INVITED' ? (\n          <Button\n            style={{ marginLeft: '2rem' }}\n            variant='success'\n            onClick={() => props.joinGroup(props.group.id)}\n          >\n            ACCEPT INVITATION\n          </Button>\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\n\nconst GroupDetail = (props) => {\n  return (\n    <Container\n      style={{\n        border: '1px solid lightgray',\n        borderRadius: '1rem',\n        padding: '2rem',\n      }}\n      fluid={true}\n    >\n      <div className='h5'>MEMBERS</div>\n      <div style={{ display: 'flex' }}>\n        <div style={{ marginRight: '3rem' }}>\n          <UserAvatar user={props.user} />{' '}\n        </div>\n        {props.group.members.length > 0 &&\n          props.group.members\n            .filter((member) => member.email != props.user.email)\n            .map((member) => (\n              <div\n                style={{ marginRight: '3rem' }}\n                onClick={() => props.setFriendView(member)}\n              >\n                <UserAvatar user={member} />{' '}\n              </div>\n            ))}\n      </div>\n    </Container>\n  );\n};\n\nfunction mapState(state) {\n  const { user } = state.authentication;\n  return { user };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear,\n};\n\nconst connectedMyGroups = connect(mapState, actionCreators)(MyGroups);\nexport { connectedMyGroups as MyGroups };\n"]},"metadata":{},"sourceType":"module"}