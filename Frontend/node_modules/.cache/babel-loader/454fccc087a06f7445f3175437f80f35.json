{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Transactions/UpdateExpenseModal.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { default as React, useState } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Modal, Row } from 'react-bootstrap';\nimport CurrencyInput from 'react-currency-input';\nimport { connect } from 'react-redux';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { CURRENCYFORMAT } from '../../_helper/money';\nimport { AlertMessages } from '../Alert/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateExpenseModal(props) {\n  _s();\n\n  const [amount, setAmount] = useState(props.transaction.amount);\n  const [description, setDescription] = useState(props.transaction.description);\n  const [errorMsg, setErrorMsg] = useState([]);\n\n  function handleAmountChange(event, maskedvalue, floatvalue) {\n    setAmount(maskedvalue);\n  }\n\n  function handleDescChange(e) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const data = {\n      \"transaction\": { ...props.transaction,\n        amount,\n        description,\n        from: props.transaction.from.email,\n        to: props.transaction.to.map(user => user.email)\n      }\n    };\n    if (data.transaction.lentAmount !== null) delete data.transaction.lentAmount;\n    if (data.transaction.createdAt !== null) delete data.transaction.createdAt;\n\n    try {\n      const response = await axios.post(SERVER_URL + '/transaction/update', data);\n      props.reloadGroupView();\n      props.closeModal();\n    } catch (error) {\n      var _error$response;\n\n      const data = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : [\"Some error occured, please try again.\"];\n      setErrorMsg(msg);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.isOpen,\n      onHide: props.closeModal,\n      keyboard: false,\n      backdrop: \"static\",\n      className: \"update-expense-modal\",\n      animation: false,\n      style: {\n        width: \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update the expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlertMessages, {\n          type: \"danger\",\n          messages: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://s3.amazonaws.com/splitwise/uploads/category/icon/square_v2/uncategorized/general@2x.png\",\n                alt: \"transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 3,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formDescription\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    style: {\n                      fontSize: '24px',\n                      width: '29.5rem'\n                    },\n                    value: description,\n                    placeholder: \"Description\",\n                    onChange: handleDescChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(CurrencyInput, {\n                  prefix: CURRENCYFORMAT[props.user.default_currency],\n                  value: amount,\n                  onChange: handleAmountChange,\n                  style: {\n                    fontSize: '32px',\n                    width: '29.5rem',\n                    border: '1px solid #ccc',\n                    'border-radius': '4px',\n                    color: '#5555555'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"With you and\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: props.transaction.to.map(member => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: `${member.first_name}${member.last_name ? \" \" + member.last_name : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateExpenseModal, \"X4Ghm9OpT/QyWKbTKBxImpHeHUw=\");\n\n_c = UpdateExpenseModal;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear\n};\nconst connectedUpdateExpenseModal = connect(mapState, actionCreators)(UpdateExpenseModal);\nexport { connectedUpdateExpenseModal as UpdateExpenseModal };\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateExpenseModal\");","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Transactions/UpdateExpenseModal.js"],"names":["axios","_","default","React","useState","Button","Card","Col","Container","Form","ListGroup","Modal","Row","CurrencyInput","connect","alertActions","SERVER_URL","CURRENCYFORMAT","AlertMessages","UpdateExpenseModal","props","amount","setAmount","transaction","description","setDescription","errorMsg","setErrorMsg","handleAmountChange","event","maskedvalue","floatvalue","handleDescChange","e","preventDefault","target","value","handleSubmit","data","from","email","to","map","user","lentAmount","createdAt","response","post","reloadGroupView","closeModal","error","msg","Array","isArray","d","message","isOpen","width","fontSize","default_currency","border","color","member","first_name","last_name","mapState","state","authentication","actionCreators","errorAlert","clearAlert","clear","connectedUpdateExpenseModal"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport { default as React, useState } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Modal, Row } from 'react-bootstrap';\nimport CurrencyInput from 'react-currency-input';\nimport { connect } from 'react-redux';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { CURRENCYFORMAT } from '../../_helper/money';\nimport { AlertMessages } from '../Alert/Alert';\n\nfunction UpdateExpenseModal(props) {\n  const [amount, setAmount] = useState(props.transaction.amount);\n  const [description, setDescription] = useState(props.transaction.description);\n\n  const [errorMsg, setErrorMsg] = useState([]);\n\n  function handleAmountChange(event, maskedvalue, floatvalue) {\n    setAmount(maskedvalue);\n  }\n\n  function handleDescChange(e) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const data = {\n      \"transaction\": {\n        ...props.transaction,\n        amount,\n        description,\n        from: props.transaction.from.email,\n        to: props.transaction.to.map((user) => user.email)\n      },\n    };\n\n    if (data.transaction.lentAmount !== null) delete data.transaction.lentAmount;\n    if (data.transaction.createdAt !== null) delete data.transaction.createdAt;\n\n    try {\n      const response = await axios.post(SERVER_URL + '/transaction/update', data);\n      props.reloadGroupView();\n      props.closeModal();\n    } catch (error) {\n      const data = error?.response?.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : [\"Some error occured, please try again.\"];\n      setErrorMsg(msg);\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        show={props.isOpen}\n        onHide={props.closeModal}\n        keyboard={false}\n        backdrop=\"static\"\n        className=\"update-expense-modal\"\n        animation={false}\n        style={{ width: \"100vw\" }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Update the expense</Modal.Title>\n          <AlertMessages type=\"danger\" messages={errorMsg} />\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col sm={2}>\n                <img src=\"https://s3.amazonaws.com/splitwise/uploads/category/icon/square_v2/uncategorized/general@2x.png\" alt=\"transaction\" />\n              </Col>\n              <Col sm={3}>\n                <Row>\n                  <Form.Group controlId=\"formDescription\">\n                    <Form.Control type=\"text\" style={{ fontSize: '24px', width: '29.5rem' }} value={description} placeholder=\"Description\" onChange={handleDescChange} />\n                  </Form.Group>\n                </Row>\n                <Row>\n                  <CurrencyInput prefix={CURRENCYFORMAT[props.user.default_currency]} value={amount} onChange={handleAmountChange} style={{ fontSize: '32px', width: '29.5rem', border: '1px solid #ccc', 'border-radius': '4px', color: '#5555555' }} />\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n          <Card.Title>With you and</Card.Title>\n          <ListGroup>\n            {props.transaction.to.map((member) => (\n              <ListGroup.Item>\n                <Form.Label>{`${member.first_name}${member.last_name ? \" \" + member.last_name : \"\"}`}</Form.Label>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={props.closeModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nfunction mapState(state) {\n  const { user } = state.authentication;\n  return { user };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear,\n};\n\nconst connectedUpdateExpenseModal = connect(mapState, actionCreators)(UpdateExpenseModal);\nexport { connectedUpdateExpenseModal as UpdateExpenseModal };\n"]},"metadata":{},"sourceType":"module"}