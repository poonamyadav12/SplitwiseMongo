{"ast":null,"code":"/* spencermountain/spacetime 6.14.0 Apache 2.0 */\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MSEC_IN_HOUR = 60 * 60 * 1000; //convert our local date syntax a javascript UTC date\n\nvar toUtc = function toUtc(dstChange, offset, year) {\n  var _dstChange$split = dstChange.split('/'),\n      _dstChange$split2 = _slicedToArray(_dstChange$split, 2),\n      month = _dstChange$split2[0],\n      rest = _dstChange$split2[1];\n\n  var _rest$split = rest.split(':'),\n      _rest$split2 = _slicedToArray(_rest$split, 2),\n      day = _rest$split2[0],\n      hour = _rest$split2[1];\n\n  return Date.UTC(year, month - 1, day, hour) - offset * MSEC_IN_HOUR;\n}; // compare epoch with dst change events (in utc)\n\n\nvar inSummerTime = function inSummerTime(epoch, start, end, summerOffset, winterOffset) {\n  var year = new Date(epoch).getUTCFullYear();\n  var startUtc = toUtc(start, winterOffset, year);\n  var endUtc = toUtc(end, summerOffset, year); // simple number comparison now\n\n  return epoch >= startUtc && epoch < endUtc;\n};\n\nvar summerTime = inSummerTime; // it reproduces some things in ./index.js, but speeds up spacetime considerably\n\nvar quickOffset = function quickOffset(s) {\n  var zones = s.timezones;\n  var obj = zones[s.tz];\n\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0;\n  }\n\n  if (obj.dst === undefined) {\n    return obj.offset;\n  } //get our two possible offsets\n\n\n  var jul = obj.offset;\n  var dec = obj.offset + 1; // assume it's the same for now\n\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n\n  var split = obj.dst.split('->');\n  var inSummer = summerTime(s.epoch, split[0], split[1], jul, dec);\n\n  if (inSummer === true) {\n    return jul;\n  }\n\n  return dec;\n};\n\nvar quick = quickOffset;\nvar _build = {\n  \"9|s\": \"2/dili,2/jayapura\",\n  \"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,11/palau\",\n  \"9.5|s|04/04:03->10/03:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n  \"9.5|s\": \"4/darwin,4/north\",\n  \"8|s|03/08:01->10/04:00\": \"12/casey\",\n  \"8|s\": \"2/kuala_lumpur,2/makassar,2/singapore,4/perth,2/ujung_pandang,4/west\",\n  \"8|n\": \"2/brunei,2/choibalsan,2/hong_kong,2/irkutsk,2/kuching,2/macau,2/manila,2/shanghai,2/taipei,2/ulaanbaatar,2/chongqing,2/chungking,2/harbin,2/macao,2/ulan_bator\",\n  \"8.75|s\": \"4/eucla\",\n  \"7|s\": \"12/davis,2/jakarta,9/christmas\",\n  \"7|n\": \"2/bangkok,2/barnaul,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/saigon,2/tomsk,2/vientiane,2/ho_chi_minh\",\n  \"6|s\": \"12/vostok\",\n  \"6|n\": \"2/almaty,2/bishkek,2/dhaka,2/omsk,2/qyzylorda,2/qostanay,2/thimphu,2/urumqi,9/chagos,2/dacca,2/kashgar,2/thimbu\",\n  \"6.5|n\": \"2/rangoon,9/cocos,2/yangon\",\n  \"5|s\": \"12/mawson,9/kerguelen\",\n  \"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/atyrau,2/baku,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives,2/ashkhabad\",\n  \"5.75|n\": \"2/katmandu,2/kathmandu\",\n  \"5.5|n\": \"2/calcutta,2/colombo,2/kolkata\",\n  \"4|s\": \"9/reunion\",\n  \"4|n\": \"2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,2/volgograd,9/mahe,9/mauritius\",\n  \"4.5|n|03/22:00->09/21:24\": \"2/tehran\",\n  \"4.5|n\": \"2/kabul\",\n  \"3|s\": \"12/syowa,9/antananarivo\",\n  \"3|n|03/28:03->10/31:04\": \"2/famagusta,2/nicosia,8/athens,8/bucharest,8/helsinki,8/kiev,8/mariehamn,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye,8/nicosia\",\n  \"3|n|03/28:02->10/31:03\": \"8/chisinau,8/tiraspol\",\n  \"3|n|03/28:00->10/30:24\": \"2/beirut\",\n  \"3|n|03/27:00->10/30:01\": \"2/gaza,2/hebron\",\n  \"3|n|03/26:02->10/31:02\": \"2/jerusalem,2/tel_aviv\",\n  \"3|n|03/26:00->10/29:01\": \"2/amman\",\n  \"3|n|03/26:00->10/28:24\": \"2/damascus\",\n  \"3|n\": \"0/addis_ababa,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/baghdad,2/bahrain,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte,0/asmara,2/istanbul\",\n  \"2|s|03/28:02->10/31:02\": \"12/troll\",\n  \"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n  \"2|n|03/28:02->10/31:03\": \"0/ceuta,arctic/longyearbyen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich,3/jan_mayen\",\n  \"2|n\": \"0/blantyre,0/bujumbura,0/cairo,0/khartoum,0/kigali,0/tripoli,8/kaliningrad\",\n  \"1|s\": \"0/brazzaville,0/kinshasa,0/luanda,0/windhoek\",\n  \"1|n|04/11:03->05/16:02\": \"0/casablanca,0/el_aaiun\",\n  \"1|n|03/28:01->10/31:02\": \"3/canary,3/faeroe,3/madeira,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london,3/faroe,8/belfast\",\n  \"1|n\": \"0/algiers,0/bangui,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n  \"14|n\": \"11/kiritimati\",\n  \"13|s|04/04:04->09/26:03\": \"11/apia\",\n  \"13|s|01/15:02->11/05:03\": \"11/tongatapu\",\n  \"13|n\": \"11/enderbury,11/fakaofo\",\n  \"12|s|04/04:03->09/26:02\": \"12/mcmurdo,11/auckland,12/south_pole\",\n  \"12|s|01/17:03->11/14:02\": \"11/fiji\",\n  \"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis\",\n  \"12.75|s|04/04:03->04/04:02\": \"11/chatham\",\n  \"11|s|04/04:03->10/03:02\": \"12/macquarie\",\n  \"11|s\": \"11/bougainville\",\n  \"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/ponape,11/pohnpei\",\n  \"11.5|n|04/04:03->10/03:02\": \"11/norfolk\",\n  \"10|s|04/04:03->10/03:02\": \"4/currie,4/hobart,4/melbourne,4/sydney,4/act,4/canberra,4/nsw,4/tasmania,4/victoria\",\n  \"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,11/port_moresby,4/queensland\",\n  \"10|n\": \"2/ust-nera,2/vladivostok,2/yakutsk,11/guam,11/saipan,11/truk,11/chuuk,11/yap\",\n  \"10.5|s|04/04:01->10/03:02\": \"4/lord_howe,4/lhi\",\n  \"0|n|03/28:00->10/31:01\": \"1/scoresbysund,3/azores\",\n  \"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/utc,0/timbuktu,13/gmt-0,13/gmt+0,13/gmt0,13/greenwich,13/uct,13/universal,13/zulu\",\n  \"-9|n|03/14:02->11/07:02\": \"1/adak,1/atka,us/aleutian\",\n  \"-9|n\": \"11/gambier\",\n  \"-9.5|n\": \"11/marquesas\",\n  \"-8|n|03/14:02->11/07:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat,us/alaska\",\n  \"-8|n\": \"11/pitcairn\",\n  \"-7|n|03/14:02->11/07:02\": \"1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/ensenada,6/pacific,10/bajanorte,us/pacific-new,us/pacific\",\n  \"-7|n|03/08:02->11/01:01\": \"1/dawson,1/whitehorse,6/yukon\",\n  \"-7|n\": \"1/creston,1/dawson_creek,1/fort_nelson,1/hermosillo,1/phoenix,us/arizona\",\n  \"-6|s|04/03:22->09/04:22\": \"11/easter,7/easterisland\",\n  \"-6|n|04/04:02->10/31:02\": \"1/chihuahua,1/mazatlan,10/bajasur\",\n  \"-6|n|03/14:02->11/07:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/ojinaga,1/yellowknife,1/shiprock,6/mountain,us/mountain\",\n  \"-6|n\": \"1/belize,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/regina,1/swift_current,1/tegucigalpa,11/galapagos,6/east-saskatchewan,6/saskatchewan\",\n  \"-5|s\": \"1/lima,1/rio_branco,1/porto_acre,5/acre\",\n  \"-5|n|04/04:02->10/31:02\": \"1/bahia_banderas,1/merida,1/mexico_city,1/monterrey,10/general\",\n  \"-5|n|03/14:02->11/07:02\": \"1/chicago,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,1/indiana/knox,1/indiana/tell_city,1/north_dakota/beulah,1/north_dakota/center,1/north_dakota/new_salem,1/knox_in,6/central,us/central,us/indiana-starke\",\n  \"-5|n|03/12:03->11/05:01\": \"1/north_dakota\",\n  \"-5|n\": \"1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/atikokan\",\n  \"-4|s|05/13:23->08/13:01\": \"12/palmer\",\n  \"-4|s|04/03:24->09/05:00\": \"1/santiago,7/continental\",\n  \"-4|s|03/27:24->10/03:00\": \"1/asuncion\",\n  \"-4|s|02/16:24->11/03:00\": \"1/campo_grande,1/cuiaba\",\n  \"-4|s\": \"1/la_paz,1/manaus,5/west\",\n  \"-4|n|03/14:02->11/07:02\": \"1/detroit,1/grand_turk,1/indianapolis,1/iqaluit,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,1/indiana/marengo,1/indiana/petersburg,1/indiana/vevay,1/indiana/vincennes,1/indiana/winamac,1/kentucky/monticello,1/fort_wayne,1/indiana/indianapolis,1/kentucky/louisville,6/eastern,us/east-indiana,us/eastern,us/michigan\",\n  \"-4|n|03/14:00->11/07:01\": \"1/havana\",\n  \"-4|n|03/12:03->11/05:01\": \"1/indiana,1/kentucky\",\n  \"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n  \"-3|s\": \"1/argentina,1/buenos_aires,1/catamarca,1/cordoba,1/fortaleza,1/jujuy,1/mendoza,1/montevideo,1/punta_arenas,1/sao_paulo,12/rothera,3/stanley,1/argentina/la_rioja,1/argentina/rio_gallegos,1/argentina/salta,1/argentina/san_juan,1/argentina/san_luis,1/argentina/tucuman,1/argentina/ushuaia,1/argentina/buenos_aires,1/argentina/catamarca,1/argentina/comodrivadavia,1/argentina/cordoba,1/argentina/jujuy,1/argentina/mendoza,1/rosario,5/east\",\n  \"-3|n|03/14:02->11/07:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n  \"-3|n\": \"1/araguaina,1/bahia,1/belem,1/cayenne,1/maceio,1/paramaribo,1/recife,1/santarem\",\n  \"-2|n|03/27:22->10/30:23\": \"1/godthab,1/nuuk\",\n  \"-2|n|03/14:02->11/07:02\": \"1/miquelon\",\n  \"-2|n\": \"1/noronha,3/south_georgia,5/denoronha\",\n  \"-2.5|n|03/14:02->11/07:02\": \"1/st_johns,6/newfoundland\",\n  \"-1|n\": \"3/cape_verde\",\n  \"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa,us/samoa\",\n  \"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti,us/hawaii\"\n};\n\nvar _build$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': _build\n}); //prefixes for iana names..\n\n\nvar _prefixes = ['africa', 'america', 'asia', 'atlantic', 'australia', 'brazil', 'canada', 'chile', 'europe', 'indian', 'mexico', 'pacific', 'antarctica', 'etc'];\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n['default'] || n;\n}\n\nvar data = getCjsExportFromNamespace(_build$1);\nvar all = {};\nObject.keys(data).forEach(function (k) {\n  var split = k.split('|');\n  var obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n\n  var names = data[k].split(',');\n  names.forEach(function (str) {\n    str = str.replace(/(^[0-9]+)\\//, function (before, num) {\n      num = Number(num);\n      return _prefixes[num] + '/';\n    });\n    all[str] = obj;\n  });\n});\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //default to northern hemisphere - (sorry!)\n\n}; //add etc/gmt+n\n\nfor (var i = -14; i <= 14; i += 0.5) {\n  var num = i;\n\n  if (num > 0) {\n    num = '+' + num;\n  }\n\n  var name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1,\n    //they're negative!\n    hem: 'n' //(sorry)\n\n  };\n  name = 'utc/gmt' + num; //this one too, why not.\n\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\n\nvar unpack = all; //find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\n\nvar fallbackTZ = 'utc'; //\n//this Intl object is not supported often, yet\n\nvar safeIntl = function safeIntl() {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null;\n  }\n\n  var format = Intl.DateTimeFormat();\n\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null;\n  }\n\n  var timezone = format.resolvedOptions().timeZone;\n\n  if (!timezone) {\n    return null;\n  }\n\n  return timezone.toLowerCase();\n};\n\nvar guessTz = function guessTz() {\n  var timezone = safeIntl();\n\n  if (timezone === null) {\n    return fallbackTZ;\n  }\n\n  return timezone;\n}; //do it once per computer\n\n\nvar guessTz_1 = guessTz;\nvar isOffset = /(\\-?[0-9]+)h(rs)?/i;\nvar isNumber = /(\\-?[0-9]+)/;\nvar utcOffset = /utc([\\-+]?[0-9]+)/i;\nvar gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nvar toIana = function toIana(num) {\n  num = Number(num);\n\n  if (num >= -13 && num <= 13) {\n    num = num * -1; //it's opposite!\n\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n\n    return 'etc/gmt' + num;\n  }\n\n  return null;\n};\n\nvar parseOffset$1 = function parseOffset(tz) {\n  // '+5hrs'\n  var m = tz.match(isOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'utc+5'\n\n\n  m = tz.match(utcOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'GMT-5' (not opposite)\n\n\n  m = tz.match(gmtOffset);\n\n  if (m !== null) {\n    var num = Number(m[1]) * -1;\n    return toIana(num);\n  } // '+5'\n\n\n  m = tz.match(isNumber);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n\n  return null;\n};\n\nvar parseOffset_1$1 = parseOffset$1;\nvar local = guessTz_1(); //add all the city names by themselves\n\nvar cities = Object.keys(unpack).reduce(function (h, k) {\n  var city = k.split('/')[1] || '';\n  city = city.replace(/_/g, ' ');\n  h[city] = k;\n  return h;\n}, {}); //try to match these against iana form\n\nvar normalize = function normalize(tz) {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  return tz;\n}; // try our best to reconcile the timzone to this given string\n\n\nvar lookupTz = function lookupTz(str, zones) {\n  if (!str) {\n    return local;\n  }\n\n  if (typeof str !== 'string') {\n    console.error(\"Timezone must be a string - recieved: '\", str, \"'\\n\");\n  }\n\n  var tz = str.trim(); // let split = str.split('/')\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  // if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n  //   tz = split[0] + '/' + split[1]\n  // }\n\n  tz = tz.toLowerCase();\n\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz;\n  } //lookup more loosely..\n\n\n  tz = normalize(tz);\n\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz;\n  } //try city-names\n\n\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz];\n  } // //try to parse '-5h'\n\n\n  if (/[0-9]/.test(tz) === true) {\n    var id = parseOffset_1$1(tz);\n\n    if (id) {\n      return id;\n    }\n  }\n\n  throw new Error(\"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\");\n};\n\nvar find = lookupTz;\nvar o = {\n  millisecond: 1\n};\no.second = 1000;\no.minute = 60000;\no.hour = 3.6e6; // dst is supported post-hoc\n\no.day = 8.64e7; //\n\no.date = o.day;\no.month = 8.64e7 * 29.5; //(average)\n\no.week = 6.048e8;\no.year = 3.154e10; // leap-years are supported post-hoc\n//add plurals\n\nObject.keys(o).forEach(function (k) {\n  o[k + 's'] = o[k];\n});\nvar milliseconds = o;\n\nvar walk = function walk(s, n, fn, unit, previous) {\n  var current = s.d[fn]();\n\n  if (current === n) {\n    return; //already there\n  }\n\n  var startUnit = previous === null ? null : s.d[previous]();\n  var original = s.epoch; //try to get it as close as we can\n\n  var diff = n - current;\n  s.epoch += milliseconds[unit] * diff; //DST edge-case: if we are going many days, be a little conservative\n  // console.log(unit, diff)\n\n  if (unit === 'day') {\n    // s.epoch -= ms.minute\n    //but don't push it over a month\n    if (Math.abs(diff) > 28 && n < 28) {\n      s.epoch += milliseconds.hour;\n    }\n  } // 1st time: oops, did we change previous unit? revert it.\n\n\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original; // s.epoch += ms[unit] * diff * 0.89 // maybe try and make it close...?\n  } //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n\n\n  var halfStep = milliseconds[unit] / 2;\n\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  } // 2nd time: did we change previous unit? revert it.\n\n\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n  }\n}; //find the desired date by a increment/check while loop\n\n\nvar units$3 = {\n  year: {\n    valid: function valid(n) {\n      return n > -4000 && n < 4000;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getFullYear', 'year', null);\n    }\n  },\n  month: {\n    valid: function valid(n) {\n      return n >= 0 && n <= 11;\n    },\n    walkTo: function walkTo(s, n) {\n      var d = s.d;\n      var current = d.getMonth();\n      var original = s.epoch;\n      var startUnit = d.getFullYear();\n\n      if (current === n) {\n        return;\n      } //try to get it as close as we can..\n\n\n      var diff = n - current;\n      s.epoch += milliseconds.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original;\n      } //increment by day\n\n\n      while (s.d.getMonth() < n) {\n        s.epoch += milliseconds.day;\n      }\n\n      while (s.d.getMonth() > n) {\n        s.epoch -= milliseconds.day;\n      }\n    }\n  },\n  date: {\n    valid: function valid(n) {\n      return n > 0 && n <= 31;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getDate', 'day', 'getMonth');\n    }\n  },\n  hour: {\n    valid: function valid(n) {\n      return n >= 0 && n < 24;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getHours', 'hour', 'getDate');\n    }\n  },\n  minute: {\n    valid: function valid(n) {\n      return n >= 0 && n < 60;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getMinutes', 'minute', 'getHours');\n    }\n  },\n  second: {\n    valid: function valid(n) {\n      return n >= 0 && n < 60;\n    },\n    walkTo: function walkTo(s, n) {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: function valid(n) {\n      return n >= 0 && n < 1000;\n    },\n    walkTo: function walkTo(s, n) {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\n\nvar walkTo = function walkTo(s, wants) {\n  var keys = Object.keys(units$3);\n  var old = s.clone();\n\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    var n = wants[k];\n\n    if (n === undefined) {\n      n = old[k]();\n    }\n\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    } //make-sure it's valid\n\n\n    if (!units$3[k].valid(n)) {\n      s.epoch = null;\n\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n\n      return;\n    }\n\n    units$3[k].walkTo(s, n);\n  }\n\n  return;\n};\n\nvar walk_1 = walkTo;\nvar shortMonths = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sept', 'oct', 'nov', 'dec'];\nvar longMonths = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\nfunction buildMapping() {\n  var obj = {\n    sep: 8 //support this format\n\n  };\n\n  for (var i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i;\n  }\n\n  for (var _i = 0; _i < longMonths.length; _i++) {\n    obj[longMonths[_i]] = _i;\n  }\n\n  return obj;\n}\n\nvar months$1 = {\n  \"short\": function short() {\n    return shortMonths;\n  },\n  \"long\": function long() {\n    return longMonths;\n  },\n  mapping: function mapping() {\n    return buildMapping();\n  },\n  set: function set(i18n) {\n    shortMonths = i18n[\"short\"] || shortMonths;\n    longMonths = i18n[\"long\"] || longMonths;\n  }\n}; //pull-apart ISO offsets, like \"+0100\"\n\nvar parseOffset = function parseOffset(s, offset) {\n  if (!offset) {\n    return s;\n  } //this is a fancy-move\n\n\n  if (offset === 'Z' || offset === 'z') {\n    offset = '+0000';\n  } // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n\n\n  var num = 0; // for (+-)hh:mm\n\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '');\n    } //support \"+01:30\"\n\n\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5');\n    }\n  } // for (+-)hhmm\n\n\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5');\n  }\n\n  num = parseFloat(offset); //divide by 100 or 10 - , \"+0100\", \"+01\"\n\n  if (Math.abs(num) > 100) {\n    num = num / 100;\n  } //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n\n\n  num *= -1;\n\n  if (num >= 0) {\n    num = '+' + num;\n  }\n\n  var tz = 'etc/gmt' + num;\n  var zones = s.timezones;\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz;\n  }\n\n  return s;\n};\n\nvar parseOffset_1 = parseOffset;\n\nvar parseTime = function parseTime(s) {\n  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  str = str.replace(/^\\s+/, '').toLowerCase(); //trim\n  //formal time formats - 04:30.23\n\n  var arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n\n  if (arr !== null) {\n    //validate it a little\n    var h = Number(arr[1]);\n\n    if (h < 0 || h > 24) {\n      return s.startOf('day');\n    }\n\n    var m = Number(arr[2]); //don't accept '5:3pm'\n\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day');\n    }\n\n    if (arr[4] > 999) {\n      // fix overflow issue with milliseconds, if input is longer than standard (e.g. 2017-08-06T09:00:00.123456Z)\n      arr[4] = parseInt(\"\".concat(arr[4]).substring(0, 3), 10);\n    }\n\n    s = s.hour(h);\n    s = s.minute(m);\n    s = s.seconds(arr[3] || 0);\n    s = s.millisecond(arr[4] || 0); //parse-out am/pm\n\n    var ampm = str.match(/[\\b0-9](am|pm)\\b/);\n\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1]);\n    }\n\n    return s;\n  } //try an informal form - 5pm (no minutes)\n\n\n  arr = str.match(/([0-9]+) ?(am|pm)/);\n\n  if (arr !== null && arr[1]) {\n    var _h = Number(arr[1]); //validate it a little..\n\n\n    if (_h > 12 || _h < 1) {\n      return s.startOf('day');\n    }\n\n    s = s.hour(arr[1] || 0);\n    s = s.ampm(arr[2]);\n    s = s.startOf('hour');\n    return s;\n  } //no time info found, use start-of-day\n\n\n  s = s.startOf('day');\n  return s;\n};\n\nvar parseTime_1 = parseTime;\nvar monthLengths = [31, // January - 31 days\n28, // February - 28 days in a common year and 29 days in leap years\n31, // March - 31 days\n30, // April - 30 days\n31, // May - 31 days\n30, // June - 30 days\n31, // July - 31 days\n31, // August - 31 days\n30, // September - 30 days\n31, // October - 31 days\n30, // November - 30 days\n31 // December - 31 days\n];\nvar monthLengths_1 = monthLengths; // 28 - feb\n\nvar fns = createCommonjsModule(function (module, exports) {\n  //git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\n  exports.isLeapYear = function (year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }; // unsurprisingly-nasty `typeof date` call\n\n\n  exports.isDate = function (d) {\n    return Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\n  };\n\n  exports.isArray = function (input) {\n    return Object.prototype.toString.call(input) === '[object Array]';\n  };\n\n  exports.isObject = function (input) {\n    return Object.prototype.toString.call(input) === '[object Object]';\n  };\n\n  exports.isBoolean = function (input) {\n    return Object.prototype.toString.call(input) === '[object Boolean]';\n  };\n\n  exports.zeroPad = function (str) {\n    var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var pad = '0';\n    str = str + '';\n    return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str;\n  };\n\n  exports.titleCase = function (str) {\n    if (!str) {\n      return '';\n    }\n\n    return str[0].toUpperCase() + str.substr(1);\n  };\n\n  exports.ordinal = function (i) {\n    var j = i % 10;\n    var k = i % 100;\n\n    if (j === 1 && k !== 11) {\n      return i + 'st';\n    }\n\n    if (j === 2 && k !== 12) {\n      return i + 'nd';\n    }\n\n    if (j === 3 && k !== 13) {\n      return i + 'rd';\n    }\n\n    return i + 'th';\n  }; //strip 'st' off '1st'..\n\n\n  exports.toCardinal = function (str) {\n    str = String(str);\n    str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n    return parseInt(str, 10);\n  }; //used mostly for cleanup of unit names, like 'months'\n\n\n  exports.normalize = function () {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    str = str.toLowerCase().trim();\n    str = str.replace(/ies$/, 'y'); //'centuries'\n\n    str = str.replace(/s$/, '');\n    str = str.replace(/-/g, '');\n\n    if (str === 'day' || str === 'days') {\n      return 'date';\n    }\n\n    if (str === 'min' || str === 'mins') {\n      return 'minute';\n    }\n\n    return str;\n  };\n\n  exports.getEpoch = function (tmp) {\n    //support epoch\n    if (typeof tmp === 'number') {\n      return tmp;\n    } //suport date objects\n\n\n    if (exports.isDate(tmp)) {\n      return tmp.getTime();\n    }\n\n    if (tmp.epoch) {\n      return tmp.epoch;\n    }\n\n    return null;\n  }; //make sure this input is a spacetime obj\n\n\n  exports.beADate = function (d, s) {\n    if (exports.isObject(d) === false) {\n      return s.clone().set(d);\n    }\n\n    return d;\n  };\n\n  exports.formatTimezone = function (offset) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var sign = offset > 0 ? '+' : '-';\n    var absOffset = Math.abs(offset);\n    var hours = exports.zeroPad(parseInt('' + absOffset, 10));\n    var minutes = exports.zeroPad(absOffset % 1 * 60);\n    return \"\".concat(sign).concat(hours).concat(delimiter).concat(minutes);\n  };\n});\nfns.isLeapYear;\nfns.isDate;\nfns.isArray;\nfns.isObject;\nfns.isBoolean;\nfns.zeroPad;\nfns.titleCase;\nfns.ordinal;\nfns.toCardinal;\nfns.normalize;\nfns.getEpoch;\nfns.beADate;\nfns.formatTimezone;\nvar isLeapYear$2 = fns.isLeapYear; //given a month, return whether day number exists in it\n\nvar hasDate = function hasDate(obj) {\n  //invalid values\n  if (monthLengths_1.hasOwnProperty(obj.month) !== true) {\n    return false;\n  } //support leap-year in february\n\n\n  if (obj.month === 1) {\n    if (isLeapYear$2(obj.year) && obj.date <= 29) {\n      return true;\n    } else {\n      return obj.date <= 28;\n    }\n  } //is this date too-big for this month?\n\n\n  var max = monthLengths_1[obj.month] || 0;\n\n  if (obj.date <= max) {\n    return true;\n  }\n\n  return false;\n};\n\nvar hasDate_1 = hasDate;\nvar months = months$1.mapping();\n\nvar parseYear = function parseYear() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var today = arguments.length > 1 ? arguments[1] : undefined;\n  var year = parseInt(str.trim(), 10); // use a given year from options.today\n\n  if (!year && today) {\n    year = today.year;\n  } // fallback to this year\n\n\n  year = year || new Date().getFullYear();\n  return year;\n};\n\nvar strFmt = [//iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n{\n  reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/i,\n  parse: function parse(s, arr, givenTz, options) {\n    var month = parseInt(arr[2], 10) - 1;\n    var obj = {\n      year: arr[1],\n      month: month,\n      date: arr[3]\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    parseOffset_1(s, arr[5]);\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //iso \"2015-03-25\" or \"2015/03/25\" or \"2015/03/25 12:26:14 PM\"\n{\n  reg: /^([0-9]{4})[\\-\\/.]([0-9]{1,2})[\\-\\/.]([0-9]{1,2}),?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var obj = {\n      year: arr[1],\n      month: parseInt(arr[2], 10) - 1,\n      date: parseInt(arr[3], 10)\n    };\n\n    if (obj.month >= 12) {\n      //support yyyy/dd/mm (weird, but ok)\n      obj.date = parseInt(arr[2], 10);\n      obj.month = parseInt(arr[3], 10) - 1;\n    }\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //mm/dd/yyyy - uk/canada \"6/28/2019, 12:26:14 PM\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/.]([0-9]{1,2})[\\-\\/.]?([0-9]{4})?,?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var month = parseInt(arr[1], 10) - 1;\n    var date = parseInt(arr[2], 10); //support dd/mm/yyy\n\n    if (s.british || month >= 12) {\n      date = parseInt(arr[1], 10);\n      month = parseInt(arr[2], 10) - 1;\n    }\n\n    var year = parseYear(arr[3], s._today) || new Date().getFullYear();\n    var obj = {\n      year: year,\n      month: month,\n      date: date\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, // '2012-06' last attempt at iso-like format\n{\n  reg: /^([0-9]{4})[\\-\\/]([0-9]{2})$/i,\n  parse: function parse(s, arr, givenTz, options) {\n    var month = parseInt(arr[2], 10) - 1;\n    var obj = {\n      year: arr[1],\n      month: month,\n      date: 1\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    parseOffset_1(s, arr[5]);\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //common british format - \"25-feb-2015\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[2].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[1] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //alt short format - \"feb-25-2015\"\n{\n  reg: /^([a-z]+)[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[2] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //Long \"Mar 25 2015\"\n//February 22, 2017 15:30:00\n{\n  reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[2] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //February 2017 (implied date)\n{\n  reg: /^([a-z]+) ([0-9]{4})$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[2], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: s._today.date || 1\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //Long \"25 Mar 2015\"\n{\n  reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?,? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[2].toLowerCase()];\n\n    if (!month) {\n      return null;\n    }\n\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[1])\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, {\n  // 'q2 2002'\n  reg: /^(q[0-9])( of)?( [0-9]{4})?/i,\n  parse: function parse(s, arr) {\n    var quarter = arr[1] || '';\n    s = s.quarter(quarter);\n    var year = arr[3] || '';\n\n    if (year) {\n      year = year.trim();\n      s = s.year(year);\n    }\n\n    return s;\n  }\n}, {\n  // 'summer 2002'\n  reg: /^(spring|summer|winter|fall|autumn)( of)?( [0-9]{4})?/i,\n  parse: function parse(s, arr) {\n    var season = arr[1] || '';\n    s = s.season(season);\n    var year = arr[3] || '';\n\n    if (year) {\n      year = year.trim();\n      s = s.year(year);\n    }\n\n    return s;\n  }\n}, {\n  // '200bc'\n  reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n  parse: function parse(s, arr) {\n    var str = arr[0] || ''; //make negative-year\n\n    str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1'); //remove commas\n\n    str = str.replace(/,/g, '');\n    var year = parseInt(str.trim(), 10);\n    var d = new Date();\n    var obj = {\n      year: year,\n      month: d.getMonth(),\n      date: d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}, {\n  // '200ad'\n  reg: /^[0-9,]+ ?(a\\.?d\\.?|c\\.?e\\.?)$/i,\n  parse: function parse(s, arr) {\n    var str = arr[0] || ''; //remove commas\n\n    str = str.replace(/,/g, '');\n    var year = parseInt(str.trim(), 10);\n    var d = new Date();\n    var obj = {\n      year: year,\n      month: d.getMonth(),\n      date: d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}, {\n  // '1992'\n  reg: /^[0-9]{4}( ?a\\.?d\\.?)?$/i,\n  parse: function parse(s, arr) {\n    var today = s._today;\n    var year = parseYear(arr[0], today);\n    var d = new Date(); // using today's date, but a new month is awkward.\n\n    if (today.month && !today.date) {\n      today.date = 1;\n    }\n\n    var obj = {\n      year: year,\n      month: today.month || d.getMonth(),\n      date: today.date || d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}];\nvar strParse = strFmt; // pull in 'today' data for the baseline moment\n\nvar getNow = function getNow(s) {\n  s.epoch = Date.now();\n  Object.keys(s._today || {}).forEach(function (k) {\n    if (typeof s[k] === 'function') {\n      s = s[k](s._today[k]);\n    }\n  });\n  return s;\n};\n\nvar dates = {\n  now: function now(s) {\n    return getNow(s);\n  },\n  today: function today(s) {\n    return getNow(s);\n  },\n  tonight: function tonight(s) {\n    s = getNow(s);\n    s = s.hour(18); //6pm\n\n    return s;\n  },\n  tomorrow: function tomorrow(s) {\n    s = getNow(s);\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  yesterday: function yesterday(s) {\n    s = getNow(s);\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  christmas: function christmas(s) {\n    var year = getNow(s).year();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n\n    return s;\n  },\n  'new years': function newYears(s) {\n    var year = getNow(s).year();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n\n    return s;\n  }\n};\ndates['new years eve'] = dates['new years'];\nvar namedDates = dates; //  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\n\nvar minimumEpoch = 2500000000;\nvar defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n}; //support [2016, 03, 01] format\n\nvar handleArray = function handleArray(s, arr, today) {\n  if (arr.length === 0) {\n    return s;\n  }\n\n  var order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n  for (var i = 0; i < order.length; i++) {\n    var num = arr[i] || today[order[i]] || defaults[order[i]] || 0;\n    s = s[order[i]](num);\n  }\n\n  return s;\n}; //support {year:2016, month:3} format\n\n\nvar handleObject = function handleObject(s, obj, today) {\n  // if obj is empty, do nothing\n  if (Object.keys(obj).length === 0) {\n    return s;\n  }\n\n  obj = Object.assign({}, defaults, today, obj);\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    var unit = keys[i]; //make sure we have this method\n\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue;\n    } //make sure the value is a number\n\n\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue;\n    }\n\n    var num = obj[unit] || today[unit] || defaults[unit] || 0;\n    s = s[unit](num);\n  }\n\n  return s;\n}; //find the epoch from different input styles\n\n\nvar parseInput = function parseInput(s, input, givenTz) {\n  var today = s._today || defaults; //if we've been given a epoch number, it's easy\n\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n\n    s.epoch = input;\n    return s;\n  } //set tmp time\n\n\n  s.epoch = Date.now(); // overwrite tmp time with 'today' value, if exists\n\n  if (s._today && fns.isObject(s._today) && Object.keys(s._today).length > 0) {\n    var res = handleObject(s, today, defaults);\n\n    if (res.isValid()) {\n      s.epoch = res.epoch;\n    }\n  } // null input means 'now'\n\n\n  if (input === null || input === undefined || input === '') {\n    return s; //k, we're good.\n  } //support input of Date() object\n\n\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime();\n    return s;\n  } //support [2016, 03, 01] format\n\n\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input, today);\n    return s;\n  } //support {year:2016, month:3} format\n\n\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch;\n      s.tz = input.tz;\n      return s;\n    }\n\n    s = handleObject(s, input, today);\n    return s;\n  } //input as a string..\n\n\n  if (typeof input !== 'string') {\n    return s;\n  } //little cleanup..\n\n\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '');\n  input = input.replace(/,/g, '');\n  input = input.replace(/ +/g, ' ').trim(); //try some known-words, like 'now'\n\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s);\n    return s;\n  } //try each text-parse template, use the first good result\n\n\n  for (var i = 0; i < strParse.length; i++) {\n    var m = input.match(strParse[i].reg);\n\n    if (m) {\n      // console.log(strFmt[i].reg)\n      var _res = strParse[i].parse(s, m, givenTz);\n\n      if (_res !== null && _res.isValid()) {\n        return _res;\n      }\n    }\n  }\n\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n  }\n\n  s.epoch = null;\n  return s;\n};\n\nvar input = parseInput;\nvar shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nvar longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nvar days = {\n  \"short\": function short() {\n    return shortDays;\n  },\n  \"long\": function long() {\n    return longDays;\n  },\n  set: function set(i18n) {\n    shortDays = i18n[\"short\"] || shortDays;\n    longDays = i18n[\"long\"] || longDays;\n  },\n  aliases: {\n    mo: 1,\n    tu: 2,\n    we: 3,\n    th: 4,\n    fr: 5,\n    sa: 6,\n    su: 7,\n    tues: 2,\n    weds: 3,\n    wedn: 3,\n    thur: 4,\n    thurs: 4\n  }\n};\nvar titleCaseEnabled = true;\nvar caseFormat = {\n  useTitleCase: function useTitleCase() {\n    return titleCaseEnabled;\n  },\n  set: function set(useTitleCase) {\n    titleCaseEnabled = useTitleCase;\n  }\n}; // it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\n\nvar isoOffset = function isoOffset(s) {\n  var offset = s.timezone().current.offset;\n  return !offset ? 'Z' : fns.formatTimezone(offset, ':');\n};\n\nvar _offset = isoOffset;\n\nvar applyCaseFormat = function applyCaseFormat(str) {\n  if (caseFormat.useTitleCase()) {\n    return fns.titleCase(str);\n  }\n\n  return str;\n};\n\nvar format = {\n  day: function day(s) {\n    return applyCaseFormat(s.dayName());\n  },\n  'day-short': function dayShort(s) {\n    return applyCaseFormat(days[\"short\"]()[s.day()]);\n  },\n  'day-number': function dayNumber(s) {\n    return s.day();\n  },\n  'day-ordinal': function dayOrdinal(s) {\n    return fns.ordinal(s.day());\n  },\n  'day-pad': function dayPad(s) {\n    return fns.zeroPad(s.day());\n  },\n  date: function date(s) {\n    return s.date();\n  },\n  'date-ordinal': function dateOrdinal(s) {\n    return fns.ordinal(s.date());\n  },\n  'date-pad': function datePad(s) {\n    return fns.zeroPad(s.date());\n  },\n  month: function month(s) {\n    return applyCaseFormat(s.monthName());\n  },\n  'month-short': function monthShort(s) {\n    return applyCaseFormat(months$1[\"short\"]()[s.month()]);\n  },\n  'month-number': function monthNumber(s) {\n    return s.month();\n  },\n  'month-ordinal': function monthOrdinal(s) {\n    return fns.ordinal(s.month());\n  },\n  'month-pad': function monthPad(s) {\n    return fns.zeroPad(s.month());\n  },\n  'iso-month': function isoMonth(s) {\n    return fns.zeroPad(s.month() + 1);\n  },\n  //1-based months\n  year: function year(s) {\n    var year = s.year();\n\n    if (year > 0) {\n      return year;\n    }\n\n    year = Math.abs(year);\n    return year + ' BC';\n  },\n  'year-short': function yearShort(s) {\n    var year = s.year();\n\n    if (year > 0) {\n      return \"'\".concat(String(s.year()).substr(2, 4));\n    }\n\n    year = Math.abs(year);\n    return year + ' BC';\n  },\n  'iso-year': function isoYear(s) {\n    var year = s.year();\n    var isNegative = year < 0;\n    var str = fns.zeroPad(Math.abs(year), 4); //0-padded\n\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6);\n      str = '-' + str;\n    }\n\n    return str;\n  },\n  time: function time(s) {\n    return s.time();\n  },\n  'time-24': function time24(s) {\n    return \"\".concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  },\n  hour: function hour(s) {\n    return s.hour12();\n  },\n  'hour-pad': function hourPad(s) {\n    return fns.zeroPad(s.hour12());\n  },\n  'hour-24': function hour24(s) {\n    return s.hour24();\n  },\n  'hour-24-pad': function hour24Pad(s) {\n    return fns.zeroPad(s.hour24());\n  },\n  minute: function minute(s) {\n    return s.minute();\n  },\n  'minute-pad': function minutePad(s) {\n    return fns.zeroPad(s.minute());\n  },\n  second: function second(s) {\n    return s.second();\n  },\n  'second-pad': function secondPad(s) {\n    return fns.zeroPad(s.second());\n  },\n  ampm: function ampm(s) {\n    return s.ampm();\n  },\n  quarter: function quarter(s) {\n    return 'Q' + s.quarter();\n  },\n  season: function season(s) {\n    return s.season();\n  },\n  era: function era(s) {\n    return s.era();\n  },\n  json: function json(s) {\n    return s.json();\n  },\n  timezone: function timezone(s) {\n    return s.timezone().name;\n  },\n  offset: function offset(s) {\n    return _offset(s);\n  },\n  numeric: function numeric(s) {\n    return \"\".concat(s.year(), \"/\").concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()));\n  },\n  // yyyy/mm/dd\n  'numeric-us': function numericUs(s) {\n    return \"\".concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()), \"/\").concat(s.year());\n  },\n  // mm/dd/yyyy\n  'numeric-uk': function numericUk(s) {\n    return \"\".concat(fns.zeroPad(s.date()), \"/\").concat(fns.zeroPad(s.month() + 1), \"/\").concat(s.year());\n  },\n  //dd/mm/yyyy\n  'mm/dd': function mmDd(s) {\n    return \"\".concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()));\n  },\n  //mm/dd\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: function iso(s) {\n    var year = s.format('iso-year');\n    var month = fns.zeroPad(s.month() + 1); //1-based months\n\n    var date = fns.zeroPad(s.date());\n    var hour = fns.zeroPad(s.h24());\n    var minute = fns.zeroPad(s.minute());\n    var second = fns.zeroPad(s.second());\n    var ms = fns.zeroPad(s.millisecond(), 3);\n\n    var offset = _offset(s);\n\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(date, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second, \".\").concat(ms).concat(offset); //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': function isoShort(s) {\n    var month = fns.zeroPad(s.month() + 1); //1-based months\n\n    var date = fns.zeroPad(s.date());\n    return \"\".concat(s.year(), \"-\").concat(month, \"-\").concat(date); //2017-02-15\n  },\n  'iso-utc': function isoUtc(s) {\n    return new Date(s.epoch).toISOString(); //2017-03-08T19:45:28.367Z\n  },\n  //i made these up\n  nice: function nice(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.time());\n  },\n  'nice-24': function nice24(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  },\n  'nice-year': function niceYear(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.year());\n  },\n  'nice-day': function niceDay(s) {\n    return \"\".concat(days[\"short\"]()[s.day()], \" \").concat(applyCaseFormat(months$1[\"short\"]()[s.month()]), \" \").concat(fns.ordinal(s.date()));\n  },\n  'nice-full': function niceFull(s) {\n    return \"\".concat(s.dayName(), \" \").concat(applyCaseFormat(s.monthName()), \" \").concat(fns.ordinal(s.date()), \", \").concat(s.time());\n  },\n  'nice-full-24': function niceFull24(s) {\n    return \"\".concat(s.dayName(), \" \").concat(applyCaseFormat(s.monthName()), \" \").concat(fns.ordinal(s.date()), \", \").concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  }\n}; //aliases\n\nvar aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  'nice-short-24': 'nice-24',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n};\nObject.keys(aliases).forEach(function (k) {\n  return format[k] = format[aliases[k]];\n});\n\nvar printFormat = function printFormat(s) {\n  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ''; //don't print anything if it's an invalid date\n\n  if (s.isValid() !== true) {\n    return '';\n  } //support .format('month')\n\n\n  if (format.hasOwnProperty(str)) {\n    var out = format[str](s) || '';\n\n    if (str !== 'json') {\n      out = String(out);\n\n      if (str !== 'ampm') {\n        out = applyCaseFormat(out);\n      }\n    }\n\n    return out;\n  } //support '{hour}:{minute}' notation\n\n\n  if (str.indexOf('{') !== -1) {\n    var sections = /\\{(.+?)\\}/g;\n    str = str.replace(sections, function (_, fmt) {\n      fmt = fmt.toLowerCase().trim();\n\n      if (format.hasOwnProperty(fmt)) {\n        var _out = String(format[fmt](s));\n\n        if (fmt !== 'ampm') {\n          return applyCaseFormat(_out);\n        }\n\n        return _out;\n      }\n\n      return '';\n    });\n    return str;\n  }\n\n  return s.format('iso-short');\n};\n\nvar format_1 = printFormat;\nvar pad = fns.zeroPad;\nvar formatTimezone = fns.formatTimezone; //parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n//time-symbols we support\n\nvar mapping = {\n  G: function G(s) {\n    return s.era();\n  },\n  GG: function GG(s) {\n    return s.era();\n  },\n  GGG: function GGG(s) {\n    return s.era();\n  },\n  GGGG: function GGGG(s) {\n    return s.era() === 'AD' ? 'Anno Domini' : 'Before Christ';\n  },\n  //year\n  y: function y(s) {\n    return s.year();\n  },\n  yy: function yy(s) {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10);\n  },\n  yyy: function yyy(s) {\n    return s.year();\n  },\n  yyyy: function yyyy(s) {\n    return s.year();\n  },\n  yyyyy: function yyyyy(s) {\n    return '0' + s.year();\n  },\n  // u: (s) => {},//extended non-gregorian years\n  //quarter\n  Q: function Q(s) {\n    return s.quarter();\n  },\n  QQ: function QQ(s) {\n    return s.quarter();\n  },\n  QQQ: function QQQ(s) {\n    return s.quarter();\n  },\n  QQQQ: function QQQQ(s) {\n    return s.quarter();\n  },\n  //month\n  M: function M(s) {\n    return s.month() + 1;\n  },\n  MM: function MM(s) {\n    return pad(s.month() + 1);\n  },\n  MMM: function MMM(s) {\n    return s.format('month-short');\n  },\n  MMMM: function MMMM(s) {\n    return s.format('month');\n  },\n  //week\n  w: function w(s) {\n    return s.week();\n  },\n  ww: function ww(s) {\n    return pad(s.week());\n  },\n  //week of month\n  // W: (s) => s.week(),\n  //date of month\n  d: function d(s) {\n    return s.date();\n  },\n  dd: function dd(s) {\n    return pad(s.date());\n  },\n  //date of year\n  D: function D(s) {\n    return s.dayOfYear();\n  },\n  DD: function DD(s) {\n    return pad(s.dayOfYear());\n  },\n  DDD: function DDD(s) {\n    return pad(s.dayOfYear(), 3);\n  },\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n  //day\n  E: function E(s) {\n    return s.format('day-short');\n  },\n  EE: function EE(s) {\n    return s.format('day-short');\n  },\n  EEE: function EEE(s) {\n    return s.format('day-short');\n  },\n  EEEE: function EEEE(s) {\n    return s.format('day');\n  },\n  EEEEE: function EEEEE(s) {\n    return s.format('day')[0];\n  },\n  e: function e(s) {\n    return s.day();\n  },\n  ee: function ee(s) {\n    return s.day();\n  },\n  eee: function eee(s) {\n    return s.format('day-short');\n  },\n  eeee: function eeee(s) {\n    return s.format('day');\n  },\n  eeeee: function eeeee(s) {\n    return s.format('day')[0];\n  },\n  //am/pm\n  a: function a(s) {\n    return s.ampm().toUpperCase();\n  },\n  aa: function aa(s) {\n    return s.ampm().toUpperCase();\n  },\n  aaa: function aaa(s) {\n    return s.ampm().toUpperCase();\n  },\n  aaaa: function aaaa(s) {\n    return s.ampm().toUpperCase();\n  },\n  //hour\n  h: function h(s) {\n    return s.h12();\n  },\n  hh: function hh(s) {\n    return pad(s.h12());\n  },\n  H: function H(s) {\n    return s.hour();\n  },\n  HH: function HH(s) {\n    return pad(s.hour());\n  },\n  // j: (s) => {},//weird hour format\n  m: function m(s) {\n    return s.minute();\n  },\n  mm: function mm(s) {\n    return pad(s.minute());\n  },\n  s: function s(_s) {\n    return _s.second();\n  },\n  ss: function ss(s) {\n    return pad(s.second());\n  },\n  //milliseconds in the day\n  A: function A(s) {\n    return s.epoch - s.startOf('day').epoch;\n  },\n  //timezone\n  z: function z(s) {\n    return s.timezone().name;\n  },\n  zz: function zz(s) {\n    return s.timezone().name;\n  },\n  zzz: function zzz(s) {\n    return s.timezone().name;\n  },\n  zzzz: function zzzz(s) {\n    return s.timezone().name;\n  },\n  Z: function Z(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZ: function ZZ(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZZ: function ZZZ(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZZZ: function ZZZZ(s) {\n    return formatTimezone(s.timezone().current.offset, ':');\n  }\n};\n\nvar addAlias = function addAlias(_char, to, n) {\n  var name = _char;\n  var toName = to;\n\n  for (var i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName];\n    name += _char;\n    toName += to;\n  }\n};\n\naddAlias('q', 'Q', 4);\naddAlias('L', 'M', 4);\naddAlias('Y', 'y', 4);\naddAlias('c', 'e', 4);\naddAlias('k', 'H', 2);\naddAlias('K', 'h', 2);\naddAlias('S', 's', 2);\naddAlias('v', 'z', 4);\naddAlias('V', 'Z', 4); // support unix-style escaping with ' character\n\nvar escapeChars = function escapeChars(arr) {\n  for (var i = 0; i < arr.length; i += 1) {\n    if (arr[i] === \"'\") {\n      // greedy-search for next apostrophe\n      for (var o = i + 1; o < arr.length; o += 1) {\n        if (arr[o]) {\n          arr[i] += arr[o];\n        }\n\n        if (arr[o] === \"'\") {\n          arr[o] = null;\n          break;\n        }\n\n        arr[o] = null;\n      }\n    }\n  }\n\n  return arr.filter(function (ch) {\n    return ch;\n  });\n}; //combine consecutive chars, like 'yyyy' as one.\n\n\nvar combineRepeated = function combineRepeated(arr) {\n  for (var i = 0; i < arr.length; i += 1) {\n    var c = arr[i]; // greedy-forward\n\n    for (var o = i + 1; o < arr.length; o += 1) {\n      if (arr[o] === c) {\n        arr[i] += arr[o];\n        arr[o] = null;\n      } else {\n        break;\n      }\n    }\n  } // '' means one apostrophe\n\n\n  arr = arr.filter(function (ch) {\n    return ch;\n  });\n  arr = arr.map(function (str) {\n    if (str === \"''\") {\n      str = \"'\";\n    }\n\n    return str;\n  });\n  return arr;\n};\n\nvar unixFmt = function unixFmt(s, str) {\n  var arr = str.split(''); // support character escaping\n\n  arr = escapeChars(arr); //combine 'yyyy' as string.\n\n  arr = combineRepeated(arr);\n  return arr.reduce(function (txt, c) {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || '';\n    } else {\n      // 'unescape'\n      if (/^'.{1,}'$/.test(c)) {\n        c = c.replace(/'/g, '');\n      }\n\n      txt += c;\n    }\n\n    return txt;\n  }, '');\n};\n\nvar unixFmt_1 = unixFmt;\nvar units$2 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\nvar doUnit = function doUnit(s, k) {\n  var start = s.clone().startOf(k);\n  var end = s.clone().endOf(k);\n  var duration = end.epoch - start.epoch;\n  var percent = (s.epoch - start.epoch) / duration;\n  return parseFloat(percent.toFixed(2));\n}; //how far it is along, from 0-1\n\n\nvar progress = function progress(s, unit) {\n  if (unit) {\n    unit = fns.normalize(unit);\n    return doUnit(s, unit);\n  }\n\n  var obj = {};\n  units$2.forEach(function (k) {\n    obj[k] = doUnit(s, k);\n  });\n  return obj;\n};\n\nvar progress_1 = progress;\n\nvar nearest = function nearest(s, unit) {\n  //how far have we gone?\n  var prog = s.progress();\n  unit = fns.normalize(unit); //fix camel-case for this one\n\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    } // go to start\n\n\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n\n  return s;\n};\n\nvar nearest_1 = nearest; //increment until dates are the same\n\nvar climb = function climb(a, b, unit) {\n  var i = 0;\n  a = a.clone();\n\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  } //oops, we went too-far..\n\n\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n\n  return i;\n}; // do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\n\n\nvar diffOne = function diffOne(a, b, unit) {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit);\n  } else {\n    return climb(b, a, unit) * -1; //reverse it\n  }\n};\n\nvar one = diffOne; // 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\n\nvar fastYear = function fastYear(a, b) {\n  var years = b.year() - a.year(); // should we decrement it by 1?\n\n  a = a.year(b.year());\n\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n\n  return years;\n}; // use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\n\n\nvar diff$1 = function diff(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  var msDiff = b.epoch - a.epoch;\n  var obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10); //do the year\n\n  var tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year'); //there's always 12 months in a year...\n\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += one(tmp, b, 'month'); // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += one(tmp, b, 'week'); // there's always atleast 7 days in a week\n\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += one(tmp, b, 'day');\n  return obj;\n};\n\nvar waterfall = diff$1;\n\nvar reverseDiff = function reverseDiff(obj) {\n  Object.keys(obj).forEach(function (k) {\n    obj[k] *= -1;\n  });\n  return obj;\n}; // this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\n\n\nvar main$1 = function main(a, b, unit) {\n  b = fns.beADate(b, a); //reverse values, if necessary\n\n  var reversed = false;\n\n  if (a.isAfter(b)) {\n    var tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  } //compute them all (i know!)\n\n\n  var obj = waterfall(a, b);\n\n  if (reversed) {\n    obj = reverseDiff(obj);\n  } //return just the requested unit\n\n\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit);\n\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n\n    return obj[unit];\n  }\n\n  return obj;\n};\n\nvar diff = main$1; //our conceptual 'break-points' for each unit\n\nvar qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n}; //get number of hours/minutes... between the two dates\n\nfunction getDiff(a, b) {\n  var isBefore = a.isBefore(b);\n  var later = isBefore ? b : a;\n  var earlier = isBefore ? a : b;\n  earlier = earlier.clone();\n  var diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  Object.keys(diff).forEach(function (unit) {\n    if (earlier.isSame(later, unit)) {\n      return;\n    }\n\n    var max = earlier.diff(later, unit);\n    earlier = earlier.add(max, unit);\n    diff[unit] = max;\n  }); //reverse it, if necessary\n\n  if (isBefore) {\n    Object.keys(diff).forEach(function (u) {\n      if (diff[u] !== 0) {\n        diff[u] *= -1;\n      }\n    });\n  }\n\n  return diff;\n} // Expects a plural unit arg\n\n\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1);\n  }\n\n  return value + ' ' + unit;\n} //create the human-readable diff between the two dates\n\n\nvar since = function since(start, end) {\n  end = fns.beADate(end, start);\n  var diff = getDiff(start, end);\n  var isNow = Object.keys(diff).every(function (u) {\n    return !diff[u];\n  });\n\n  if (isNow === true) {\n    return {\n      diff: diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    };\n  }\n\n  var rounded;\n  var qualified;\n  var precise;\n  var englishValues = []; //go through each value and create its text-representation\n\n  Object.keys(diff).forEach(function (unit, i, units) {\n    var value = Math.abs(diff[unit]);\n\n    if (value === 0) {\n      return;\n    }\n\n    var englishValue = pluralize(value, unit);\n    englishValues.push(englishValue);\n\n    if (!rounded) {\n      rounded = qualified = englishValue;\n\n      if (i > 4) {\n        return;\n      } //is it a 'almost' something, etc?\n\n\n      var nextUnit = units[i + 1];\n      var nextValue = Math.abs(diff[nextUnit]);\n\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit);\n        qualified = 'almost ' + rounded;\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue;\n    }\n  }); //make them into a string\n\n  precise = englishValues.splice(0, 2).join(', '); //handle before/after logic\n\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  }\n\n  return {\n    diff: diff,\n    rounded: rounded,\n    qualified: qualified,\n    precise: precise\n  };\n};\n\nvar since_1 = since; //https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\n\nvar seasons = {\n  north: [['spring', 2, 1], //spring march 1\n  ['summer', 5, 1], //june 1\n  ['fall', 8, 1], //sept 1\n  ['autumn', 8, 1], //sept 1\n  ['winter', 11, 1] //dec 1\n  ],\n  south: [['fall', 2, 1], //march 1\n  ['autumn', 2, 1], //march 1\n  ['winter', 5, 1], //june 1\n  ['spring', 8, 1], //sept 1\n  ['summer', 11, 1] //dec 1\n  ]\n};\nvar quarters = [null, [0, 1], //jan 1\n[3, 1], //apr 1\n[6, 1], //july 1\n[9, 1] //oct 1\n];\nvar units$1 = {\n  minute: function minute(s) {\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  quarterhour: function quarterhour(s) {\n    var minute = s.minutes();\n\n    if (minute >= 45) {\n      s = s.minutes(45);\n    } else if (minute >= 30) {\n      s = s.minutes(30);\n    } else if (minute >= 15) {\n      s = s.minutes(15);\n    } else {\n      s = s.minutes(0);\n    }\n\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  hour: function hour(s) {\n    walk_1(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  day: function day(s) {\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  week: function week(s) {\n    var original = s.clone();\n    s = s.day(s._weekStart); //monday\n\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week');\n    }\n\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  month: function month(s) {\n    walk_1(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  quarter: function quarter(s) {\n    var q = s.quarter();\n\n    if (quarters[q]) {\n      walk_1(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n    }\n\n    return s;\n  },\n  season: function season(s) {\n    var current = s.season();\n    var hem = 'north';\n\n    if (s.hemisphere() === 'South') {\n      hem = 'south';\n    }\n\n    for (var i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        var year = s.year();\n\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1;\n        }\n\n        walk_1(s, {\n          year: year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n        return s;\n      }\n    }\n\n    return s;\n  },\n  year: function year(s) {\n    walk_1(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  decade: function decade(s) {\n    s = s.startOf('year');\n    var year = s.year();\n    var decade = parseInt(year / 10, 10) * 10;\n    s = s.year(decade);\n    return s;\n  },\n  century: function century(s) {\n    s = s.startOf('year');\n    var year = s.year(); // near 0AD goes '-1 | +1'\n\n    var decade = parseInt(year / 100, 10) * 100;\n    s = s.year(decade);\n    return s;\n  }\n};\nunits$1.date = units$1.day;\n\nvar startOf = function startOf(a, unit) {\n  var s = a.clone();\n  unit = fns.normalize(unit);\n\n  if (units$1[unit]) {\n    return units$1[unit](s);\n  }\n\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit);\n    return units$1.season(s);\n  }\n\n  return s;\n}; //piggy-backs off startOf\n\n\nvar endOf = function endOf(a, unit) {\n  var s = a.clone();\n  unit = fns.normalize(unit);\n\n  if (units$1[unit]) {\n    // go to beginning, go to next one, step back 1ms\n    s = units$1[unit](s); // startof\n\n    s = s.add(1, unit);\n    s = s.subtract(1, 'millisecond');\n    return s;\n  }\n\n  return s;\n};\n\nvar startOf_1 = {\n  startOf: startOf,\n  endOf: endOf\n};\n\nvar isDay = function isDay(unit) {\n  if (days[\"short\"]().find(function (s) {\n    return s === unit;\n  })) {\n    return true;\n  }\n\n  if (days[\"long\"]().find(function (s) {\n    return s === unit;\n  })) {\n    return true;\n  }\n\n  return false;\n}; // return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\n\n\nvar every = function every(start) {\n  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (!unit || !end) {\n    return [];\n  } //cleanup unit param\n\n\n  unit = fns.normalize(unit); //cleanup to param\n\n  end = start.clone().set(end); //swap them, if they're backwards\n\n  if (start.isAfter(end)) {\n    var tmp = start;\n    start = end;\n    end = tmp;\n  } //support 'every wednesday'\n\n\n  var d = start.clone();\n\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    d = d.next(unit);\n  } //okay, actually start doing it\n\n\n  var result = [];\n\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n\n  return result;\n};\n\nvar every_1 = every;\n\nvar parseDst = function parseDst(dst) {\n  if (!dst) {\n    return [];\n  }\n\n  return dst.split('->');\n};\n\nvar titleCase = function titleCase(str) {\n  str = str[0].toUpperCase() + str.substr(1);\n  str = str.replace(/\\/gmt/, '/GMT');\n  str = str.replace(/[\\/_]([a-z])/gi, function (s) {\n    return s.toUpperCase();\n  });\n  return str;\n}; //get metadata about this timezone\n\n\nvar timezone = function timezone(s) {\n  var zones = s.timezones;\n  var tz = s.tz;\n\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = find(s.tz, zones);\n  }\n\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n    }\n\n    return {\n      current: {\n        epochShift: 0\n      }\n    };\n  }\n\n  var found = zones[tz];\n  var result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  };\n\n  if (result.hasDst) {\n    var arr = parseDst(found.dst);\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    };\n  } //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n\n\n  var summer = found.offset; // (july)\n\n  var winter = summer; // (january) assume it's the same for now\n\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1;\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1;\n    }\n  } //find out which offset to use right now\n  //use 'summer' time july-time\n\n\n  if (result.hasDst === false) {\n    result.current.offset = summer;\n    result.current.isDST = false;\n  } else if (summerTime(s.epoch, result.change.start, result.change.back, summer, winter) === true) {\n    result.current.offset = summer;\n    result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter;\n    result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n  }\n\n  return result;\n};\n\nvar timezone_1 = timezone;\nvar units = ['century', 'decade', 'year', 'month', 'date', 'day', 'hour', 'minute', 'second', 'millisecond']; //the spacetime instance methods (also, the API)\n\nvar methods$4 = {\n  set: function set(input$1, tz) {\n    var s = this.clone();\n    s = input(s, input$1, null);\n\n    if (tz) {\n      this.tz = find(tz);\n    }\n\n    return s;\n  },\n  timezone: function timezone() {\n    return timezone_1(this);\n  },\n  isDST: function isDST() {\n    return timezone_1(this).current.isDST;\n  },\n  hasDST: function hasDST() {\n    return timezone_1(this).hasDst;\n  },\n  offset: function offset() {\n    return timezone_1(this).current.offset * 60;\n  },\n  hemisphere: function hemisphere() {\n    return timezone_1(this).hemisphere;\n  },\n  format: function format(fmt) {\n    return format_1(this, fmt);\n  },\n  unixFmt: function unixFmt(fmt) {\n    return unixFmt_1(this, fmt);\n  },\n  startOf: function startOf(unit) {\n    return startOf_1.startOf(this, unit);\n  },\n  endOf: function endOf(unit) {\n    return startOf_1.endOf(this, unit);\n  },\n  leapYear: function leapYear() {\n    var year = this.year();\n    return fns.isLeapYear(year);\n  },\n  progress: function progress(unit) {\n    return progress_1(this, unit);\n  },\n  nearest: function nearest(unit) {\n    return nearest_1(this, unit);\n  },\n  diff: function diff$1(d, unit) {\n    return diff(this, d, unit);\n  },\n  since: function since(d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n\n    return since_1(this, d);\n  },\n  next: function next(unit) {\n    var s = this.add(1, unit);\n    return s.startOf(unit);\n  },\n  //the start of the previous year/week/century\n  last: function last(unit) {\n    var s = this.subtract(1, unit);\n    return s.startOf(unit);\n  },\n  isValid: function isValid() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false;\n    }\n\n    return !isNaN(this.d.getTime());\n  },\n  //travel to this timezone\n  \"goto\": function goto(tz) {\n    var s = this.clone();\n    s.tz = find(tz, s.timezones); //science!\n\n    return s;\n  },\n  //get each week/month/day between a -> b\n  every: function every(unit, to) {\n    // allow swapping these params:\n    if (_typeof(unit) === 'object' && typeof to === 'string') {\n      var tmp = to;\n      to = unit;\n      unit = tmp;\n    }\n\n    return every_1(this, unit, to);\n  },\n  isAwake: function isAwake() {\n    var hour = this.hour(); //10pm -> 8am\n\n    if (hour < 8 || hour > 22) {\n      return false;\n    }\n\n    return true;\n  },\n  isAsleep: function isAsleep() {\n    return !this.isAwake();\n  },\n  //pretty-printing\n  log: function log() {\n    console.log('');\n    console.log(format_1(this, 'nice-short'));\n    return this;\n  },\n  logYear: function logYear() {\n    console.log('');\n    console.log(format_1(this, 'full-short'));\n    return this;\n  },\n  json: function json() {\n    var _this = this;\n\n    return units.reduce(function (h, unit) {\n      h[unit] = _this[unit]();\n      return h;\n    }, {});\n  },\n  debug: function debug() {\n    var tz = this.timezone();\n    var date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this;\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function from(d) {\n    d = this.clone().set(d);\n    return d.since(this);\n  },\n  fromNow: function fromNow() {\n    var d = this.clone().set(Date.now());\n    return d.since(this);\n  },\n  weekStart: function weekStart(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this;\n    }\n\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      var num = days[\"short\"]().indexOf(input);\n\n      if (num === -1) {\n        num = days[\"long\"]().indexOf(input);\n      }\n\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n\n    return this;\n  }\n}; // aliases\n\nmethods$4.inDST = methods$4.isDST;\nmethods$4.round = methods$4.nearest;\nmethods$4.each = methods$4.every;\nvar methods_1 = methods$4; //these methods wrap around them.\n\nvar isLeapYear$1 = fns.isLeapYear;\n\nvar validate = function validate(n) {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n\n  return n;\n};\n\nvar order$1 = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']; //reduce hostile micro-changes when moving dates by millisecond\n\nvar confirm = function confirm(s, tmp, unit) {\n  var n = order$1.indexOf(unit);\n  var arr = order$1.slice(n, order$1.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    var want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n\n  return s;\n};\n\nvar set = {\n  milliseconds: function milliseconds(s, n) {\n    n = validate(n);\n    var current = s.millisecond();\n    var diff = current - n; //milliseconds to shift by\n\n    return s.epoch - diff;\n  },\n  seconds: function seconds(s, n) {\n    n = validate(n);\n    var diff = s.second() - n;\n    var shift = diff * milliseconds.second;\n    return s.epoch - shift;\n  },\n  minutes: function minutes(s, n) {\n    n = validate(n);\n    var old = s.clone();\n    var diff = s.minute() - n;\n    var shift = diff * milliseconds.minute;\n    s.epoch -= shift; // check against a screw-up\n    // if (old.hour() != s.hour()) {\n    //   walkTo(old, {\n    //     minute: n\n    //   })\n    //   return old.epoch\n    // }\n\n    confirm(s, old, 'second');\n    return s.epoch;\n  },\n  hours: function hours(s, n) {\n    n = validate(n);\n\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n\n    var old = s.clone();\n    var diff = s.hour() - n;\n    var shift = diff * milliseconds.hour;\n    s.epoch -= shift; // oops, did we change the day?\n\n    if (s.date() !== old.date()) {\n      s = old.clone();\n\n      if (diff > 1) {\n        diff -= 1;\n      }\n\n      if (diff < 1) {\n        diff += 1;\n      }\n\n      shift = diff * milliseconds.hour;\n      s.epoch -= shift;\n    }\n\n    walk_1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    return s.epoch;\n  },\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: function time(s, str) {\n    var m = str.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/);\n\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2}) ?(am|pm)/);\n\n      if (!m) {\n        return s.epoch;\n      }\n\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n\n      m.splice(3, 0, ''); //add implicit seconds\n    }\n\n    var h24 = false;\n    var hour = parseInt(m[1], 10);\n    var minute = parseInt(m[2], 10);\n\n    if (hour > 12) {\n      h24 = true;\n    } //make the hour into proper 24h time\n\n\n    if (h24 === false) {\n      if (m[4] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n\n      if (m[4] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    } // handle seconds\n\n\n    m[3] = m[3] || '';\n    m[3] = m[3].replace(/:/, '');\n    var sec = parseInt(m[3], 10) || 0;\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(sec);\n    s = s.millisecond(0);\n    return s.epoch;\n  },\n  date: function date(s, n) {\n    n = validate(n); //avoid setting february 31st\n\n    if (n > 28) {\n      var month = s.month();\n      var max = monthLengths_1[month]; // support leap day in february\n\n      if (month === 1 && n === 29 && isLeapYear$1(s.year())) {\n        max = 29;\n      }\n\n      if (n > max) {\n        n = max;\n      }\n    } //avoid setting < 0\n\n\n    if (n <= 0) {\n      n = 1;\n    }\n\n    walk_1(s, {\n      date: n\n    });\n    return s.epoch;\n  },\n  //this one's tricky\n  month: function month(s, n) {\n    if (typeof n === 'string') {\n      n = months$1.mapping()[n.toLowerCase()];\n    }\n\n    n = validate(n); //don't go past december\n\n    if (n >= 12) {\n      n = 11;\n    }\n\n    if (n <= 0) {\n      n = 0;\n    }\n\n    var date = s.date(); //there's no 30th of february, etc.\n\n    if (date > monthLengths_1[n]) {\n      //make it as close as we can..\n      date = monthLengths_1[n];\n    }\n\n    walk_1(s, {\n      month: n,\n      date: date\n    });\n    return s.epoch;\n  },\n  year: function year(s, n) {\n    // support '97\n    if (typeof n === 'string' && /^'[0-9]{2}$/.test(n)) {\n      n = n.replace(/'/, '').trim();\n      n = Number(n); // '89 is 1989\n\n      if (n > 30) {\n        //change this in 10y\n        n = 1900 + n;\n      } else {\n        // '12 is 2012\n        n = 2000 + n;\n      }\n    }\n\n    n = validate(n);\n    walk_1(s, {\n      year: n\n    });\n    return s.epoch;\n  },\n  dayOfYear: function dayOfYear(s, n) {\n    n = validate(n);\n    var old = s.clone();\n    n -= 1; //days are 1-based\n\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      n = 364;\n    }\n\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    return s.epoch;\n  }\n};\nvar methods$3 = {\n  millisecond: function millisecond(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.milliseconds(s, num);\n      return s;\n    }\n\n    return this.d.getMilliseconds();\n  },\n  second: function second(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.seconds(s, num);\n      return s;\n    }\n\n    return this.d.getSeconds();\n  },\n  minute: function minute(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.minutes(s, num);\n      return s;\n    }\n\n    return this.d.getMinutes();\n  },\n  hour: function hour(num) {\n    var d = this.d;\n\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.hours(s, num);\n      return s;\n    }\n\n    return d.getHours();\n  },\n  //'3:30' is 3.5\n  hourFloat: function hourFloat(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n\n      var _minute = num % 1;\n\n      _minute = _minute * 60;\n\n      var _hour = parseInt(num, 10);\n\n      s.epoch = set.hours(s, _hour);\n      s.epoch = set.minutes(s, _minute);\n      return s;\n    }\n\n    var d = this.d;\n    var hour = d.getHours();\n    var minute = d.getMinutes();\n    minute = minute / 60;\n    return hour + minute;\n  },\n  // hour in 12h format\n  hour12: function hour12(str) {\n    var d = this.d;\n\n    if (str !== undefined) {\n      var s = this.clone();\n      str = '' + str;\n      var m = str.match(/^([0-9]+)(am|pm)$/);\n\n      if (m) {\n        var hour = parseInt(m[1], 10);\n\n        if (m[2] === 'pm') {\n          hour += 12;\n        }\n\n        s.epoch = set.hours(s, hour);\n      }\n\n      return s;\n    } //get the hour\n\n\n    var hour12 = d.getHours();\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    }\n\n    if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    return hour12;\n  },\n  //some ambiguity here with 12/24h\n  time: function time(str) {\n    if (str !== undefined) {\n      var s = this.clone();\n      str = str.toLowerCase().trim();\n      s.epoch = set.time(s, str);\n      return s;\n    }\n\n    return \"\".concat(this.h12(), \":\").concat(fns.zeroPad(this.minute())).concat(this.ampm());\n  },\n  // either 'am' or 'pm'\n  ampm: function ampm(input) {\n    var which = 'am';\n    var hour = this.hour();\n\n    if (hour >= 12) {\n      which = 'pm';\n    }\n\n    if (typeof input !== 'string') {\n      return which;\n    } //okay, we're doing a setter\n\n\n    var s = this.clone();\n    input = input.toLowerCase().trim(); //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12;\n      return s.hour(hour);\n    }\n\n    if (hour < 12 && input === 'pm') {\n      hour += 12;\n      return s.hour(hour);\n    }\n\n    return s;\n  },\n  //some hard-coded times of day, like 'noon'\n  dayTime: function dayTime(str) {\n    if (str !== undefined) {\n      var times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      };\n      var s = this.clone();\n      str = str || '';\n      str = str.toLowerCase();\n\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str]);\n      }\n\n      return s;\n    }\n\n    var h = this.hour();\n\n    if (h < 6) {\n      return 'night';\n    }\n\n    if (h < 12) {\n      //until noon\n      return 'morning';\n    }\n\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon';\n    }\n\n    if (h < 22) {\n      //until 10pm\n      return 'evening';\n    }\n\n    return 'night';\n  },\n  //parse a proper iso string\n  iso: function iso(num) {\n    if (num !== undefined) {\n      return this.set(num);\n    }\n\n    return this.format('iso');\n  }\n};\nvar _01Time = methods$3;\nvar methods$2 = {\n  // # day in the month\n  date: function date(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      num = parseInt(num, 10);\n\n      if (num) {\n        s.epoch = set.date(s, num);\n      }\n\n      return s;\n    }\n\n    return this.d.getDate();\n  },\n  //like 'wednesday' (hard!)\n  day: function day(input) {\n    if (input === undefined) {\n      return this.d.getDay();\n    }\n\n    var original = this.clone();\n    var want = input; // accept 'wednesday'\n\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n\n      if (days.aliases.hasOwnProperty(input)) {\n        want = days.aliases[input];\n      } else {\n        want = days[\"short\"]().indexOf(input);\n\n        if (want === -1) {\n          want = days[\"long\"]().indexOf(input);\n        }\n      }\n    } //move approx\n\n\n    var day = this.d.getDay();\n    var diff = day - want;\n    var s = this.subtract(diff, 'days'); //tighten it back up\n\n    walk_1(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s;\n  },\n  //these are helpful name-wrappers\n  dayName: function dayName(input) {\n    if (input === undefined) {\n      return days[\"long\"]()[this.day()];\n    }\n\n    var s = this.clone();\n    s = s.day(input);\n    return s;\n  },\n  //either name or number\n  month: function month(input) {\n    if (input !== undefined) {\n      var s = this.clone();\n      s.epoch = set.month(s, input);\n      return s;\n    }\n\n    return this.d.getMonth();\n  }\n};\nvar _02Date = methods$2;\n\nvar clearMinutes = function clearMinutes(s) {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s;\n};\n\nvar methods$1 = {\n  // day 0-366\n  dayOfYear: function dayOfYear(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.dayOfYear(s, num);\n      return s;\n    } //days since newyears - jan 1st is 1, jan 2nd is 2...\n\n\n    var sum = 0;\n    var month = this.d.getMonth();\n    var tmp; //count the num days in each month\n\n    for (var i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n\n      sum += tmp.getDate();\n    }\n\n    return sum + this.d.getDate();\n  },\n  //since the start of the year\n  week: function week(num) {\n    // week-setter\n    if (num !== undefined) {\n      var s = this.clone();\n      s = s.month(0);\n      s = s.date(1);\n      s = s.day('monday');\n      s = clearMinutes(s); //first week starts first Thurs in Jan\n      // so mon dec 28th is 1st week\n      // so mon dec 29th is not the week\n\n      if (s.monthName() === 'december' && s.date() >= 28) {\n        s = s.add(1, 'week');\n      }\n\n      num -= 1; //1-based\n\n      s = s.add(num, 'weeks');\n      return s;\n    } //find-out which week it is\n\n\n    var tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday'); //don't go into last-year\n\n    if (tmp.monthName() === 'december' && tmp.date() >= 28) {\n      tmp = tmp.add(1, 'week');\n    } // is first monday the 1st?\n\n\n    var toAdd = 1;\n\n    if (tmp.date() === 1) {\n      toAdd = 0;\n    }\n\n    tmp = tmp.minus(1, 'second');\n    var thisOne = this.epoch; //if the week technically hasn't started yet\n\n    if (tmp.epoch > thisOne) {\n      return 1;\n    } //speed it up, if we can\n\n\n    var i = 0;\n    var skipWeeks = this.month() * 4;\n    tmp.epoch += milliseconds.week * skipWeeks;\n    i += skipWeeks;\n\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd;\n      }\n\n      tmp = tmp.add(1, 'week');\n    }\n\n    return 52;\n  },\n  //'january'\n  monthName: function monthName(input) {\n    if (input === undefined) {\n      return months$1[\"long\"]()[this.month()];\n    }\n\n    var s = this.clone();\n    s = s.month(input);\n    return s;\n  },\n  //q1, q2, q3, q4\n  quarter: function quarter(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n\n      if (quarters[num]) {\n        var s = this.clone();\n        var _month = quarters[num][0];\n        s = s.month(_month);\n        s = s.date(1);\n        s = s.startOf('day');\n        return s;\n      }\n    }\n\n    var month = this.d.getMonth();\n\n    for (var i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1;\n      }\n    }\n\n    return 4;\n  },\n  //spring, summer, winter, fall\n  season: function season(input) {\n    var hem = 'north';\n\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n\n    if (input !== undefined) {\n      var s = this.clone();\n\n      for (var i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1]);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n\n      return s;\n    }\n\n    var month = this.d.getMonth();\n\n    for (var _i = 0; _i < seasons[hem].length - 1; _i++) {\n      if (month >= seasons[hem][_i][1] && month < seasons[hem][_i + 1][1]) {\n        return seasons[hem][_i][0];\n      }\n    }\n\n    return 'winter';\n  },\n  //the year number\n  year: function year(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.year(s, num);\n      return s;\n    }\n\n    return this.d.getFullYear();\n  },\n  //bc/ad years\n  era: function era(str) {\n    if (str !== undefined) {\n      var s = this.clone();\n      str = str.toLowerCase(); //TODO: there is no year-0AD i think. may have off-by-1 error here\n\n      var year = s.d.getFullYear(); //make '1992' into 1992bc..\n\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1);\n      } //make '1992bc' into '1992'\n\n\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n\n      return s;\n    }\n\n    if (this.d.getFullYear() < 0) {\n      return 'BC';\n    }\n\n    return 'AD';\n  },\n  // 2019 -> 2010\n  decade: function decade(input) {\n    if (input !== undefined) {\n      input = String(input);\n      input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input');\n        return this;\n      } // assume 20th century?? for '70s'.\n\n\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input;\n      }\n\n      var year = Number(input);\n\n      if (isNaN(year)) {\n        return this;\n      } // round it down to the decade\n\n\n      year = Math.floor(year / 10) * 10;\n      return this.year(year); //.startOf('decade')\n    }\n\n    return this.startOf('decade').year();\n  },\n  // 1950 -> 19+1\n  century: function century(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, function (a, b, c) {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b;\n          }\n\n          return b;\n        });\n        input = input.replace(/c$/, ''); //20thC\n      }\n\n      var year = Number(input);\n\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input');\n        return this;\n      } // there is no century 0\n\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      if (year >= 0) {\n        year = (year - 1) * 100;\n      } else {\n        year = (year + 1) * 100;\n      }\n\n      return this.year(year);\n    } // century getter\n\n\n    var num = this.startOf('century').year();\n    num = Math.floor(num / 100);\n\n    if (num < 0) {\n      return num - 1;\n    }\n\n    return num + 1;\n  },\n  // 2019 -> 2+1\n  millenium: function millenium(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = Number(input);\n\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input');\n          return this;\n        }\n      }\n\n      if (input > 0) {\n        input -= 1;\n      }\n\n      var year = input * 1000; // there is no year 0\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      return this.year(year);\n    } // get the current millenium\n\n\n    var num = Math.floor(this.year() / 1000);\n\n    if (num >= 0) {\n      num += 1;\n    }\n\n    return num;\n  }\n};\nvar _03Year = methods$1;\nvar methods = Object.assign({}, _01Time, _02Date, _03Year); //aliases\n\nmethods.milliseconds = methods.millisecond;\nmethods.seconds = methods.second;\nmethods.minutes = methods.minute;\nmethods.hours = methods.hour;\nmethods.hour24 = methods.hour;\nmethods.h12 = methods.hour12;\nmethods.h24 = methods.hour24;\nmethods.days = methods.day;\n\nvar addMethods$4 = function addMethods(Space) {\n  //hook the methods into prototype\n  Object.keys(methods).forEach(function (k) {\n    Space.prototype[k] = methods[k];\n  });\n};\n\nvar query = addMethods$4;\nvar isLeapYear = fns.isLeapYear;\n\nvar getMonthLength = function getMonthLength(month, year) {\n  if (month === 1 && isLeapYear(year)) {\n    return 29;\n  }\n\n  return monthLengths_1[month];\n}; //month is the one thing we 'model/compute'\n//- because ms-shifting can be off by enough\n\n\nvar rollMonth = function rollMonth(want, old) {\n  //increment year\n  if (want.month > 0) {\n    var years = parseInt(want.month / 12, 10);\n    want.year = old.year() + years;\n    want.month = want.month % 12;\n  } else if (want.month < 0) {\n    //decrement year\n    var _years = Math.floor(Math.abs(want.month) / 13, 10);\n\n    _years = Math.abs(_years) + 1;\n    want.year = old.year() - _years; //ignore extras\n\n    want.month = want.month % 12;\n    want.month = want.month + 12;\n\n    if (want.month === 12) {\n      want.month = 0;\n    }\n  }\n\n  return want;\n}; // briefly support day=-2 (this does not need to be perfect.)\n\n\nvar rollDaysDown = function rollDaysDown(want, old, sum) {\n  want.year = old.year();\n  want.month = old.month();\n  var date = old.date();\n  want.date = date - Math.abs(sum);\n\n  while (want.date < 1) {\n    want.month -= 1;\n\n    if (want.month < 0) {\n      want.month = 11;\n      want.year -= 1;\n    }\n\n    var max = getMonthLength(want.month, want.year);\n    want.date += max;\n  }\n\n  return want;\n}; // briefly support day=33 (this does not need to be perfect.)\n\n\nvar rollDaysUp = function rollDaysUp(want, old, sum) {\n  var year = old.year();\n  var month = old.month();\n  var max = getMonthLength(month, year);\n\n  while (sum > max) {\n    sum -= max;\n    month += 1;\n\n    if (month >= 12) {\n      month -= 12;\n      year += 1;\n    }\n\n    max = getMonthLength(month, year);\n  }\n\n  want.month = month;\n  want.date = sum;\n  return want;\n};\n\nvar _model = {\n  months: rollMonth,\n  days: rollDaysUp,\n  daysBack: rollDaysDown\n}; // but briefly:\n// millisecond-math, and some post-processing covers most-things\n// we 'model' the calendar here only a little bit\n// and that usually works-out...\n\nvar order = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\nvar keep = {\n  second: order.slice(0, 1),\n  minute: order.slice(0, 2),\n  quarterhour: order.slice(0, 2),\n  hour: order.slice(0, 3),\n  date: order.slice(0, 4),\n  month: order.slice(0, 4),\n  quarter: order.slice(0, 4),\n  season: order.slice(0, 4),\n  year: order,\n  decade: order,\n  century: order\n};\nkeep.week = keep.hour;\nkeep.season = keep.date;\nkeep.quarter = keep.date; // Units need to be dst adjuested\n\nvar dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n};\nvar keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n};\n\nvar addMethods$3 = function addMethods(SpaceTime) {\n  SpaceTime.prototype.add = function (num, unit) {\n    var s = this.clone();\n\n    if (!unit || num === 0) {\n      return s; //don't bother\n    }\n\n    var old = this.clone();\n    unit = fns.normalize(unit);\n\n    if (unit === 'millisecond') {\n      s.epoch += num;\n      return s;\n    } // support 'fortnight' alias\n\n\n    if (unit === 'fortnight') {\n      num *= 2;\n      unit = 'week';\n    } //move forward by the estimated milliseconds (rough)\n\n\n    if (milliseconds[unit]) {\n      s.epoch += milliseconds[unit] * num;\n    } else if (unit === 'week') {\n      s.epoch += milliseconds.day * (num * 7);\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += milliseconds.month * (num * 3);\n    } else if (unit === 'quarterhour') {\n      s.epoch += milliseconds.minute * 15 * num;\n    } //now ensure our milliseconds/etc are in-line\n\n\n    var want = {};\n\n    if (keep[unit]) {\n      keep[unit].forEach(function (u) {\n        want[u] = old[u]();\n      });\n    }\n\n    if (dstAwareUnits[unit]) {\n      var diff = old.timezone().current.offset - s.timezone().current.offset;\n      s.epoch += diff * 3600 * 1000;\n    } //ensure month/year has ticked-over\n\n\n    if (unit === 'month') {\n      want.month = old.month() + num; //month is the one unit we 'model' directly\n\n      want = _model.months(want, old);\n    } //support coercing a week, too\n\n\n    if (unit === 'week') {\n      var sum = old.date() + num * 7;\n\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n    } //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n        if (num < 0) {\n          want = _model.daysBack(want, old, num);\n        } else {\n          //specify a naive date number, if it's easy to do...\n          var _sum = old.date() + num; // ok, model this one too\n\n\n          want = _model.days(want, old, _sum);\n        } //manually punt it if we haven't moved at all..\n\n\n        if (num !== 0 && old.isSame(s, 'day')) {\n          want.date = old.date() + num;\n        }\n      } // ensure a quarter is 3 months over\n      else if (unit === 'quarter') {\n          want.month = old.month() + num * 3;\n          want.year = old.year(); // handle rollover\n\n          if (want.month < 0) {\n            var years = Math.floor(want.month / 12);\n            var remainder = want.month + Math.abs(years) * 12;\n            want.month = remainder;\n            want.year += years;\n          } else if (want.month >= 12) {\n            var _years = Math.floor(want.month / 12);\n\n            want.month = want.month % 12;\n            want.year += _years;\n          }\n\n          want.date = old.date();\n        } //ensure year has changed (leap-years)\n        else if (unit === 'year') {\n            var wantYear = old.year() + num;\n            var haveYear = s.year();\n\n            if (haveYear < wantYear) {\n              s.epoch += milliseconds.day;\n            } else if (haveYear > wantYear) {\n              s.epoch += milliseconds.day;\n            }\n          } //these are easier\n          else if (unit === 'decade') {\n              want.year = s.year() + 10;\n            } else if (unit === 'century') {\n              want.year = s.year() + 100;\n            } //keep current date, unless the month doesn't have it.\n\n\n    if (keepDate[unit]) {\n      var max = monthLengths_1[want.month];\n      want.date = old.date();\n\n      if (want.date > max) {\n        want.date = max;\n      }\n    }\n\n    if (Object.keys(want).length > 1) {\n      walk_1(s, want);\n    }\n\n    return s;\n  }; //subtract is only add *-1\n\n\n  SpaceTime.prototype.subtract = function (num, unit) {\n    var s = this.clone();\n    return s.add(num * -1, unit);\n  }; //add aliases\n\n\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n  SpaceTime.prototype.plus = SpaceTime.prototype.add;\n};\n\nvar add = addMethods$3; //make a string, for easy comparison between dates\n\nvar print = {\n  millisecond: function millisecond(s) {\n    return s.epoch;\n  },\n  second: function second(s) {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-');\n  },\n  minute: function minute(s) {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-');\n  },\n  hour: function hour(s) {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-');\n  },\n  day: function day(s) {\n    return [s.year(), s.month(), s.date()].join('-');\n  },\n  week: function week(s) {\n    return [s.year(), s.week()].join('-');\n  },\n  month: function month(s) {\n    return [s.year(), s.month()].join('-');\n  },\n  quarter: function quarter(s) {\n    return [s.year(), s.quarter()].join('-');\n  },\n  year: function year(s) {\n    return s.year();\n  }\n};\nprint.date = print.day;\n\nvar addMethods$2 = function addMethods(SpaceTime) {\n  SpaceTime.prototype.isSame = function (b, unit) {\n    var tzAware = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var a = this;\n\n    if (!unit) {\n      return null;\n    } // support swapped params\n\n\n    if (typeof b === 'string' && _typeof(unit) === 'object') {\n      var tmp = b;\n      b = unit;\n      unit = tmp;\n    }\n\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name);\n    } //support 'seconds' aswell as 'second'\n\n\n    unit = unit.replace(/s$/, ''); // make them the same timezone for proper comparison\n\n    if (tzAware === true && a.tz !== b.tz) {\n      b = b.clone();\n      b.tz = a.tz;\n    }\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b);\n    }\n\n    return null;\n  };\n};\n\nvar same = addMethods$2;\n\nvar addMethods$1 = function addMethods(SpaceTime) {\n  var methods = {\n    isAfter: function isAfter(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch > epoch;\n    },\n    isBefore: function isBefore(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch < epoch;\n    },\n    isEqual: function isEqual(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch === epoch;\n    },\n    isBetween: function isBetween(start, end) {\n      var isInclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      start = fns.beADate(start, this);\n      end = fns.beADate(end, this);\n      var startEpoch = fns.getEpoch(start);\n\n      if (startEpoch === null) {\n        return null;\n      }\n\n      var endEpoch = fns.getEpoch(end);\n\n      if (endEpoch === null) {\n        return null;\n      }\n\n      if (isInclusive) {\n        return this.isBetween(start, end) || this.isEqual(start) || this.isEqual(end);\n      }\n\n      return startEpoch < this.epoch && this.epoch < endEpoch;\n    }\n  }; //hook them into proto\n\n  Object.keys(methods).forEach(function (k) {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar compare = addMethods$1;\n\nvar addMethods = function addMethods(SpaceTime) {\n  var methods = {\n    i18n: function i18n(data) {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days);\n      } //change the month names\n\n\n      if (fns.isObject(data.months)) {\n        months$1.set(data.months);\n      } // change the the display style of the month / day names\n\n\n      if (fns.isBoolean(data.useTitleCase)) {\n        caseFormat.set(data.useTitleCase);\n      }\n    }\n  }; //hook them into proto\n\n  Object.keys(methods).forEach(function (k) {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar i18n = addMethods;\nvar timezones = unpack; //fake timezone-support, for fakers (es5 class)\n\nvar SpaceTime = function SpaceTime(input$1, tz) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; //the holy moment\n\n  this.epoch = null; //the shift for the given timezone\n\n  this.tz = find(tz, timezones); //whether to output warnings to console\n\n  this.silent = options.silent || true; // favour british interpretation of 02/02/2018, etc\n\n  this.british = options.dmy || options.british; //does the week start on sunday, or monday:\n\n  this._weekStart = 1; //default to monday\n\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  } // the reference today date object, (for testing)\n\n\n  this._today = {};\n\n  if (options.today !== undefined) {\n    this._today = options.today;\n  } //add getter/setters\n\n\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function get() {\n      var offset = quick(this); //every computer is somewhere- get this computer's built-in offset\n\n      var bias = new Date(this.epoch).getTimezoneOffset() || 0; //movement\n\n      var shift = bias + offset * 60; //in minutes\n\n      shift = shift * 60 * 1000; //in ms\n      //remove this computer's offset\n\n      var epoch = this.epoch + shift;\n      var d = new Date(epoch);\n      return d;\n    }\n  }); //add this data on the object, to allow adding new timezones\n\n  Object.defineProperty(this, 'timezones', {\n    get: function get() {\n      return timezones;\n    },\n    set: function set(obj) {\n      timezones = obj;\n      return obj;\n    }\n  }); //parse the various formats\n\n  var tmp = input(this, input$1, tz);\n  this.epoch = tmp.epoch;\n}; //(add instance methods to prototype)\n\n\nObject.keys(methods_1).forEach(function (k) {\n  SpaceTime.prototype[k] = methods_1[k];\n}); // ¯\\_(ツ)_/¯\n\nSpaceTime.prototype.clone = function () {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart,\n    today: this._today\n  });\n}; //return native date object at the same epoch\n\n\nSpaceTime.prototype.toLocalDate = function () {\n  return new Date(this.epoch);\n}; //append more methods\n\n\nquery(SpaceTime);\nadd(SpaceTime);\nsame(SpaceTime);\ncompare(SpaceTime);\ni18n(SpaceTime);\nvar spacetime = SpaceTime;\n\nvar whereIts = function whereIts(a, b) {\n  var start = new spacetime(null);\n  var end = new spacetime(null);\n  start = start.time(a); //if b is undefined, use as 'within one hour'\n\n  if (b) {\n    end = end.time(b);\n  } else {\n    end = start.add(59, 'minutes');\n  }\n\n  var startHour = start.hour();\n  var endHour = end.hour();\n  var tzs = Object.keys(start.timezones).filter(function (tz) {\n    if (tz.indexOf('/') === -1) {\n      return false;\n    }\n\n    var m = new spacetime(null, tz);\n    var hour = m.hour(); //do 'calendar-compare' not real-time-compare\n\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false;\n      }\n\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return tzs;\n};\n\nvar whereIts_1 = whereIts;\nvar _version = '6.14.0';\n\nvar main = function main(input, tz, options) {\n  return new spacetime(input, tz, options);\n}; // set all properties of a given 'today' object\n\n\nvar setToday = function setToday(s) {\n  var today = s._today || {};\n  Object.keys(today).forEach(function (k) {\n    s = s[k](today[k]);\n  });\n  return s;\n}; //some helper functions on the main method\n\n\nmain.now = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s;\n};\n\nmain.today = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.startOf('day');\n};\n\nmain.tomorrow = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.add(1, 'day').startOf('day');\n};\n\nmain.yesterday = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.subtract(1, 'day').startOf('day');\n};\n\nmain.extend = function (obj) {\n  Object.keys(obj).forEach(function (k) {\n    spacetime.prototype[k] = obj[k];\n  });\n  return this;\n};\n\nmain.timezones = function () {\n  var s = new spacetime();\n  return s.timezones;\n};\n\nmain.max = function (tz, options) {\n  var s = new spacetime(null, tz, options);\n  s.epoch = 8640000000000000;\n  return s;\n};\n\nmain.min = function (tz, options) {\n  var s = new spacetime(null, tz, options);\n  s.epoch = -8640000000000000;\n  return s;\n}; //find tz by time\n\n\nmain.whereIts = whereIts_1;\nmain.version = _version; //aliases:\n\nmain.plugin = main.extend;\nvar src = main;\nexport default src;","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/node_modules/spacetime/builds/spacetime.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","Array","isArray","Object","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","o","minLen","_arrayLikeToArray","n","toString","call","slice","name","from","test","len","arr2","TypeError","MSEC_IN_HOUR","toUtc","dstChange","offset","year","_dstChange$split","split","_dstChange$split2","month","rest","_rest$split","_rest$split2","day","hour","Date","UTC","inSummerTime","epoch","start","end","summerOffset","winterOffset","getUTCFullYear","startUtc","endUtc","summerTime","quickOffset","s","zones","timezones","tz","console","warn","dst","jul","dec","hem","inSummer","quick","_build","_build$1","freeze","__proto__","_prefixes","createCommonjsModule","fn","module","exports","getCjsExportFromNamespace","data","all","keys","forEach","k","Number","names","str","replace","before","num","unpack","fallbackTZ","safeIntl","Intl","DateTimeFormat","format","resolvedOptions","timezone","timeZone","toLowerCase","guessTz","guessTz_1","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset$1","parseOffset","m","match","parseOffset_1$1","local","cities","reduce","h","city","normalize","lookupTz","error","trim","hasOwnProperty","id","Error","find","millisecond","second","minute","date","week","milliseconds","walk","unit","previous","current","d","startUnit","original","diff","Math","abs","halfStep","units$3","valid","walkTo","getMonth","getFullYear","seconds","wants","old","clone","parseInt","silent","walk_1","shortMonths","longMonths","buildMapping","sep","months$1","short","long","mapping","set","i18n","parseFloat","parseOffset_1","parseTime","arguments","startOf","concat","substring","ampm","_h","parseTime_1","monthLengths","monthLengths_1","fns","isLeapYear","isDate","isNaN","valueOf","input","isObject","isBoolean","zeroPad","pad","join","titleCase","toUpperCase","substr","ordinal","j","toCardinal","String","getEpoch","tmp","getTime","beADate","formatTimezone","delimiter","sign","absOffset","hours","minutes","isLeapYear$2","hasDate","max","hasDate_1","months","parseYear","today","strFmt","reg","parse","givenTz","options","british","_today","quarter","season","getDate","strParse","getNow","now","dates","tonight","tomorrow","add","yesterday","subtract","christmas","newYears","namedDates","minimumEpoch","defaults","handleArray","order","handleObject","assign","parseInput","res","isValid","_res","shortDays","longDays","days","aliases","mo","tu","we","th","fr","sa","su","tues","weds","wedn","thur","thurs","titleCaseEnabled","caseFormat","useTitleCase","isoOffset","_offset","applyCaseFormat","dayName","dayShort","dayNumber","dayOrdinal","dayPad","dateOrdinal","datePad","monthName","monthShort","monthNumber","monthOrdinal","monthPad","isoMonth","yearShort","isoYear","isNegative","time","time24","hour24","hour12","hourPad","hour24Pad","minutePad","secondPad","era","json","numeric","numericUs","numericUk","mmDd","iso","h24","ms","isoShort","isoUtc","toISOString","nice","nice24","niceYear","niceDay","niceFull","niceFull24","mdy","dmy","ymd","printFormat","out","indexOf","sections","_","fmt","_out","format_1","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","a","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","_char","to","toName","escapeChars","filter","ch","combineRepeated","c","map","unixFmt","txt","unixFmt_1","units$2","doUnit","endOf","duration","percent","toFixed","progress","progress_1","nearest","prog","nearest_1","climb","b","isBefore","isAfter","diffOne","one","fastYear","years","diff$1","msDiff","weeks","waterfall","reverseDiff","main$1","main","reversed","qualifiers","almost","over","getDiff","later","earlier","isSame","u","pluralize","since","isNow","every","rounded","qualified","precise","englishValues","units","englishValue","nextUnit","nextValue","splice","since_1","seasons","north","south","quarters","units$1","quarterhour","_weekStart","q","hemisphere","decade","century","startOf_1","isDay","result","every_1","parseDst","epochShift","found","hasDst","Boolean","default_offset","change","back","summer","winter","isDST","timezone_1","methods$4","input$1","hasDST","leapYear","last","goto","isAwake","isAsleep","log","logYear","_this","debug","fromNow","weekStart","inDST","round","each","methods_1","isLeapYear$1","validate","order$1","confirm","want","shift","sec","methods$3","getMilliseconds","getSeconds","getMinutes","getHours","hourFloat","_minute","_hour","which","dayTime","times","morning","breakfast","noon","lunch","afternoon","evening","dinner","night","midnight","_01Time","methods$2","getDay","_02Date","clearMinutes","methods$1","sum","setDate","setFullYear","setHours","setMinutes","setMonth","toAdd","minus","thisOne","skipWeeks","_month","floor","millenium","_03Year","methods","addMethods$4","addMethods","Space","query","getMonthLength","rollMonth","_years","rollDaysDown","rollDaysUp","_model","daysBack","keep","dstAwareUnits","keepDate","addMethods$3","SpaceTime","_sum","remainder","wantYear","haveYear","plus","print","addMethods$2","tzAware","same","addMethods$1","isEqual","isBetween","isInclusive","startEpoch","endEpoch","compare","defineProperty","get","bias","getTimezoneOffset","toLocalDate","spacetime","whereIts","startHour","endHour","tzs","whereIts_1","_version","setToday","extend","min","version","plugin","src"],"mappings":"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","sourcesContent":["/* spencermountain/spacetime 6.14.0 Apache 2.0 */\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MSEC_IN_HOUR = 60 * 60 * 1000; //convert our local date syntax a javascript UTC date\n\nvar toUtc = function toUtc(dstChange, offset, year) {\n  var _dstChange$split = dstChange.split('/'),\n      _dstChange$split2 = _slicedToArray(_dstChange$split, 2),\n      month = _dstChange$split2[0],\n      rest = _dstChange$split2[1];\n\n  var _rest$split = rest.split(':'),\n      _rest$split2 = _slicedToArray(_rest$split, 2),\n      day = _rest$split2[0],\n      hour = _rest$split2[1];\n\n  return Date.UTC(year, month - 1, day, hour) - offset * MSEC_IN_HOUR;\n}; // compare epoch with dst change events (in utc)\n\n\nvar inSummerTime = function inSummerTime(epoch, start, end, summerOffset, winterOffset) {\n  var year = new Date(epoch).getUTCFullYear();\n  var startUtc = toUtc(start, winterOffset, year);\n  var endUtc = toUtc(end, summerOffset, year); // simple number comparison now\n\n  return epoch >= startUtc && epoch < endUtc;\n};\n\nvar summerTime = inSummerTime;\n\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\n\nvar quickOffset = function quickOffset(s) {\n  var zones = s.timezones;\n  var obj = zones[s.tz];\n\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0;\n  }\n\n  if (obj.dst === undefined) {\n    return obj.offset;\n  } //get our two possible offsets\n\n\n  var jul = obj.offset;\n  var dec = obj.offset + 1; // assume it's the same for now\n\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n\n  var split = obj.dst.split('->');\n  var inSummer = summerTime(s.epoch, split[0], split[1], jul, dec);\n\n  if (inSummer === true) {\n    return jul;\n  }\n\n  return dec;\n};\n\nvar quick = quickOffset;\n\nvar _build = {\n\t\"9|s\": \"2/dili,2/jayapura\",\n\t\"9|n\": \"2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,11/palau\",\n\t\"9.5|s|04/04:03->10/03:02\": \"4/adelaide,4/broken_hill,4/south,4/yancowinna\",\n\t\"9.5|s\": \"4/darwin,4/north\",\n\t\"8|s|03/08:01->10/04:00\": \"12/casey\",\n\t\"8|s\": \"2/kuala_lumpur,2/makassar,2/singapore,4/perth,2/ujung_pandang,4/west\",\n\t\"8|n\": \"2/brunei,2/choibalsan,2/hong_kong,2/irkutsk,2/kuching,2/macau,2/manila,2/shanghai,2/taipei,2/ulaanbaatar,2/chongqing,2/chungking,2/harbin,2/macao,2/ulan_bator\",\n\t\"8.75|s\": \"4/eucla\",\n\t\"7|s\": \"12/davis,2/jakarta,9/christmas\",\n\t\"7|n\": \"2/bangkok,2/barnaul,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/saigon,2/tomsk,2/vientiane,2/ho_chi_minh\",\n\t\"6|s\": \"12/vostok\",\n\t\"6|n\": \"2/almaty,2/bishkek,2/dhaka,2/omsk,2/qyzylorda,2/qostanay,2/thimphu,2/urumqi,9/chagos,2/dacca,2/kashgar,2/thimbu\",\n\t\"6.5|n\": \"2/rangoon,9/cocos,2/yangon\",\n\t\"5|s\": \"12/mawson,9/kerguelen\",\n\t\"5|n\": \"2/aqtau,2/aqtobe,2/ashgabat,2/atyrau,2/baku,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives,2/ashkhabad\",\n\t\"5.75|n\": \"2/katmandu,2/kathmandu\",\n\t\"5.5|n\": \"2/calcutta,2/colombo,2/kolkata\",\n\t\"4|s\": \"9/reunion\",\n\t\"4|n\": \"2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,2/volgograd,9/mahe,9/mauritius\",\n\t\"4.5|n|03/22:00->09/21:24\": \"2/tehran\",\n\t\"4.5|n\": \"2/kabul\",\n\t\"3|s\": \"12/syowa,9/antananarivo\",\n\t\"3|n|03/28:03->10/31:04\": \"2/famagusta,2/nicosia,8/athens,8/bucharest,8/helsinki,8/kiev,8/mariehamn,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye,8/nicosia\",\n\t\"3|n|03/28:02->10/31:03\": \"8/chisinau,8/tiraspol\",\n\t\"3|n|03/28:00->10/30:24\": \"2/beirut\",\n\t\"3|n|03/27:00->10/30:01\": \"2/gaza,2/hebron\",\n\t\"3|n|03/26:02->10/31:02\": \"2/jerusalem,2/tel_aviv\",\n\t\"3|n|03/26:00->10/29:01\": \"2/amman\",\n\t\"3|n|03/26:00->10/28:24\": \"2/damascus\",\n\t\"3|n\": \"0/addis_ababa,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/baghdad,2/bahrain,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte,0/asmara,2/istanbul\",\n\t\"2|s|03/28:02->10/31:02\": \"12/troll\",\n\t\"2|s\": \"0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane\",\n\t\"2|n|03/28:02->10/31:03\": \"0/ceuta,arctic/longyearbyen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich,3/jan_mayen\",\n\t\"2|n\": \"0/blantyre,0/bujumbura,0/cairo,0/khartoum,0/kigali,0/tripoli,8/kaliningrad\",\n\t\"1|s\": \"0/brazzaville,0/kinshasa,0/luanda,0/windhoek\",\n\t\"1|n|04/11:03->05/16:02\": \"0/casablanca,0/el_aaiun\",\n\t\"1|n|03/28:01->10/31:02\": \"3/canary,3/faeroe,3/madeira,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london,3/faroe,8/belfast\",\n\t\"1|n\": \"0/algiers,0/bangui,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis\",\n\t\"14|n\": \"11/kiritimati\",\n\t\"13|s|04/04:04->09/26:03\": \"11/apia\",\n\t\"13|s|01/15:02->11/05:03\": \"11/tongatapu\",\n\t\"13|n\": \"11/enderbury,11/fakaofo\",\n\t\"12|s|04/04:03->09/26:02\": \"12/mcmurdo,11/auckland,12/south_pole\",\n\t\"12|s|01/17:03->11/14:02\": \"11/fiji\",\n\t\"12|n\": \"2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis\",\n\t\"12.75|s|04/04:03->04/04:02\": \"11/chatham\",\n\t\"11|s|04/04:03->10/03:02\": \"12/macquarie\",\n\t\"11|s\": \"11/bougainville\",\n\t\"11|n\": \"2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/ponape,11/pohnpei\",\n\t\"11.5|n|04/04:03->10/03:02\": \"11/norfolk\",\n\t\"10|s|04/04:03->10/03:02\": \"4/currie,4/hobart,4/melbourne,4/sydney,4/act,4/canberra,4/nsw,4/tasmania,4/victoria\",\n\t\"10|s\": \"12/dumontdurville,4/brisbane,4/lindeman,11/port_moresby,4/queensland\",\n\t\"10|n\": \"2/ust-nera,2/vladivostok,2/yakutsk,11/guam,11/saipan,11/truk,11/chuuk,11/yap\",\n\t\"10.5|s|04/04:01->10/03:02\": \"4/lord_howe,4/lhi\",\n\t\"0|n|03/28:00->10/31:01\": \"1/scoresbysund,3/azores\",\n\t\"0|n\": \"0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/utc,0/timbuktu,13/gmt-0,13/gmt+0,13/gmt0,13/greenwich,13/uct,13/universal,13/zulu\",\n\t\"-9|n|03/14:02->11/07:02\": \"1/adak,1/atka,us/aleutian\",\n\t\"-9|n\": \"11/gambier\",\n\t\"-9.5|n\": \"11/marquesas\",\n\t\"-8|n|03/14:02->11/07:02\": \"1/anchorage,1/juneau,1/metlakatla,1/nome,1/sitka,1/yakutat,us/alaska\",\n\t\"-8|n\": \"11/pitcairn\",\n\t\"-7|n|03/14:02->11/07:02\": \"1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/ensenada,6/pacific,10/bajanorte,us/pacific-new,us/pacific\",\n\t\"-7|n|03/08:02->11/01:01\": \"1/dawson,1/whitehorse,6/yukon\",\n\t\"-7|n\": \"1/creston,1/dawson_creek,1/fort_nelson,1/hermosillo,1/phoenix,us/arizona\",\n\t\"-6|s|04/03:22->09/04:22\": \"11/easter,7/easterisland\",\n\t\"-6|n|04/04:02->10/31:02\": \"1/chihuahua,1/mazatlan,10/bajasur\",\n\t\"-6|n|03/14:02->11/07:02\": \"1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/ojinaga,1/yellowknife,1/shiprock,6/mountain,us/mountain\",\n\t\"-6|n\": \"1/belize,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/regina,1/swift_current,1/tegucigalpa,11/galapagos,6/east-saskatchewan,6/saskatchewan\",\n\t\"-5|s\": \"1/lima,1/rio_branco,1/porto_acre,5/acre\",\n\t\"-5|n|04/04:02->10/31:02\": \"1/bahia_banderas,1/merida,1/mexico_city,1/monterrey,10/general\",\n\t\"-5|n|03/14:02->11/07:02\": \"1/chicago,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,1/indiana/knox,1/indiana/tell_city,1/north_dakota/beulah,1/north_dakota/center,1/north_dakota/new_salem,1/knox_in,6/central,us/central,us/indiana-starke\",\n\t\"-5|n|03/12:03->11/05:01\": \"1/north_dakota\",\n\t\"-5|n\": \"1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/atikokan\",\n\t\"-4|s|05/13:23->08/13:01\": \"12/palmer\",\n\t\"-4|s|04/03:24->09/05:00\": \"1/santiago,7/continental\",\n\t\"-4|s|03/27:24->10/03:00\": \"1/asuncion\",\n\t\"-4|s|02/16:24->11/03:00\": \"1/campo_grande,1/cuiaba\",\n\t\"-4|s\": \"1/la_paz,1/manaus,5/west\",\n\t\"-4|n|03/14:02->11/07:02\": \"1/detroit,1/grand_turk,1/indianapolis,1/iqaluit,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,1/indiana/marengo,1/indiana/petersburg,1/indiana/vevay,1/indiana/vincennes,1/indiana/winamac,1/kentucky/monticello,1/fort_wayne,1/indiana/indianapolis,1/kentucky/louisville,6/eastern,us/east-indiana,us/eastern,us/michigan\",\n\t\"-4|n|03/14:00->11/07:01\": \"1/havana\",\n\t\"-4|n|03/12:03->11/05:01\": \"1/indiana,1/kentucky\",\n\t\"-4|n\": \"1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin\",\n\t\"-3|s\": \"1/argentina,1/buenos_aires,1/catamarca,1/cordoba,1/fortaleza,1/jujuy,1/mendoza,1/montevideo,1/punta_arenas,1/sao_paulo,12/rothera,3/stanley,1/argentina/la_rioja,1/argentina/rio_gallegos,1/argentina/salta,1/argentina/san_juan,1/argentina/san_luis,1/argentina/tucuman,1/argentina/ushuaia,1/argentina/buenos_aires,1/argentina/catamarca,1/argentina/comodrivadavia,1/argentina/cordoba,1/argentina/jujuy,1/argentina/mendoza,1/rosario,5/east\",\n\t\"-3|n|03/14:02->11/07:02\": \"1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic\",\n\t\"-3|n\": \"1/araguaina,1/bahia,1/belem,1/cayenne,1/maceio,1/paramaribo,1/recife,1/santarem\",\n\t\"-2|n|03/27:22->10/30:23\": \"1/godthab,1/nuuk\",\n\t\"-2|n|03/14:02->11/07:02\": \"1/miquelon\",\n\t\"-2|n\": \"1/noronha,3/south_georgia,5/denoronha\",\n\t\"-2.5|n|03/14:02->11/07:02\": \"1/st_johns,6/newfoundland\",\n\t\"-1|n\": \"3/cape_verde\",\n\t\"-11|n\": \"11/midway,11/niue,11/pago_pago,11/samoa,us/samoa\",\n\t\"-10|n\": \"11/honolulu,11/johnston,11/rarotonga,11/tahiti,us/hawaii\"\n};\n\nvar _build$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': _build\n});\n\n//prefixes for iana names..\nvar _prefixes = ['africa', 'america', 'asia', 'atlantic', 'australia', 'brazil', 'canada', 'chile', 'europe', 'indian', 'mexico', 'pacific', 'antarctica', 'etc'];\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n['default'] || n;\n}\n\nvar data = getCjsExportFromNamespace(_build$1);\n\nvar all = {};\nObject.keys(data).forEach(function (k) {\n  var split = k.split('|');\n  var obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  };\n\n  if (split[2]) {\n    obj.dst = split[2];\n  }\n\n  var names = data[k].split(',');\n  names.forEach(function (str) {\n    str = str.replace(/(^[0-9]+)\\//, function (before, num) {\n      num = Number(num);\n      return _prefixes[num] + '/';\n    });\n    all[str] = obj;\n  });\n});\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //default to northern hemisphere - (sorry!)\n\n}; //add etc/gmt+n\n\nfor (var i = -14; i <= 14; i += 0.5) {\n  var num = i;\n\n  if (num > 0) {\n    num = '+' + num;\n  }\n\n  var name = 'etc/gmt' + num;\n  all[name] = {\n    offset: i * -1,\n    //they're negative!\n    hem: 'n' //(sorry)\n\n  };\n  name = 'utc/gmt' + num; //this one too, why not.\n\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  };\n}\n\nvar unpack = all;\n\n//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nvar fallbackTZ = 'utc'; //\n//this Intl object is not supported often, yet\n\nvar safeIntl = function safeIntl() {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null;\n  }\n\n  var format = Intl.DateTimeFormat();\n\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null;\n  }\n\n  var timezone = format.resolvedOptions().timeZone;\n\n  if (!timezone) {\n    return null;\n  }\n\n  return timezone.toLowerCase();\n};\n\nvar guessTz = function guessTz() {\n  var timezone = safeIntl();\n\n  if (timezone === null) {\n    return fallbackTZ;\n  }\n\n  return timezone;\n}; //do it once per computer\n\n\nvar guessTz_1 = guessTz;\n\nvar isOffset = /(\\-?[0-9]+)h(rs)?/i;\nvar isNumber = /(\\-?[0-9]+)/;\nvar utcOffset = /utc([\\-+]?[0-9]+)/i;\nvar gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nvar toIana = function toIana(num) {\n  num = Number(num);\n\n  if (num >= -13 && num <= 13) {\n    num = num * -1; //it's opposite!\n\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n\n    return 'etc/gmt' + num;\n  }\n\n  return null;\n};\n\nvar parseOffset$1 = function parseOffset(tz) {\n  // '+5hrs'\n  var m = tz.match(isOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'utc+5'\n\n\n  m = tz.match(utcOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'GMT-5' (not opposite)\n\n\n  m = tz.match(gmtOffset);\n\n  if (m !== null) {\n    var num = Number(m[1]) * -1;\n    return toIana(num);\n  } // '+5'\n\n\n  m = tz.match(isNumber);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n\n  return null;\n};\n\nvar parseOffset_1$1 = parseOffset$1;\n\nvar local = guessTz_1(); //add all the city names by themselves\n\nvar cities = Object.keys(unpack).reduce(function (h, k) {\n  var city = k.split('/')[1] || '';\n  city = city.replace(/_/g, ' ');\n  h[city] = k;\n  return h;\n}, {}); //try to match these against iana form\n\nvar normalize = function normalize(tz) {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  return tz;\n}; // try our best to reconcile the timzone to this given string\n\n\nvar lookupTz = function lookupTz(str, zones) {\n  if (!str) {\n    return local;\n  }\n\n  if (typeof str !== 'string') {\n    console.error(\"Timezone must be a string - recieved: '\", str, \"'\\n\");\n  }\n\n  var tz = str.trim(); // let split = str.split('/')\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  // if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n  //   tz = split[0] + '/' + split[1]\n  // }\n\n  tz = tz.toLowerCase();\n\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz;\n  } //lookup more loosely..\n\n\n  tz = normalize(tz);\n\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz;\n  } //try city-names\n\n\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz];\n  } // //try to parse '-5h'\n\n\n  if (/[0-9]/.test(tz) === true) {\n    var id = parseOffset_1$1(tz);\n\n    if (id) {\n      return id;\n    }\n  }\n\n  throw new Error(\"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\");\n};\n\nvar find = lookupTz;\n\nvar o = {\n  millisecond: 1\n};\no.second = 1000;\no.minute = 60000;\no.hour = 3.6e6; // dst is supported post-hoc\n\no.day = 8.64e7; //\n\no.date = o.day;\no.month = 8.64e7 * 29.5; //(average)\n\no.week = 6.048e8;\no.year = 3.154e10; // leap-years are supported post-hoc\n//add plurals\n\nObject.keys(o).forEach(function (k) {\n  o[k + 's'] = o[k];\n});\nvar milliseconds = o;\n\nvar walk = function walk(s, n, fn, unit, previous) {\n  var current = s.d[fn]();\n\n  if (current === n) {\n    return; //already there\n  }\n\n  var startUnit = previous === null ? null : s.d[previous]();\n  var original = s.epoch; //try to get it as close as we can\n\n  var diff = n - current;\n  s.epoch += milliseconds[unit] * diff; //DST edge-case: if we are going many days, be a little conservative\n  // console.log(unit, diff)\n\n  if (unit === 'day') {\n    // s.epoch -= ms.minute\n    //but don't push it over a month\n    if (Math.abs(diff) > 28 && n < 28) {\n      s.epoch += milliseconds.hour;\n    }\n  } // 1st time: oops, did we change previous unit? revert it.\n\n\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original; // s.epoch += ms[unit] * diff * 0.89 // maybe try and make it close...?\n  } //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n\n\n  var halfStep = milliseconds[unit] / 2;\n\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep;\n  }\n\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep;\n  } // 2nd time: did we change previous unit? revert it.\n\n\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original;\n  }\n}; //find the desired date by a increment/check while loop\n\n\nvar units$3 = {\n  year: {\n    valid: function valid(n) {\n      return n > -4000 && n < 4000;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getFullYear', 'year', null);\n    }\n  },\n  month: {\n    valid: function valid(n) {\n      return n >= 0 && n <= 11;\n    },\n    walkTo: function walkTo(s, n) {\n      var d = s.d;\n      var current = d.getMonth();\n      var original = s.epoch;\n      var startUnit = d.getFullYear();\n\n      if (current === n) {\n        return;\n      } //try to get it as close as we can..\n\n\n      var diff = n - current;\n      s.epoch += milliseconds.day * (diff * 28); //special case\n      //oops, did we change the year? revert it.\n\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original;\n      } //increment by day\n\n\n      while (s.d.getMonth() < n) {\n        s.epoch += milliseconds.day;\n      }\n\n      while (s.d.getMonth() > n) {\n        s.epoch -= milliseconds.day;\n      }\n    }\n  },\n  date: {\n    valid: function valid(n) {\n      return n > 0 && n <= 31;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getDate', 'day', 'getMonth');\n    }\n  },\n  hour: {\n    valid: function valid(n) {\n      return n >= 0 && n < 24;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getHours', 'hour', 'getDate');\n    }\n  },\n  minute: {\n    valid: function valid(n) {\n      return n >= 0 && n < 60;\n    },\n    walkTo: function walkTo(s, n) {\n      return walk(s, n, 'getMinutes', 'minute', 'getHours');\n    }\n  },\n  second: {\n    valid: function valid(n) {\n      return n >= 0 && n < 60;\n    },\n    walkTo: function walkTo(s, n) {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch;\n    }\n  },\n  millisecond: {\n    valid: function valid(n) {\n      return n >= 0 && n < 1000;\n    },\n    walkTo: function walkTo(s, n) {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch;\n    }\n  }\n};\n\nvar walkTo = function walkTo(s, wants) {\n  var keys = Object.keys(units$3);\n  var old = s.clone();\n\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    var n = wants[k];\n\n    if (n === undefined) {\n      n = old[k]();\n    }\n\n    if (typeof n === 'string') {\n      n = parseInt(n, 10);\n    } //make-sure it's valid\n\n\n    if (!units$3[k].valid(n)) {\n      s.epoch = null;\n\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n);\n      }\n\n      return;\n    }\n\n    units$3[k].walkTo(s, n);\n  }\n\n  return;\n};\n\nvar walk_1 = walkTo;\n\nvar shortMonths = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sept', 'oct', 'nov', 'dec'];\nvar longMonths = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\nfunction buildMapping() {\n  var obj = {\n    sep: 8 //support this format\n\n  };\n\n  for (var i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i;\n  }\n\n  for (var _i = 0; _i < longMonths.length; _i++) {\n    obj[longMonths[_i]] = _i;\n  }\n\n  return obj;\n}\n\nvar months$1 = {\n  \"short\": function short() {\n    return shortMonths;\n  },\n  \"long\": function long() {\n    return longMonths;\n  },\n  mapping: function mapping() {\n    return buildMapping();\n  },\n  set: function set(i18n) {\n    shortMonths = i18n[\"short\"] || shortMonths;\n    longMonths = i18n[\"long\"] || longMonths;\n  }\n};\n\n//pull-apart ISO offsets, like \"+0100\"\nvar parseOffset = function parseOffset(s, offset) {\n  if (!offset) {\n    return s;\n  } //this is a fancy-move\n\n\n  if (offset === 'Z' || offset === 'z') {\n    offset = '+0000';\n  } // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n\n\n  var num = 0; // for (+-)hh:mm\n\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '');\n    } //support \"+01:30\"\n\n\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5');\n    }\n  } // for (+-)hhmm\n\n\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5');\n  }\n\n  num = parseFloat(offset); //divide by 100 or 10 - , \"+0100\", \"+01\"\n\n  if (Math.abs(num) > 100) {\n    num = num / 100;\n  } //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n\n\n  num *= -1;\n\n  if (num >= 0) {\n    num = '+' + num;\n  }\n\n  var tz = 'etc/gmt' + num;\n  var zones = s.timezones;\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz;\n  }\n\n  return s;\n};\n\nvar parseOffset_1 = parseOffset;\n\nvar parseTime = function parseTime(s) {\n  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  str = str.replace(/^\\s+/, '').toLowerCase(); //trim\n  //formal time formats - 04:30.23\n\n  var arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/);\n\n  if (arr !== null) {\n    //validate it a little\n    var h = Number(arr[1]);\n\n    if (h < 0 || h > 24) {\n      return s.startOf('day');\n    }\n\n    var m = Number(arr[2]); //don't accept '5:3pm'\n\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day');\n    }\n\n    if (arr[4] > 999) {\n      // fix overflow issue with milliseconds, if input is longer than standard (e.g. 2017-08-06T09:00:00.123456Z)\n      arr[4] = parseInt(\"\".concat(arr[4]).substring(0, 3), 10);\n    }\n\n    s = s.hour(h);\n    s = s.minute(m);\n    s = s.seconds(arr[3] || 0);\n    s = s.millisecond(arr[4] || 0); //parse-out am/pm\n\n    var ampm = str.match(/[\\b0-9](am|pm)\\b/);\n\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1]);\n    }\n\n    return s;\n  } //try an informal form - 5pm (no minutes)\n\n\n  arr = str.match(/([0-9]+) ?(am|pm)/);\n\n  if (arr !== null && arr[1]) {\n    var _h = Number(arr[1]); //validate it a little..\n\n\n    if (_h > 12 || _h < 1) {\n      return s.startOf('day');\n    }\n\n    s = s.hour(arr[1] || 0);\n    s = s.ampm(arr[2]);\n    s = s.startOf('hour');\n    return s;\n  } //no time info found, use start-of-day\n\n\n  s = s.startOf('day');\n  return s;\n};\n\nvar parseTime_1 = parseTime;\n\nvar monthLengths = [31, // January - 31 days\n28, // February - 28 days in a common year and 29 days in leap years\n31, // March - 31 days\n30, // April - 30 days\n31, // May - 31 days\n30, // June - 30 days\n31, // July - 31 days\n31, // August - 31 days\n30, // September - 30 days\n31, // October - 31 days\n30, // November - 30 days\n31 // December - 31 days\n];\nvar monthLengths_1 = monthLengths; // 28 - feb\n\nvar fns = createCommonjsModule(function (module, exports) {\n  //git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\n  exports.isLeapYear = function (year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }; // unsurprisingly-nasty `typeof date` call\n\n\n  exports.isDate = function (d) {\n    return Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf());\n  };\n\n  exports.isArray = function (input) {\n    return Object.prototype.toString.call(input) === '[object Array]';\n  };\n\n  exports.isObject = function (input) {\n    return Object.prototype.toString.call(input) === '[object Object]';\n  };\n\n  exports.isBoolean = function (input) {\n    return Object.prototype.toString.call(input) === '[object Boolean]';\n  };\n\n  exports.zeroPad = function (str) {\n    var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var pad = '0';\n    str = str + '';\n    return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str;\n  };\n\n  exports.titleCase = function (str) {\n    if (!str) {\n      return '';\n    }\n\n    return str[0].toUpperCase() + str.substr(1);\n  };\n\n  exports.ordinal = function (i) {\n    var j = i % 10;\n    var k = i % 100;\n\n    if (j === 1 && k !== 11) {\n      return i + 'st';\n    }\n\n    if (j === 2 && k !== 12) {\n      return i + 'nd';\n    }\n\n    if (j === 3 && k !== 13) {\n      return i + 'rd';\n    }\n\n    return i + 'th';\n  }; //strip 'st' off '1st'..\n\n\n  exports.toCardinal = function (str) {\n    str = String(str);\n    str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1');\n    return parseInt(str, 10);\n  }; //used mostly for cleanup of unit names, like 'months'\n\n\n  exports.normalize = function () {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    str = str.toLowerCase().trim();\n    str = str.replace(/ies$/, 'y'); //'centuries'\n\n    str = str.replace(/s$/, '');\n    str = str.replace(/-/g, '');\n\n    if (str === 'day' || str === 'days') {\n      return 'date';\n    }\n\n    if (str === 'min' || str === 'mins') {\n      return 'minute';\n    }\n\n    return str;\n  };\n\n  exports.getEpoch = function (tmp) {\n    //support epoch\n    if (typeof tmp === 'number') {\n      return tmp;\n    } //suport date objects\n\n\n    if (exports.isDate(tmp)) {\n      return tmp.getTime();\n    }\n\n    if (tmp.epoch) {\n      return tmp.epoch;\n    }\n\n    return null;\n  }; //make sure this input is a spacetime obj\n\n\n  exports.beADate = function (d, s) {\n    if (exports.isObject(d) === false) {\n      return s.clone().set(d);\n    }\n\n    return d;\n  };\n\n  exports.formatTimezone = function (offset) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var sign = offset > 0 ? '+' : '-';\n    var absOffset = Math.abs(offset);\n    var hours = exports.zeroPad(parseInt('' + absOffset, 10));\n    var minutes = exports.zeroPad(absOffset % 1 * 60);\n    return \"\".concat(sign).concat(hours).concat(delimiter).concat(minutes);\n  };\n});\nfns.isLeapYear;\nfns.isDate;\nfns.isArray;\nfns.isObject;\nfns.isBoolean;\nfns.zeroPad;\nfns.titleCase;\nfns.ordinal;\nfns.toCardinal;\nfns.normalize;\nfns.getEpoch;\nfns.beADate;\nfns.formatTimezone;\n\nvar isLeapYear$2 = fns.isLeapYear; //given a month, return whether day number exists in it\n\nvar hasDate = function hasDate(obj) {\n  //invalid values\n  if (monthLengths_1.hasOwnProperty(obj.month) !== true) {\n    return false;\n  } //support leap-year in february\n\n\n  if (obj.month === 1) {\n    if (isLeapYear$2(obj.year) && obj.date <= 29) {\n      return true;\n    } else {\n      return obj.date <= 28;\n    }\n  } //is this date too-big for this month?\n\n\n  var max = monthLengths_1[obj.month] || 0;\n\n  if (obj.date <= max) {\n    return true;\n  }\n\n  return false;\n};\n\nvar hasDate_1 = hasDate;\n\nvar months = months$1.mapping();\n\nvar parseYear = function parseYear() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var today = arguments.length > 1 ? arguments[1] : undefined;\n  var year = parseInt(str.trim(), 10); // use a given year from options.today\n\n  if (!year && today) {\n    year = today.year;\n  } // fallback to this year\n\n\n  year = year || new Date().getFullYear();\n  return year;\n};\n\nvar strFmt = [//iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n{\n  reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/i,\n  parse: function parse(s, arr, givenTz, options) {\n    var month = parseInt(arr[2], 10) - 1;\n    var obj = {\n      year: arr[1],\n      month: month,\n      date: arr[3]\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    parseOffset_1(s, arr[5]);\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //iso \"2015-03-25\" or \"2015/03/25\" or \"2015/03/25 12:26:14 PM\"\n{\n  reg: /^([0-9]{4})[\\-\\/.]([0-9]{1,2})[\\-\\/.]([0-9]{1,2}),?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var obj = {\n      year: arr[1],\n      month: parseInt(arr[2], 10) - 1,\n      date: parseInt(arr[3], 10)\n    };\n\n    if (obj.month >= 12) {\n      //support yyyy/dd/mm (weird, but ok)\n      obj.date = parseInt(arr[2], 10);\n      obj.month = parseInt(arr[3], 10) - 1;\n    }\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //mm/dd/yyyy - uk/canada \"6/28/2019, 12:26:14 PM\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/.]([0-9]{1,2})[\\-\\/.]?([0-9]{4})?,?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var month = parseInt(arr[1], 10) - 1;\n    var date = parseInt(arr[2], 10); //support dd/mm/yyy\n\n    if (s.british || month >= 12) {\n      date = parseInt(arr[1], 10);\n      month = parseInt(arr[2], 10) - 1;\n    }\n\n    var year = parseYear(arr[3], s._today) || new Date().getFullYear();\n    var obj = {\n      year: year,\n      month: month,\n      date: date\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, // '2012-06' last attempt at iso-like format\n{\n  reg: /^([0-9]{4})[\\-\\/]([0-9]{2})$/i,\n  parse: function parse(s, arr, givenTz, options) {\n    var month = parseInt(arr[2], 10) - 1;\n    var obj = {\n      year: arr[1],\n      month: month,\n      date: 1\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    parseOffset_1(s, arr[5]);\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //common british format - \"25-feb-2015\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[2].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[1] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //alt short format - \"feb-25-2015\"\n{\n  reg: /^([a-z]+)[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[2] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //Long \"Mar 25 2015\"\n//February 22, 2017 15:30:00\n{\n  reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[2] || '')\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //February 2017 (implied date)\n{\n  reg: /^([a-z]+) ([0-9]{4})$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[1].toLowerCase()];\n    var year = parseYear(arr[2], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: s._today.date || 1\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, //Long \"25 Mar 2015\"\n{\n  reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?,? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: function parse(s, arr) {\n    var month = months[arr[2].toLowerCase()];\n\n    if (!month) {\n      return null;\n    }\n\n    var year = parseYear(arr[3], s._today);\n    var obj = {\n      year: year,\n      month: month,\n      date: fns.toCardinal(arr[1])\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s, arr[4]);\n    return s;\n  }\n}, {\n  // 'q2 2002'\n  reg: /^(q[0-9])( of)?( [0-9]{4})?/i,\n  parse: function parse(s, arr) {\n    var quarter = arr[1] || '';\n    s = s.quarter(quarter);\n    var year = arr[3] || '';\n\n    if (year) {\n      year = year.trim();\n      s = s.year(year);\n    }\n\n    return s;\n  }\n}, {\n  // 'summer 2002'\n  reg: /^(spring|summer|winter|fall|autumn)( of)?( [0-9]{4})?/i,\n  parse: function parse(s, arr) {\n    var season = arr[1] || '';\n    s = s.season(season);\n    var year = arr[3] || '';\n\n    if (year) {\n      year = year.trim();\n      s = s.year(year);\n    }\n\n    return s;\n  }\n}, {\n  // '200bc'\n  reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n  parse: function parse(s, arr) {\n    var str = arr[0] || ''; //make negative-year\n\n    str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1'); //remove commas\n\n    str = str.replace(/,/g, '');\n    var year = parseInt(str.trim(), 10);\n    var d = new Date();\n    var obj = {\n      year: year,\n      month: d.getMonth(),\n      date: d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}, {\n  // '200ad'\n  reg: /^[0-9,]+ ?(a\\.?d\\.?|c\\.?e\\.?)$/i,\n  parse: function parse(s, arr) {\n    var str = arr[0] || ''; //remove commas\n\n    str = str.replace(/,/g, '');\n    var year = parseInt(str.trim(), 10);\n    var d = new Date();\n    var obj = {\n      year: year,\n      month: d.getMonth(),\n      date: d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}, {\n  // '1992'\n  reg: /^[0-9]{4}( ?a\\.?d\\.?)?$/i,\n  parse: function parse(s, arr) {\n    var today = s._today;\n    var year = parseYear(arr[0], today);\n    var d = new Date(); // using today's date, but a new month is awkward.\n\n    if (today.month && !today.date) {\n      today.date = 1;\n    }\n\n    var obj = {\n      year: year,\n      month: today.month || d.getMonth(),\n      date: today.date || d.getDate()\n    };\n\n    if (hasDate_1(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walk_1(s, obj);\n    s = parseTime_1(s);\n    return s;\n  }\n}];\nvar strParse = strFmt;\n\n// pull in 'today' data for the baseline moment\nvar getNow = function getNow(s) {\n  s.epoch = Date.now();\n  Object.keys(s._today || {}).forEach(function (k) {\n    if (typeof s[k] === 'function') {\n      s = s[k](s._today[k]);\n    }\n  });\n  return s;\n};\n\nvar dates = {\n  now: function now(s) {\n    return getNow(s);\n  },\n  today: function today(s) {\n    return getNow(s);\n  },\n  tonight: function tonight(s) {\n    s = getNow(s);\n    s = s.hour(18); //6pm\n\n    return s;\n  },\n  tomorrow: function tomorrow(s) {\n    s = getNow(s);\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  yesterday: function yesterday(s) {\n    s = getNow(s);\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  christmas: function christmas(s) {\n    var year = getNow(s).year();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n\n    return s;\n  },\n  'new years': function newYears(s) {\n    var year = getNow(s).year();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n\n    return s;\n  }\n};\ndates['new years eve'] = dates['new years'];\nvar namedDates = dates;\n\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\n\nvar minimumEpoch = 2500000000;\nvar defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n}; //support [2016, 03, 01] format\n\nvar handleArray = function handleArray(s, arr, today) {\n  if (arr.length === 0) {\n    return s;\n  }\n\n  var order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond'];\n\n  for (var i = 0; i < order.length; i++) {\n    var num = arr[i] || today[order[i]] || defaults[order[i]] || 0;\n    s = s[order[i]](num);\n  }\n\n  return s;\n}; //support {year:2016, month:3} format\n\n\nvar handleObject = function handleObject(s, obj, today) {\n  // if obj is empty, do nothing\n  if (Object.keys(obj).length === 0) {\n    return s;\n  }\n\n  obj = Object.assign({}, defaults, today, obj);\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    var unit = keys[i]; //make sure we have this method\n\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue;\n    } //make sure the value is a number\n\n\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue;\n    }\n\n    var num = obj[unit] || today[unit] || defaults[unit] || 0;\n    s = s[unit](num);\n  }\n\n  return s;\n}; //find the epoch from different input styles\n\n\nvar parseInput = function parseInput(s, input, givenTz) {\n  var today = s._today || defaults; //if we've been given a epoch number, it's easy\n\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.');\n      console.warn('       -   did input seconds instead of milliseconds?');\n    }\n\n    s.epoch = input;\n    return s;\n  } //set tmp time\n\n\n  s.epoch = Date.now(); // overwrite tmp time with 'today' value, if exists\n\n  if (s._today && fns.isObject(s._today) && Object.keys(s._today).length > 0) {\n    var res = handleObject(s, today, defaults);\n\n    if (res.isValid()) {\n      s.epoch = res.epoch;\n    }\n  } // null input means 'now'\n\n\n  if (input === null || input === undefined || input === '') {\n    return s; //k, we're good.\n  } //support input of Date() object\n\n\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime();\n    return s;\n  } //support [2016, 03, 01] format\n\n\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input, today);\n    return s;\n  } //support {year:2016, month:3} format\n\n\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch;\n      s.tz = input.tz;\n      return s;\n    }\n\n    s = handleObject(s, input, today);\n    return s;\n  } //input as a string..\n\n\n  if (typeof input !== 'string') {\n    return s;\n  } //little cleanup..\n\n\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '');\n  input = input.replace(/,/g, '');\n  input = input.replace(/ +/g, ' ').trim(); //try some known-words, like 'now'\n\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s);\n    return s;\n  } //try each text-parse template, use the first good result\n\n\n  for (var i = 0; i < strParse.length; i++) {\n    var m = input.match(strParse[i].reg);\n\n    if (m) {\n      // console.log(strFmt[i].reg)\n      var _res = strParse[i].parse(s, m, givenTz);\n\n      if (_res !== null && _res.isValid()) {\n        return _res;\n      }\n    }\n  }\n\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\");\n  }\n\n  s.epoch = null;\n  return s;\n};\n\nvar input = parseInput;\n\nvar shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nvar longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nvar days = {\n  \"short\": function short() {\n    return shortDays;\n  },\n  \"long\": function long() {\n    return longDays;\n  },\n  set: function set(i18n) {\n    shortDays = i18n[\"short\"] || shortDays;\n    longDays = i18n[\"long\"] || longDays;\n  },\n  aliases: {\n    mo: 1,\n    tu: 2,\n    we: 3,\n    th: 4,\n    fr: 5,\n    sa: 6,\n    su: 7,\n    tues: 2,\n    weds: 3,\n    wedn: 3,\n    thur: 4,\n    thurs: 4\n  }\n};\n\nvar titleCaseEnabled = true;\nvar caseFormat = {\n  useTitleCase: function useTitleCase() {\n    return titleCaseEnabled;\n  },\n  set: function set(useTitleCase) {\n    titleCaseEnabled = useTitleCase;\n  }\n};\n\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\n\nvar isoOffset = function isoOffset(s) {\n  var offset = s.timezone().current.offset;\n  return !offset ? 'Z' : fns.formatTimezone(offset, ':');\n};\n\nvar _offset = isoOffset;\n\nvar applyCaseFormat = function applyCaseFormat(str) {\n  if (caseFormat.useTitleCase()) {\n    return fns.titleCase(str);\n  }\n\n  return str;\n};\n\nvar format = {\n  day: function day(s) {\n    return applyCaseFormat(s.dayName());\n  },\n  'day-short': function dayShort(s) {\n    return applyCaseFormat(days[\"short\"]()[s.day()]);\n  },\n  'day-number': function dayNumber(s) {\n    return s.day();\n  },\n  'day-ordinal': function dayOrdinal(s) {\n    return fns.ordinal(s.day());\n  },\n  'day-pad': function dayPad(s) {\n    return fns.zeroPad(s.day());\n  },\n  date: function date(s) {\n    return s.date();\n  },\n  'date-ordinal': function dateOrdinal(s) {\n    return fns.ordinal(s.date());\n  },\n  'date-pad': function datePad(s) {\n    return fns.zeroPad(s.date());\n  },\n  month: function month(s) {\n    return applyCaseFormat(s.monthName());\n  },\n  'month-short': function monthShort(s) {\n    return applyCaseFormat(months$1[\"short\"]()[s.month()]);\n  },\n  'month-number': function monthNumber(s) {\n    return s.month();\n  },\n  'month-ordinal': function monthOrdinal(s) {\n    return fns.ordinal(s.month());\n  },\n  'month-pad': function monthPad(s) {\n    return fns.zeroPad(s.month());\n  },\n  'iso-month': function isoMonth(s) {\n    return fns.zeroPad(s.month() + 1);\n  },\n  //1-based months\n  year: function year(s) {\n    var year = s.year();\n\n    if (year > 0) {\n      return year;\n    }\n\n    year = Math.abs(year);\n    return year + ' BC';\n  },\n  'year-short': function yearShort(s) {\n    var year = s.year();\n\n    if (year > 0) {\n      return \"'\".concat(String(s.year()).substr(2, 4));\n    }\n\n    year = Math.abs(year);\n    return year + ' BC';\n  },\n  'iso-year': function isoYear(s) {\n    var year = s.year();\n    var isNegative = year < 0;\n    var str = fns.zeroPad(Math.abs(year), 4); //0-padded\n\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6);\n      str = '-' + str;\n    }\n\n    return str;\n  },\n  time: function time(s) {\n    return s.time();\n  },\n  'time-24': function time24(s) {\n    return \"\".concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  },\n  hour: function hour(s) {\n    return s.hour12();\n  },\n  'hour-pad': function hourPad(s) {\n    return fns.zeroPad(s.hour12());\n  },\n  'hour-24': function hour24(s) {\n    return s.hour24();\n  },\n  'hour-24-pad': function hour24Pad(s) {\n    return fns.zeroPad(s.hour24());\n  },\n  minute: function minute(s) {\n    return s.minute();\n  },\n  'minute-pad': function minutePad(s) {\n    return fns.zeroPad(s.minute());\n  },\n  second: function second(s) {\n    return s.second();\n  },\n  'second-pad': function secondPad(s) {\n    return fns.zeroPad(s.second());\n  },\n  ampm: function ampm(s) {\n    return s.ampm();\n  },\n  quarter: function quarter(s) {\n    return 'Q' + s.quarter();\n  },\n  season: function season(s) {\n    return s.season();\n  },\n  era: function era(s) {\n    return s.era();\n  },\n  json: function json(s) {\n    return s.json();\n  },\n  timezone: function timezone(s) {\n    return s.timezone().name;\n  },\n  offset: function offset(s) {\n    return _offset(s);\n  },\n  numeric: function numeric(s) {\n    return \"\".concat(s.year(), \"/\").concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()));\n  },\n  // yyyy/mm/dd\n  'numeric-us': function numericUs(s) {\n    return \"\".concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()), \"/\").concat(s.year());\n  },\n  // mm/dd/yyyy\n  'numeric-uk': function numericUk(s) {\n    return \"\".concat(fns.zeroPad(s.date()), \"/\").concat(fns.zeroPad(s.month() + 1), \"/\").concat(s.year());\n  },\n  //dd/mm/yyyy\n  'mm/dd': function mmDd(s) {\n    return \"\".concat(fns.zeroPad(s.month() + 1), \"/\").concat(fns.zeroPad(s.date()));\n  },\n  //mm/dd\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: function iso(s) {\n    var year = s.format('iso-year');\n    var month = fns.zeroPad(s.month() + 1); //1-based months\n\n    var date = fns.zeroPad(s.date());\n    var hour = fns.zeroPad(s.h24());\n    var minute = fns.zeroPad(s.minute());\n    var second = fns.zeroPad(s.second());\n    var ms = fns.zeroPad(s.millisecond(), 3);\n    var offset = _offset(s);\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(date, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second, \".\").concat(ms).concat(offset); //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': function isoShort(s) {\n    var month = fns.zeroPad(s.month() + 1); //1-based months\n\n    var date = fns.zeroPad(s.date());\n    return \"\".concat(s.year(), \"-\").concat(month, \"-\").concat(date); //2017-02-15\n  },\n  'iso-utc': function isoUtc(s) {\n    return new Date(s.epoch).toISOString(); //2017-03-08T19:45:28.367Z\n  },\n  //i made these up\n  nice: function nice(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.time());\n  },\n  'nice-24': function nice24(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  },\n  'nice-year': function niceYear(s) {\n    return \"\".concat(months$1[\"short\"]()[s.month()], \" \").concat(fns.ordinal(s.date()), \", \").concat(s.year());\n  },\n  'nice-day': function niceDay(s) {\n    return \"\".concat(days[\"short\"]()[s.day()], \" \").concat(applyCaseFormat(months$1[\"short\"]()[s.month()]), \" \").concat(fns.ordinal(s.date()));\n  },\n  'nice-full': function niceFull(s) {\n    return \"\".concat(s.dayName(), \" \").concat(applyCaseFormat(s.monthName()), \" \").concat(fns.ordinal(s.date()), \", \").concat(s.time());\n  },\n  'nice-full-24': function niceFull24(s) {\n    return \"\".concat(s.dayName(), \" \").concat(applyCaseFormat(s.monthName()), \" \").concat(fns.ordinal(s.date()), \", \").concat(s.hour24(), \":\").concat(fns.zeroPad(s.minute()));\n  }\n}; //aliases\n\nvar aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  'nice-short-24': 'nice-24',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n};\nObject.keys(aliases).forEach(function (k) {\n  return format[k] = format[aliases[k]];\n});\n\nvar printFormat = function printFormat(s) {\n  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return '';\n  } //support .format('month')\n\n\n  if (format.hasOwnProperty(str)) {\n    var out = format[str](s) || '';\n\n    if (str !== 'json') {\n      out = String(out);\n\n      if (str !== 'ampm') {\n        out = applyCaseFormat(out);\n      }\n    }\n\n    return out;\n  } //support '{hour}:{minute}' notation\n\n\n  if (str.indexOf('{') !== -1) {\n    var sections = /\\{(.+?)\\}/g;\n    str = str.replace(sections, function (_, fmt) {\n      fmt = fmt.toLowerCase().trim();\n\n      if (format.hasOwnProperty(fmt)) {\n        var _out = String(format[fmt](s));\n\n        if (fmt !== 'ampm') {\n          return applyCaseFormat(_out);\n        }\n\n        return _out;\n      }\n\n      return '';\n    });\n    return str;\n  }\n\n  return s.format('iso-short');\n};\n\nvar format_1 = printFormat;\n\nvar pad = fns.zeroPad;\nvar formatTimezone = fns.formatTimezone; //parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n//time-symbols we support\n\nvar mapping = {\n  G: function G(s) {\n    return s.era();\n  },\n  GG: function GG(s) {\n    return s.era();\n  },\n  GGG: function GGG(s) {\n    return s.era();\n  },\n  GGGG: function GGGG(s) {\n    return s.era() === 'AD' ? 'Anno Domini' : 'Before Christ';\n  },\n  //year\n  y: function y(s) {\n    return s.year();\n  },\n  yy: function yy(s) {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10);\n  },\n  yyy: function yyy(s) {\n    return s.year();\n  },\n  yyyy: function yyyy(s) {\n    return s.year();\n  },\n  yyyyy: function yyyyy(s) {\n    return '0' + s.year();\n  },\n  // u: (s) => {},//extended non-gregorian years\n  //quarter\n  Q: function Q(s) {\n    return s.quarter();\n  },\n  QQ: function QQ(s) {\n    return s.quarter();\n  },\n  QQQ: function QQQ(s) {\n    return s.quarter();\n  },\n  QQQQ: function QQQQ(s) {\n    return s.quarter();\n  },\n  //month\n  M: function M(s) {\n    return s.month() + 1;\n  },\n  MM: function MM(s) {\n    return pad(s.month() + 1);\n  },\n  MMM: function MMM(s) {\n    return s.format('month-short');\n  },\n  MMMM: function MMMM(s) {\n    return s.format('month');\n  },\n  //week\n  w: function w(s) {\n    return s.week();\n  },\n  ww: function ww(s) {\n    return pad(s.week());\n  },\n  //week of month\n  // W: (s) => s.week(),\n  //date of month\n  d: function d(s) {\n    return s.date();\n  },\n  dd: function dd(s) {\n    return pad(s.date());\n  },\n  //date of year\n  D: function D(s) {\n    return s.dayOfYear();\n  },\n  DD: function DD(s) {\n    return pad(s.dayOfYear());\n  },\n  DDD: function DDD(s) {\n    return pad(s.dayOfYear(), 3);\n  },\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n  //day\n  E: function E(s) {\n    return s.format('day-short');\n  },\n  EE: function EE(s) {\n    return s.format('day-short');\n  },\n  EEE: function EEE(s) {\n    return s.format('day-short');\n  },\n  EEEE: function EEEE(s) {\n    return s.format('day');\n  },\n  EEEEE: function EEEEE(s) {\n    return s.format('day')[0];\n  },\n  e: function e(s) {\n    return s.day();\n  },\n  ee: function ee(s) {\n    return s.day();\n  },\n  eee: function eee(s) {\n    return s.format('day-short');\n  },\n  eeee: function eeee(s) {\n    return s.format('day');\n  },\n  eeeee: function eeeee(s) {\n    return s.format('day')[0];\n  },\n  //am/pm\n  a: function a(s) {\n    return s.ampm().toUpperCase();\n  },\n  aa: function aa(s) {\n    return s.ampm().toUpperCase();\n  },\n  aaa: function aaa(s) {\n    return s.ampm().toUpperCase();\n  },\n  aaaa: function aaaa(s) {\n    return s.ampm().toUpperCase();\n  },\n  //hour\n  h: function h(s) {\n    return s.h12();\n  },\n  hh: function hh(s) {\n    return pad(s.h12());\n  },\n  H: function H(s) {\n    return s.hour();\n  },\n  HH: function HH(s) {\n    return pad(s.hour());\n  },\n  // j: (s) => {},//weird hour format\n  m: function m(s) {\n    return s.minute();\n  },\n  mm: function mm(s) {\n    return pad(s.minute());\n  },\n  s: function s(_s) {\n    return _s.second();\n  },\n  ss: function ss(s) {\n    return pad(s.second());\n  },\n  //milliseconds in the day\n  A: function A(s) {\n    return s.epoch - s.startOf('day').epoch;\n  },\n  //timezone\n  z: function z(s) {\n    return s.timezone().name;\n  },\n  zz: function zz(s) {\n    return s.timezone().name;\n  },\n  zzz: function zzz(s) {\n    return s.timezone().name;\n  },\n  zzzz: function zzzz(s) {\n    return s.timezone().name;\n  },\n  Z: function Z(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZ: function ZZ(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZZ: function ZZZ(s) {\n    return formatTimezone(s.timezone().current.offset);\n  },\n  ZZZZ: function ZZZZ(s) {\n    return formatTimezone(s.timezone().current.offset, ':');\n  }\n};\n\nvar addAlias = function addAlias(_char, to, n) {\n  var name = _char;\n  var toName = to;\n\n  for (var i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName];\n    name += _char;\n    toName += to;\n  }\n};\n\naddAlias('q', 'Q', 4);\naddAlias('L', 'M', 4);\naddAlias('Y', 'y', 4);\naddAlias('c', 'e', 4);\naddAlias('k', 'H', 2);\naddAlias('K', 'h', 2);\naddAlias('S', 's', 2);\naddAlias('v', 'z', 4);\naddAlias('V', 'Z', 4); // support unix-style escaping with ' character\n\nvar escapeChars = function escapeChars(arr) {\n  for (var i = 0; i < arr.length; i += 1) {\n    if (arr[i] === \"'\") {\n      // greedy-search for next apostrophe\n      for (var o = i + 1; o < arr.length; o += 1) {\n        if (arr[o]) {\n          arr[i] += arr[o];\n        }\n\n        if (arr[o] === \"'\") {\n          arr[o] = null;\n          break;\n        }\n\n        arr[o] = null;\n      }\n    }\n  }\n\n  return arr.filter(function (ch) {\n    return ch;\n  });\n}; //combine consecutive chars, like 'yyyy' as one.\n\n\nvar combineRepeated = function combineRepeated(arr) {\n  for (var i = 0; i < arr.length; i += 1) {\n    var c = arr[i]; // greedy-forward\n\n    for (var o = i + 1; o < arr.length; o += 1) {\n      if (arr[o] === c) {\n        arr[i] += arr[o];\n        arr[o] = null;\n      } else {\n        break;\n      }\n    }\n  } // '' means one apostrophe\n\n\n  arr = arr.filter(function (ch) {\n    return ch;\n  });\n  arr = arr.map(function (str) {\n    if (str === \"''\") {\n      str = \"'\";\n    }\n\n    return str;\n  });\n  return arr;\n};\n\nvar unixFmt = function unixFmt(s, str) {\n  var arr = str.split(''); // support character escaping\n\n  arr = escapeChars(arr); //combine 'yyyy' as string.\n\n  arr = combineRepeated(arr);\n  return arr.reduce(function (txt, c) {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || '';\n    } else {\n      // 'unescape'\n      if (/^'.{1,}'$/.test(c)) {\n        c = c.replace(/'/g, '');\n      }\n\n      txt += c;\n    }\n\n    return txt;\n  }, '');\n};\n\nvar unixFmt_1 = unixFmt;\n\nvar units$2 = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute'];\n\nvar doUnit = function doUnit(s, k) {\n  var start = s.clone().startOf(k);\n  var end = s.clone().endOf(k);\n  var duration = end.epoch - start.epoch;\n  var percent = (s.epoch - start.epoch) / duration;\n  return parseFloat(percent.toFixed(2));\n}; //how far it is along, from 0-1\n\n\nvar progress = function progress(s, unit) {\n  if (unit) {\n    unit = fns.normalize(unit);\n    return doUnit(s, unit);\n  }\n\n  var obj = {};\n  units$2.forEach(function (k) {\n    obj[k] = doUnit(s, k);\n  });\n  return obj;\n};\n\nvar progress_1 = progress;\n\nvar nearest = function nearest(s, unit) {\n  //how far have we gone?\n  var prog = s.progress();\n  unit = fns.normalize(unit); //fix camel-case for this one\n\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour';\n  }\n\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit);\n    } // go to start\n\n\n    s = s.startOf(unit);\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\");\n  }\n\n  return s;\n};\n\nvar nearest_1 = nearest;\n\n//increment until dates are the same\nvar climb = function climb(a, b, unit) {\n  var i = 0;\n  a = a.clone();\n\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  } //oops, we went too-far..\n\n\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n\n  return i;\n}; // do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\n\n\nvar diffOne = function diffOne(a, b, unit) {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit);\n  } else {\n    return climb(b, a, unit) * -1; //reverse it\n  }\n};\n\nvar one = diffOne;\n\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\n\nvar fastYear = function fastYear(a, b) {\n  var years = b.year() - a.year(); // should we decrement it by 1?\n\n  a = a.year(b.year());\n\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n\n  return years;\n}; // use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\n\n\nvar diff$1 = function diff(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  var msDiff = b.epoch - a.epoch;\n  var obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10); //do the year\n\n  var tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year'); //there's always 12 months in a year...\n\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += one(tmp, b, 'month'); // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += one(tmp, b, 'week'); // there's always atleast 7 days in a week\n\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += one(tmp, b, 'day');\n  return obj;\n};\n\nvar waterfall = diff$1;\n\nvar reverseDiff = function reverseDiff(obj) {\n  Object.keys(obj).forEach(function (k) {\n    obj[k] *= -1;\n  });\n  return obj;\n}; // this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\n\n\nvar main$1 = function main(a, b, unit) {\n  b = fns.beADate(b, a); //reverse values, if necessary\n\n  var reversed = false;\n\n  if (a.isAfter(b)) {\n    var tmp = a;\n    a = b;\n    b = tmp;\n    reversed = true;\n  } //compute them all (i know!)\n\n\n  var obj = waterfall(a, b);\n\n  if (reversed) {\n    obj = reverseDiff(obj);\n  } //return just the requested unit\n\n\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit);\n\n    if (/s$/.test(unit) !== true) {\n      unit += 's';\n    }\n\n    if (unit === 'dates') {\n      unit = 'days';\n    }\n\n    return obj[unit];\n  }\n\n  return obj;\n};\n\nvar diff = main$1;\n\n//our conceptual 'break-points' for each unit\n\nvar qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n}; //get number of hours/minutes... between the two dates\n\nfunction getDiff(a, b) {\n  var isBefore = a.isBefore(b);\n  var later = isBefore ? b : a;\n  var earlier = isBefore ? a : b;\n  earlier = earlier.clone();\n  var diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  Object.keys(diff).forEach(function (unit) {\n    if (earlier.isSame(later, unit)) {\n      return;\n    }\n\n    var max = earlier.diff(later, unit);\n    earlier = earlier.add(max, unit);\n    diff[unit] = max;\n  }); //reverse it, if necessary\n\n  if (isBefore) {\n    Object.keys(diff).forEach(function (u) {\n      if (diff[u] !== 0) {\n        diff[u] *= -1;\n      }\n    });\n  }\n\n  return diff;\n} // Expects a plural unit arg\n\n\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1);\n  }\n\n  return value + ' ' + unit;\n} //create the human-readable diff between the two dates\n\n\nvar since = function since(start, end) {\n  end = fns.beADate(end, start);\n  var diff = getDiff(start, end);\n  var isNow = Object.keys(diff).every(function (u) {\n    return !diff[u];\n  });\n\n  if (isNow === true) {\n    return {\n      diff: diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    };\n  }\n\n  var rounded;\n  var qualified;\n  var precise;\n  var englishValues = []; //go through each value and create its text-representation\n\n  Object.keys(diff).forEach(function (unit, i, units) {\n    var value = Math.abs(diff[unit]);\n\n    if (value === 0) {\n      return;\n    }\n\n    var englishValue = pluralize(value, unit);\n    englishValues.push(englishValue);\n\n    if (!rounded) {\n      rounded = qualified = englishValue;\n\n      if (i > 4) {\n        return;\n      } //is it a 'almost' something, etc?\n\n\n      var nextUnit = units[i + 1];\n      var nextValue = Math.abs(diff[nextUnit]);\n\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit);\n        qualified = 'almost ' + rounded;\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue;\n    }\n  }); //make them into a string\n\n  precise = englishValues.splice(0, 2).join(', '); //handle before/after logic\n\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  }\n\n  return {\n    diff: diff,\n    rounded: rounded,\n    qualified: qualified,\n    precise: precise\n  };\n};\n\nvar since_1 = since;\n\n//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nvar seasons = {\n  north: [['spring', 2, 1], //spring march 1\n  ['summer', 5, 1], //june 1\n  ['fall', 8, 1], //sept 1\n  ['autumn', 8, 1], //sept 1\n  ['winter', 11, 1] //dec 1\n  ],\n  south: [['fall', 2, 1], //march 1\n  ['autumn', 2, 1], //march 1\n  ['winter', 5, 1], //june 1\n  ['spring', 8, 1], //sept 1\n  ['summer', 11, 1] //dec 1\n  ]\n};\n\nvar quarters = [null, [0, 1], //jan 1\n[3, 1], //apr 1\n[6, 1], //july 1\n[9, 1] //oct 1\n];\n\nvar units$1 = {\n  minute: function minute(s) {\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  quarterhour: function quarterhour(s) {\n    var minute = s.minutes();\n\n    if (minute >= 45) {\n      s = s.minutes(45);\n    } else if (minute >= 30) {\n      s = s.minutes(30);\n    } else if (minute >= 15) {\n      s = s.minutes(15);\n    } else {\n      s = s.minutes(0);\n    }\n\n    walk_1(s, {\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  hour: function hour(s) {\n    walk_1(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  day: function day(s) {\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  week: function week(s) {\n    var original = s.clone();\n    s = s.day(s._weekStart); //monday\n\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week');\n    }\n\n    walk_1(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  month: function month(s) {\n    walk_1(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  quarter: function quarter(s) {\n    var q = s.quarter();\n\n    if (quarters[q]) {\n      walk_1(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n    }\n\n    return s;\n  },\n  season: function season(s) {\n    var current = s.season();\n    var hem = 'north';\n\n    if (s.hemisphere() === 'South') {\n      hem = 'south';\n    }\n\n    for (var i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        var year = s.year();\n\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1;\n        }\n\n        walk_1(s, {\n          year: year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        });\n        return s;\n      }\n    }\n\n    return s;\n  },\n  year: function year(s) {\n    walk_1(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    });\n    return s;\n  },\n  decade: function decade(s) {\n    s = s.startOf('year');\n    var year = s.year();\n    var decade = parseInt(year / 10, 10) * 10;\n    s = s.year(decade);\n    return s;\n  },\n  century: function century(s) {\n    s = s.startOf('year');\n    var year = s.year(); // near 0AD goes '-1 | +1'\n\n    var decade = parseInt(year / 100, 10) * 100;\n    s = s.year(decade);\n    return s;\n  }\n};\nunits$1.date = units$1.day;\n\nvar startOf = function startOf(a, unit) {\n  var s = a.clone();\n  unit = fns.normalize(unit);\n\n  if (units$1[unit]) {\n    return units$1[unit](s);\n  }\n\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit);\n    return units$1.season(s);\n  }\n\n  return s;\n}; //piggy-backs off startOf\n\n\nvar endOf = function endOf(a, unit) {\n  var s = a.clone();\n  unit = fns.normalize(unit);\n\n  if (units$1[unit]) {\n    // go to beginning, go to next one, step back 1ms\n    s = units$1[unit](s); // startof\n\n    s = s.add(1, unit);\n    s = s.subtract(1, 'millisecond');\n    return s;\n  }\n\n  return s;\n};\n\nvar startOf_1 = {\n  startOf: startOf,\n  endOf: endOf\n};\n\nvar isDay = function isDay(unit) {\n  if (days[\"short\"]().find(function (s) {\n    return s === unit;\n  })) {\n    return true;\n  }\n\n  if (days[\"long\"]().find(function (s) {\n    return s === unit;\n  })) {\n    return true;\n  }\n\n  return false;\n}; // return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\n\n\nvar every = function every(start) {\n  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (!unit || !end) {\n    return [];\n  } //cleanup unit param\n\n\n  unit = fns.normalize(unit); //cleanup to param\n\n  end = start.clone().set(end); //swap them, if they're backwards\n\n  if (start.isAfter(end)) {\n    var tmp = start;\n    start = end;\n    end = tmp;\n  } //support 'every wednesday'\n\n\n  var d = start.clone();\n\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    d = d.next(unit);\n  } //okay, actually start doing it\n\n\n  var result = [];\n\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n\n  return result;\n};\n\nvar every_1 = every;\n\nvar parseDst = function parseDst(dst) {\n  if (!dst) {\n    return [];\n  }\n\n  return dst.split('->');\n};\n\nvar titleCase = function titleCase(str) {\n  str = str[0].toUpperCase() + str.substr(1);\n  str = str.replace(/\\/gmt/, '/GMT');\n  str = str.replace(/[\\/_]([a-z])/gi, function (s) {\n    return s.toUpperCase();\n  });\n  return str;\n}; //get metadata about this timezone\n\n\nvar timezone = function timezone(s) {\n  var zones = s.timezones;\n  var tz = s.tz;\n\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = find(s.tz, zones);\n  }\n\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\");\n    }\n\n    return {\n      current: {\n        epochShift: 0\n      }\n    };\n  }\n\n  var found = zones[tz];\n  var result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  };\n\n  if (result.hasDst) {\n    var arr = parseDst(found.dst);\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    };\n  } //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n\n\n  var summer = found.offset; // (july)\n\n  var winter = summer; // (january) assume it's the same for now\n\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1;\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1;\n    }\n  } //find out which offset to use right now\n  //use 'summer' time july-time\n\n\n  if (result.hasDst === false) {\n    result.current.offset = summer;\n    result.current.isDST = false;\n  } else if (summerTime(s.epoch, result.change.start, result.change.back, summer, winter) === true) {\n    result.current.offset = summer;\n    result.current.isDST = result.hemisphere === 'North'; //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter;\n    result.current.isDST = result.hemisphere === 'South'; //dst 'on' in summer in south\n  }\n\n  return result;\n};\n\nvar timezone_1 = timezone;\n\nvar units = ['century', 'decade', 'year', 'month', 'date', 'day', 'hour', 'minute', 'second', 'millisecond']; //the spacetime instance methods (also, the API)\n\nvar methods$4 = {\n  set: function set(input$1, tz) {\n    var s = this.clone();\n    s = input(s, input$1, null);\n\n    if (tz) {\n      this.tz = find(tz);\n    }\n\n    return s;\n  },\n  timezone: function timezone() {\n    return timezone_1(this);\n  },\n  isDST: function isDST() {\n    return timezone_1(this).current.isDST;\n  },\n  hasDST: function hasDST() {\n    return timezone_1(this).hasDst;\n  },\n  offset: function offset() {\n    return timezone_1(this).current.offset * 60;\n  },\n  hemisphere: function hemisphere() {\n    return timezone_1(this).hemisphere;\n  },\n  format: function format(fmt) {\n    return format_1(this, fmt);\n  },\n  unixFmt: function unixFmt(fmt) {\n    return unixFmt_1(this, fmt);\n  },\n  startOf: function startOf(unit) {\n    return startOf_1.startOf(this, unit);\n  },\n  endOf: function endOf(unit) {\n    return startOf_1.endOf(this, unit);\n  },\n  leapYear: function leapYear() {\n    var year = this.year();\n    return fns.isLeapYear(year);\n  },\n  progress: function progress(unit) {\n    return progress_1(this, unit);\n  },\n  nearest: function nearest(unit) {\n    return nearest_1(this, unit);\n  },\n  diff: function diff$1(d, unit) {\n    return diff(this, d, unit);\n  },\n  since: function since(d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n\n    return since_1(this, d);\n  },\n  next: function next(unit) {\n    var s = this.add(1, unit);\n    return s.startOf(unit);\n  },\n  //the start of the previous year/week/century\n  last: function last(unit) {\n    var s = this.subtract(1, unit);\n    return s.startOf(unit);\n  },\n  isValid: function isValid() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false;\n    }\n\n    return !isNaN(this.d.getTime());\n  },\n  //travel to this timezone\n  \"goto\": function goto(tz) {\n    var s = this.clone();\n    s.tz = find(tz, s.timezones); //science!\n\n    return s;\n  },\n  //get each week/month/day between a -> b\n  every: function every(unit, to) {\n    // allow swapping these params:\n    if (_typeof(unit) === 'object' && typeof to === 'string') {\n      var tmp = to;\n      to = unit;\n      unit = tmp;\n    }\n\n    return every_1(this, unit, to);\n  },\n  isAwake: function isAwake() {\n    var hour = this.hour(); //10pm -> 8am\n\n    if (hour < 8 || hour > 22) {\n      return false;\n    }\n\n    return true;\n  },\n  isAsleep: function isAsleep() {\n    return !this.isAwake();\n  },\n  //pretty-printing\n  log: function log() {\n    console.log('');\n    console.log(format_1(this, 'nice-short'));\n    return this;\n  },\n  logYear: function logYear() {\n    console.log('');\n    console.log(format_1(this, 'full-short'));\n    return this;\n  },\n  json: function json() {\n    var _this = this;\n\n    return units.reduce(function (h, unit) {\n      h[unit] = _this[unit]();\n      return h;\n    }, {});\n  },\n  debug: function debug() {\n    var tz = this.timezone();\n    var date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this;\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function from(d) {\n    d = this.clone().set(d);\n    return d.since(this);\n  },\n  fromNow: function fromNow() {\n    var d = this.clone().set(Date.now());\n    return d.since(this);\n  },\n  weekStart: function weekStart(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this;\n    }\n\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      var num = days[\"short\"]().indexOf(input);\n\n      if (num === -1) {\n        num = days[\"long\"]().indexOf(input);\n      }\n\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n\n    return this;\n  }\n}; // aliases\n\nmethods$4.inDST = methods$4.isDST;\nmethods$4.round = methods$4.nearest;\nmethods$4.each = methods$4.every;\nvar methods_1 = methods$4;\n\n//these methods wrap around them.\n\nvar isLeapYear$1 = fns.isLeapYear;\n\nvar validate = function validate(n) {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10);\n  }\n\n  return n;\n};\n\nvar order$1 = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']; //reduce hostile micro-changes when moving dates by millisecond\n\nvar confirm = function confirm(s, tmp, unit) {\n  var n = order$1.indexOf(unit);\n  var arr = order$1.slice(n, order$1.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    var want = tmp[arr[i]]();\n    s[arr[i]](want);\n  }\n\n  return s;\n};\n\nvar set = {\n  milliseconds: function milliseconds(s, n) {\n    n = validate(n);\n    var current = s.millisecond();\n    var diff = current - n; //milliseconds to shift by\n\n    return s.epoch - diff;\n  },\n  seconds: function seconds(s, n) {\n    n = validate(n);\n    var diff = s.second() - n;\n    var shift = diff * milliseconds.second;\n    return s.epoch - shift;\n  },\n  minutes: function minutes(s, n) {\n    n = validate(n);\n    var old = s.clone();\n    var diff = s.minute() - n;\n    var shift = diff * milliseconds.minute;\n    s.epoch -= shift; // check against a screw-up\n    // if (old.hour() != s.hour()) {\n    //   walkTo(old, {\n    //     minute: n\n    //   })\n    //   return old.epoch\n    // }\n\n    confirm(s, old, 'second');\n    return s.epoch;\n  },\n  hours: function hours(s, n) {\n    n = validate(n);\n\n    if (n >= 24) {\n      n = 24;\n    } else if (n < 0) {\n      n = 0;\n    }\n\n    var old = s.clone();\n    var diff = s.hour() - n;\n    var shift = diff * milliseconds.hour;\n    s.epoch -= shift; // oops, did we change the day?\n\n    if (s.date() !== old.date()) {\n      s = old.clone();\n\n      if (diff > 1) {\n        diff -= 1;\n      }\n\n      if (diff < 1) {\n        diff += 1;\n      }\n\n      shift = diff * milliseconds.hour;\n      s.epoch -= shift;\n    }\n\n    walk_1(s, {\n      hour: n\n    });\n    confirm(s, old, 'minute');\n    return s.epoch;\n  },\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: function time(s, str) {\n    var m = str.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/);\n\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2}) ?(am|pm)/);\n\n      if (!m) {\n        return s.epoch;\n      }\n\n      m.splice(2, 0, '0'); //add implicit 0 minutes\n\n      m.splice(3, 0, ''); //add implicit seconds\n    }\n\n    var h24 = false;\n    var hour = parseInt(m[1], 10);\n    var minute = parseInt(m[2], 10);\n\n    if (hour > 12) {\n      h24 = true;\n    } //make the hour into proper 24h time\n\n\n    if (h24 === false) {\n      if (m[4] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0;\n      }\n\n      if (m[4] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12;\n      }\n    } // handle seconds\n\n\n    m[3] = m[3] || '';\n    m[3] = m[3].replace(/:/, '');\n    var sec = parseInt(m[3], 10) || 0;\n    s = s.hour(hour);\n    s = s.minute(minute);\n    s = s.second(sec);\n    s = s.millisecond(0);\n    return s.epoch;\n  },\n  date: function date(s, n) {\n    n = validate(n); //avoid setting february 31st\n\n    if (n > 28) {\n      var month = s.month();\n      var max = monthLengths_1[month]; // support leap day in february\n\n      if (month === 1 && n === 29 && isLeapYear$1(s.year())) {\n        max = 29;\n      }\n\n      if (n > max) {\n        n = max;\n      }\n    } //avoid setting < 0\n\n\n    if (n <= 0) {\n      n = 1;\n    }\n\n    walk_1(s, {\n      date: n\n    });\n    return s.epoch;\n  },\n  //this one's tricky\n  month: function month(s, n) {\n    if (typeof n === 'string') {\n      n = months$1.mapping()[n.toLowerCase()];\n    }\n\n    n = validate(n); //don't go past december\n\n    if (n >= 12) {\n      n = 11;\n    }\n\n    if (n <= 0) {\n      n = 0;\n    }\n\n    var date = s.date(); //there's no 30th of february, etc.\n\n    if (date > monthLengths_1[n]) {\n      //make it as close as we can..\n      date = monthLengths_1[n];\n    }\n\n    walk_1(s, {\n      month: n,\n      date: date\n    });\n    return s.epoch;\n  },\n  year: function year(s, n) {\n    // support '97\n    if (typeof n === 'string' && /^'[0-9]{2}$/.test(n)) {\n      n = n.replace(/'/, '').trim();\n      n = Number(n); // '89 is 1989\n\n      if (n > 30) {\n        //change this in 10y\n        n = 1900 + n;\n      } else {\n        // '12 is 2012\n        n = 2000 + n;\n      }\n    }\n\n    n = validate(n);\n    walk_1(s, {\n      year: n\n    });\n    return s.epoch;\n  },\n  dayOfYear: function dayOfYear(s, n) {\n    n = validate(n);\n    var old = s.clone();\n    n -= 1; //days are 1-based\n\n    if (n <= 0) {\n      n = 0;\n    } else if (n >= 365) {\n      n = 364;\n    }\n\n    s = s.startOf('year');\n    s = s.add(n, 'day');\n    confirm(s, old, 'hour');\n    return s.epoch;\n  }\n};\n\nvar methods$3 = {\n  millisecond: function millisecond(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.milliseconds(s, num);\n      return s;\n    }\n\n    return this.d.getMilliseconds();\n  },\n  second: function second(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.seconds(s, num);\n      return s;\n    }\n\n    return this.d.getSeconds();\n  },\n  minute: function minute(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.minutes(s, num);\n      return s;\n    }\n\n    return this.d.getMinutes();\n  },\n  hour: function hour(num) {\n    var d = this.d;\n\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.hours(s, num);\n      return s;\n    }\n\n    return d.getHours();\n  },\n  //'3:30' is 3.5\n  hourFloat: function hourFloat(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n\n      var _minute = num % 1;\n\n      _minute = _minute * 60;\n\n      var _hour = parseInt(num, 10);\n\n      s.epoch = set.hours(s, _hour);\n      s.epoch = set.minutes(s, _minute);\n      return s;\n    }\n\n    var d = this.d;\n    var hour = d.getHours();\n    var minute = d.getMinutes();\n    minute = minute / 60;\n    return hour + minute;\n  },\n  // hour in 12h format\n  hour12: function hour12(str) {\n    var d = this.d;\n\n    if (str !== undefined) {\n      var s = this.clone();\n      str = '' + str;\n      var m = str.match(/^([0-9]+)(am|pm)$/);\n\n      if (m) {\n        var hour = parseInt(m[1], 10);\n\n        if (m[2] === 'pm') {\n          hour += 12;\n        }\n\n        s.epoch = set.hours(s, hour);\n      }\n\n      return s;\n    } //get the hour\n\n\n    var hour12 = d.getHours();\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    }\n\n    if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    return hour12;\n  },\n  //some ambiguity here with 12/24h\n  time: function time(str) {\n    if (str !== undefined) {\n      var s = this.clone();\n      str = str.toLowerCase().trim();\n      s.epoch = set.time(s, str);\n      return s;\n    }\n\n    return \"\".concat(this.h12(), \":\").concat(fns.zeroPad(this.minute())).concat(this.ampm());\n  },\n  // either 'am' or 'pm'\n  ampm: function ampm(input) {\n    var which = 'am';\n    var hour = this.hour();\n\n    if (hour >= 12) {\n      which = 'pm';\n    }\n\n    if (typeof input !== 'string') {\n      return which;\n    } //okay, we're doing a setter\n\n\n    var s = this.clone();\n    input = input.toLowerCase().trim(); //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12;\n      return s.hour(hour);\n    }\n\n    if (hour < 12 && input === 'pm') {\n      hour += 12;\n      return s.hour(hour);\n    }\n\n    return s;\n  },\n  //some hard-coded times of day, like 'noon'\n  dayTime: function dayTime(str) {\n    if (str !== undefined) {\n      var times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      };\n      var s = this.clone();\n      str = str || '';\n      str = str.toLowerCase();\n\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str]);\n      }\n\n      return s;\n    }\n\n    var h = this.hour();\n\n    if (h < 6) {\n      return 'night';\n    }\n\n    if (h < 12) {\n      //until noon\n      return 'morning';\n    }\n\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon';\n    }\n\n    if (h < 22) {\n      //until 10pm\n      return 'evening';\n    }\n\n    return 'night';\n  },\n  //parse a proper iso string\n  iso: function iso(num) {\n    if (num !== undefined) {\n      return this.set(num);\n    }\n\n    return this.format('iso');\n  }\n};\nvar _01Time = methods$3;\n\nvar methods$2 = {\n  // # day in the month\n  date: function date(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      num = parseInt(num, 10);\n\n      if (num) {\n        s.epoch = set.date(s, num);\n      }\n\n      return s;\n    }\n\n    return this.d.getDate();\n  },\n  //like 'wednesday' (hard!)\n  day: function day(input) {\n    if (input === undefined) {\n      return this.d.getDay();\n    }\n\n    var original = this.clone();\n    var want = input; // accept 'wednesday'\n\n    if (typeof input === 'string') {\n      input = input.toLowerCase();\n\n      if (days.aliases.hasOwnProperty(input)) {\n        want = days.aliases[input];\n      } else {\n        want = days[\"short\"]().indexOf(input);\n\n        if (want === -1) {\n          want = days[\"long\"]().indexOf(input);\n        }\n      }\n    } //move approx\n\n\n    var day = this.d.getDay();\n    var diff = day - want;\n    var s = this.subtract(diff, 'days'); //tighten it back up\n\n    walk_1(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    });\n    return s;\n  },\n  //these are helpful name-wrappers\n  dayName: function dayName(input) {\n    if (input === undefined) {\n      return days[\"long\"]()[this.day()];\n    }\n\n    var s = this.clone();\n    s = s.day(input);\n    return s;\n  },\n  //either name or number\n  month: function month(input) {\n    if (input !== undefined) {\n      var s = this.clone();\n      s.epoch = set.month(s, input);\n      return s;\n    }\n\n    return this.d.getMonth();\n  }\n};\nvar _02Date = methods$2;\n\nvar clearMinutes = function clearMinutes(s) {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s;\n};\n\nvar methods$1 = {\n  // day 0-366\n  dayOfYear: function dayOfYear(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.dayOfYear(s, num);\n      return s;\n    } //days since newyears - jan 1st is 1, jan 2nd is 2...\n\n\n    var sum = 0;\n    var month = this.d.getMonth();\n    var tmp; //count the num days in each month\n\n    for (var i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n\n      sum += tmp.getDate();\n    }\n\n    return sum + this.d.getDate();\n  },\n  //since the start of the year\n  week: function week(num) {\n    // week-setter\n    if (num !== undefined) {\n      var s = this.clone();\n      s = s.month(0);\n      s = s.date(1);\n      s = s.day('monday');\n      s = clearMinutes(s); //first week starts first Thurs in Jan\n      // so mon dec 28th is 1st week\n      // so mon dec 29th is not the week\n\n      if (s.monthName() === 'december' && s.date() >= 28) {\n        s = s.add(1, 'week');\n      }\n\n      num -= 1; //1-based\n\n      s = s.add(num, 'weeks');\n      return s;\n    } //find-out which week it is\n\n\n    var tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday'); //don't go into last-year\n\n    if (tmp.monthName() === 'december' && tmp.date() >= 28) {\n      tmp = tmp.add(1, 'week');\n    } // is first monday the 1st?\n\n\n    var toAdd = 1;\n\n    if (tmp.date() === 1) {\n      toAdd = 0;\n    }\n\n    tmp = tmp.minus(1, 'second');\n    var thisOne = this.epoch; //if the week technically hasn't started yet\n\n    if (tmp.epoch > thisOne) {\n      return 1;\n    } //speed it up, if we can\n\n\n    var i = 0;\n    var skipWeeks = this.month() * 4;\n    tmp.epoch += milliseconds.week * skipWeeks;\n    i += skipWeeks;\n\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd;\n      }\n\n      tmp = tmp.add(1, 'week');\n    }\n\n    return 52;\n  },\n  //'january'\n  monthName: function monthName(input) {\n    if (input === undefined) {\n      return months$1[\"long\"]()[this.month()];\n    }\n\n    var s = this.clone();\n    s = s.month(input);\n    return s;\n  },\n  //q1, q2, q3, q4\n  quarter: function quarter(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n\n      if (quarters[num]) {\n        var s = this.clone();\n        var _month = quarters[num][0];\n        s = s.month(_month);\n        s = s.date(1);\n        s = s.startOf('day');\n        return s;\n      }\n    }\n\n    var month = this.d.getMonth();\n\n    for (var i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1;\n      }\n    }\n\n    return 4;\n  },\n  //spring, summer, winter, fall\n  season: function season(input) {\n    var hem = 'north';\n\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n\n    if (input !== undefined) {\n      var s = this.clone();\n\n      for (var i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1]);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n\n      return s;\n    }\n\n    var month = this.d.getMonth();\n\n    for (var _i = 0; _i < seasons[hem].length - 1; _i++) {\n      if (month >= seasons[hem][_i][1] && month < seasons[hem][_i + 1][1]) {\n        return seasons[hem][_i][0];\n      }\n    }\n\n    return 'winter';\n  },\n  //the year number\n  year: function year(num) {\n    if (num !== undefined) {\n      var s = this.clone();\n      s.epoch = set.year(s, num);\n      return s;\n    }\n\n    return this.d.getFullYear();\n  },\n  //bc/ad years\n  era: function era(str) {\n    if (str !== undefined) {\n      var s = this.clone();\n      str = str.toLowerCase(); //TODO: there is no year-0AD i think. may have off-by-1 error here\n\n      var year = s.d.getFullYear(); //make '1992' into 1992bc..\n\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1);\n      } //make '1992bc' into '1992'\n\n\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1);\n      }\n\n      return s;\n    }\n\n    if (this.d.getFullYear() < 0) {\n      return 'BC';\n    }\n\n    return 'AD';\n  },\n  // 2019 -> 2010\n  decade: function decade(input) {\n    if (input !== undefined) {\n      input = String(input);\n      input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input');\n        return this;\n      } // assume 20th century?? for '70s'.\n\n\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input;\n      }\n\n      var year = Number(input);\n\n      if (isNaN(year)) {\n        return this;\n      } // round it down to the decade\n\n\n      year = Math.floor(year / 10) * 10;\n      return this.year(year); //.startOf('decade')\n    }\n\n    return this.startOf('decade').year();\n  },\n  // 1950 -> 19+1\n  century: function century(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, function (a, b, c) {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b;\n          }\n\n          return b;\n        });\n        input = input.replace(/c$/, ''); //20thC\n      }\n\n      var year = Number(input);\n\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input');\n        return this;\n      } // there is no century 0\n\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      if (year >= 0) {\n        year = (year - 1) * 100;\n      } else {\n        year = (year + 1) * 100;\n      }\n\n      return this.year(year);\n    } // century getter\n\n\n    var num = this.startOf('century').year();\n    num = Math.floor(num / 100);\n\n    if (num < 0) {\n      return num - 1;\n    }\n\n    return num + 1;\n  },\n  // 2019 -> 2+1\n  millenium: function millenium(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = Number(input);\n\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input');\n          return this;\n        }\n      }\n\n      if (input > 0) {\n        input -= 1;\n      }\n\n      var year = input * 1000; // there is no year 0\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      return this.year(year);\n    } // get the current millenium\n\n\n    var num = Math.floor(this.year() / 1000);\n\n    if (num >= 0) {\n      num += 1;\n    }\n\n    return num;\n  }\n};\nvar _03Year = methods$1;\n\nvar methods = Object.assign({}, _01Time, _02Date, _03Year); //aliases\n\nmethods.milliseconds = methods.millisecond;\nmethods.seconds = methods.second;\nmethods.minutes = methods.minute;\nmethods.hours = methods.hour;\nmethods.hour24 = methods.hour;\nmethods.h12 = methods.hour12;\nmethods.h24 = methods.hour24;\nmethods.days = methods.day;\n\nvar addMethods$4 = function addMethods(Space) {\n  //hook the methods into prototype\n  Object.keys(methods).forEach(function (k) {\n    Space.prototype[k] = methods[k];\n  });\n};\n\nvar query = addMethods$4;\n\nvar isLeapYear = fns.isLeapYear;\n\nvar getMonthLength = function getMonthLength(month, year) {\n  if (month === 1 && isLeapYear(year)) {\n    return 29;\n  }\n\n  return monthLengths_1[month];\n}; //month is the one thing we 'model/compute'\n//- because ms-shifting can be off by enough\n\n\nvar rollMonth = function rollMonth(want, old) {\n  //increment year\n  if (want.month > 0) {\n    var years = parseInt(want.month / 12, 10);\n    want.year = old.year() + years;\n    want.month = want.month % 12;\n  } else if (want.month < 0) {\n    //decrement year\n    var _years = Math.floor(Math.abs(want.month) / 13, 10);\n\n    _years = Math.abs(_years) + 1;\n    want.year = old.year() - _years; //ignore extras\n\n    want.month = want.month % 12;\n    want.month = want.month + 12;\n\n    if (want.month === 12) {\n      want.month = 0;\n    }\n  }\n\n  return want;\n}; // briefly support day=-2 (this does not need to be perfect.)\n\n\nvar rollDaysDown = function rollDaysDown(want, old, sum) {\n  want.year = old.year();\n  want.month = old.month();\n  var date = old.date();\n  want.date = date - Math.abs(sum);\n\n  while (want.date < 1) {\n    want.month -= 1;\n\n    if (want.month < 0) {\n      want.month = 11;\n      want.year -= 1;\n    }\n\n    var max = getMonthLength(want.month, want.year);\n    want.date += max;\n  }\n\n  return want;\n}; // briefly support day=33 (this does not need to be perfect.)\n\n\nvar rollDaysUp = function rollDaysUp(want, old, sum) {\n  var year = old.year();\n  var month = old.month();\n  var max = getMonthLength(month, year);\n\n  while (sum > max) {\n    sum -= max;\n    month += 1;\n\n    if (month >= 12) {\n      month -= 12;\n      year += 1;\n    }\n\n    max = getMonthLength(month, year);\n  }\n\n  want.month = month;\n  want.date = sum;\n  return want;\n};\n\nvar _model = {\n  months: rollMonth,\n  days: rollDaysUp,\n  daysBack: rollDaysDown\n};\n\n// but briefly:\n// millisecond-math, and some post-processing covers most-things\n// we 'model' the calendar here only a little bit\n// and that usually works-out...\n\nvar order = ['millisecond', 'second', 'minute', 'hour', 'date', 'month'];\nvar keep = {\n  second: order.slice(0, 1),\n  minute: order.slice(0, 2),\n  quarterhour: order.slice(0, 2),\n  hour: order.slice(0, 3),\n  date: order.slice(0, 4),\n  month: order.slice(0, 4),\n  quarter: order.slice(0, 4),\n  season: order.slice(0, 4),\n  year: order,\n  decade: order,\n  century: order\n};\nkeep.week = keep.hour;\nkeep.season = keep.date;\nkeep.quarter = keep.date; // Units need to be dst adjuested\n\nvar dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n};\nvar keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n};\n\nvar addMethods$3 = function addMethods(SpaceTime) {\n  SpaceTime.prototype.add = function (num, unit) {\n    var s = this.clone();\n\n    if (!unit || num === 0) {\n      return s; //don't bother\n    }\n\n    var old = this.clone();\n    unit = fns.normalize(unit);\n\n    if (unit === 'millisecond') {\n      s.epoch += num;\n      return s;\n    } // support 'fortnight' alias\n\n\n    if (unit === 'fortnight') {\n      num *= 2;\n      unit = 'week';\n    } //move forward by the estimated milliseconds (rough)\n\n\n    if (milliseconds[unit]) {\n      s.epoch += milliseconds[unit] * num;\n    } else if (unit === 'week') {\n      s.epoch += milliseconds.day * (num * 7);\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += milliseconds.month * (num * 3);\n    } else if (unit === 'quarterhour') {\n      s.epoch += milliseconds.minute * 15 * num;\n    } //now ensure our milliseconds/etc are in-line\n\n\n    var want = {};\n\n    if (keep[unit]) {\n      keep[unit].forEach(function (u) {\n        want[u] = old[u]();\n      });\n    }\n\n    if (dstAwareUnits[unit]) {\n      var diff = old.timezone().current.offset - s.timezone().current.offset;\n      s.epoch += diff * 3600 * 1000;\n    } //ensure month/year has ticked-over\n\n\n    if (unit === 'month') {\n      want.month = old.month() + num; //month is the one unit we 'model' directly\n\n      want = _model.months(want, old);\n    } //support coercing a week, too\n\n\n    if (unit === 'week') {\n      var sum = old.date() + num * 7;\n\n      if (sum <= 28 && sum > 1) {\n        want.date = sum;\n      }\n    } //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n        if (num < 0) {\n          want = _model.daysBack(want, old, num);\n        } else {\n          //specify a naive date number, if it's easy to do...\n          var _sum = old.date() + num; // ok, model this one too\n\n\n          want = _model.days(want, old, _sum);\n        } //manually punt it if we haven't moved at all..\n\n\n        if (num !== 0 && old.isSame(s, 'day')) {\n          want.date = old.date() + num;\n        }\n      } // ensure a quarter is 3 months over\n      else if (unit === 'quarter') {\n          want.month = old.month() + num * 3;\n          want.year = old.year(); // handle rollover\n\n          if (want.month < 0) {\n            var years = Math.floor(want.month / 12);\n            var remainder = want.month + Math.abs(years) * 12;\n            want.month = remainder;\n            want.year += years;\n          } else if (want.month >= 12) {\n            var _years = Math.floor(want.month / 12);\n\n            want.month = want.month % 12;\n            want.year += _years;\n          }\n\n          want.date = old.date();\n        } //ensure year has changed (leap-years)\n        else if (unit === 'year') {\n            var wantYear = old.year() + num;\n            var haveYear = s.year();\n\n            if (haveYear < wantYear) {\n              s.epoch += milliseconds.day;\n            } else if (haveYear > wantYear) {\n              s.epoch += milliseconds.day;\n            }\n          } //these are easier\n          else if (unit === 'decade') {\n              want.year = s.year() + 10;\n            } else if (unit === 'century') {\n              want.year = s.year() + 100;\n            } //keep current date, unless the month doesn't have it.\n\n\n    if (keepDate[unit]) {\n      var max = monthLengths_1[want.month];\n      want.date = old.date();\n\n      if (want.date > max) {\n        want.date = max;\n      }\n    }\n\n    if (Object.keys(want).length > 1) {\n      walk_1(s, want);\n    }\n\n    return s;\n  }; //subtract is only add *-1\n\n\n  SpaceTime.prototype.subtract = function (num, unit) {\n    var s = this.clone();\n    return s.add(num * -1, unit);\n  }; //add aliases\n\n\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract;\n  SpaceTime.prototype.plus = SpaceTime.prototype.add;\n};\n\nvar add = addMethods$3;\n\n//make a string, for easy comparison between dates\nvar print = {\n  millisecond: function millisecond(s) {\n    return s.epoch;\n  },\n  second: function second(s) {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-');\n  },\n  minute: function minute(s) {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-');\n  },\n  hour: function hour(s) {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-');\n  },\n  day: function day(s) {\n    return [s.year(), s.month(), s.date()].join('-');\n  },\n  week: function week(s) {\n    return [s.year(), s.week()].join('-');\n  },\n  month: function month(s) {\n    return [s.year(), s.month()].join('-');\n  },\n  quarter: function quarter(s) {\n    return [s.year(), s.quarter()].join('-');\n  },\n  year: function year(s) {\n    return s.year();\n  }\n};\nprint.date = print.day;\n\nvar addMethods$2 = function addMethods(SpaceTime) {\n  SpaceTime.prototype.isSame = function (b, unit) {\n    var tzAware = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var a = this;\n\n    if (!unit) {\n      return null;\n    } // support swapped params\n\n\n    if (typeof b === 'string' && _typeof(unit) === 'object') {\n      var tmp = b;\n      b = unit;\n      unit = tmp;\n    }\n\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name);\n    } //support 'seconds' aswell as 'second'\n\n\n    unit = unit.replace(/s$/, ''); // make them the same timezone for proper comparison\n\n    if (tzAware === true && a.tz !== b.tz) {\n      b = b.clone();\n      b.tz = a.tz;\n    }\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b);\n    }\n\n    return null;\n  };\n};\n\nvar same = addMethods$2;\n\nvar addMethods$1 = function addMethods(SpaceTime) {\n  var methods = {\n    isAfter: function isAfter(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch > epoch;\n    },\n    isBefore: function isBefore(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch < epoch;\n    },\n    isEqual: function isEqual(d) {\n      d = fns.beADate(d, this);\n      var epoch = fns.getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch === epoch;\n    },\n    isBetween: function isBetween(start, end) {\n      var isInclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      start = fns.beADate(start, this);\n      end = fns.beADate(end, this);\n      var startEpoch = fns.getEpoch(start);\n\n      if (startEpoch === null) {\n        return null;\n      }\n\n      var endEpoch = fns.getEpoch(end);\n\n      if (endEpoch === null) {\n        return null;\n      }\n\n      if (isInclusive) {\n        return this.isBetween(start, end) || this.isEqual(start) || this.isEqual(end);\n      }\n\n      return startEpoch < this.epoch && this.epoch < endEpoch;\n    }\n  }; //hook them into proto\n\n  Object.keys(methods).forEach(function (k) {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar compare = addMethods$1;\n\nvar addMethods = function addMethods(SpaceTime) {\n  var methods = {\n    i18n: function i18n(data) {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days);\n      } //change the month names\n\n\n      if (fns.isObject(data.months)) {\n        months$1.set(data.months);\n      } // change the the display style of the month / day names\n\n\n      if (fns.isBoolean(data.useTitleCase)) {\n        caseFormat.set(data.useTitleCase);\n      }\n    }\n  }; //hook them into proto\n\n  Object.keys(methods).forEach(function (k) {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nvar i18n = addMethods;\n\nvar timezones = unpack; //fake timezone-support, for fakers (es5 class)\n\nvar SpaceTime = function SpaceTime(input$1, tz) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  //the holy moment\n  this.epoch = null; //the shift for the given timezone\n\n  this.tz = find(tz, timezones); //whether to output warnings to console\n\n  this.silent = options.silent || true; // favour british interpretation of 02/02/2018, etc\n\n  this.british = options.dmy || options.british; //does the week start on sunday, or monday:\n\n  this._weekStart = 1; //default to monday\n\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart;\n  } // the reference today date object, (for testing)\n\n\n  this._today = {};\n\n  if (options.today !== undefined) {\n    this._today = options.today;\n  } //add getter/setters\n\n\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function get() {\n      var offset = quick(this); //every computer is somewhere- get this computer's built-in offset\n\n      var bias = new Date(this.epoch).getTimezoneOffset() || 0; //movement\n\n      var shift = bias + offset * 60; //in minutes\n\n      shift = shift * 60 * 1000; //in ms\n      //remove this computer's offset\n\n      var epoch = this.epoch + shift;\n      var d = new Date(epoch);\n      return d;\n    }\n  }); //add this data on the object, to allow adding new timezones\n\n  Object.defineProperty(this, 'timezones', {\n    get: function get() {\n      return timezones;\n    },\n    set: function set(obj) {\n      timezones = obj;\n      return obj;\n    }\n  }); //parse the various formats\n\n  var tmp = input(this, input$1, tz);\n  this.epoch = tmp.epoch;\n}; //(add instance methods to prototype)\n\n\nObject.keys(methods_1).forEach(function (k) {\n  SpaceTime.prototype[k] = methods_1[k];\n}); // ¯\\_(ツ)_/¯\n\nSpaceTime.prototype.clone = function () {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart,\n    today: this._today\n  });\n}; //return native date object at the same epoch\n\n\nSpaceTime.prototype.toLocalDate = function () {\n  return new Date(this.epoch);\n}; //append more methods\n\n\nquery(SpaceTime);\nadd(SpaceTime);\nsame(SpaceTime);\ncompare(SpaceTime);\ni18n(SpaceTime);\nvar spacetime = SpaceTime;\n\nvar whereIts = function whereIts(a, b) {\n  var start = new spacetime(null);\n  var end = new spacetime(null);\n  start = start.time(a); //if b is undefined, use as 'within one hour'\n\n  if (b) {\n    end = end.time(b);\n  } else {\n    end = start.add(59, 'minutes');\n  }\n\n  var startHour = start.hour();\n  var endHour = end.hour();\n  var tzs = Object.keys(start.timezones).filter(function (tz) {\n    if (tz.indexOf('/') === -1) {\n      return false;\n    }\n\n    var m = new spacetime(null, tz);\n    var hour = m.hour(); //do 'calendar-compare' not real-time-compare\n\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false;\n      }\n\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return tzs;\n};\n\nvar whereIts_1 = whereIts;\n\nvar _version = '6.14.0';\n\nvar main = function main(input, tz, options) {\n  return new spacetime(input, tz, options);\n}; // set all properties of a given 'today' object\n\n\nvar setToday = function setToday(s) {\n  var today = s._today || {};\n  Object.keys(today).forEach(function (k) {\n    s = s[k](today[k]);\n  });\n  return s;\n}; //some helper functions on the main method\n\n\nmain.now = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s;\n};\n\nmain.today = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.startOf('day');\n};\n\nmain.tomorrow = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.add(1, 'day').startOf('day');\n};\n\nmain.yesterday = function (tz, options) {\n  var s = new spacetime(new Date().getTime(), tz, options);\n  s = setToday(s);\n  return s.subtract(1, 'day').startOf('day');\n};\n\nmain.extend = function (obj) {\n  Object.keys(obj).forEach(function (k) {\n    spacetime.prototype[k] = obj[k];\n  });\n  return this;\n};\n\nmain.timezones = function () {\n  var s = new spacetime();\n  return s.timezones;\n};\n\nmain.max = function (tz, options) {\n  var s = new spacetime(null, tz, options);\n  s.epoch = 8640000000000000;\n  return s;\n};\n\nmain.min = function (tz, options) {\n  var s = new spacetime(null, tz, options);\n  s.epoch = -8640000000000000;\n  return s;\n}; //find tz by time\n\n\nmain.whereIts = whereIts_1;\nmain.version = _version; //aliases:\n\nmain.plugin = main.extend;\nvar src = main;\n\nexport default src;\n"]},"metadata":{},"sourceType":"module"}