{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport TimezoneSelect from 'react-timezone-select';\nimport '../../App.css';\nimport { userActions } from '../../_actions';\nimport { getDefaultUserImage } from '../../_constants/avatar';\nimport { CURRENCY } from '../../_helper/money';\nimport { UploadImage } from '../Image/UploadImage';\nimport { GrEdit } from 'react-icons/gr'; //Define a Login Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  //call the constructor method\n  constructor(props) {\n    var _this$props$user, _this$props$user2, _this$props$user3, _this$props$user4, _this$props$user5, _this$props$user6;\n\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.avatarChangeHandler = imageUrl => {\n      this.setState({\n        imageUrl\n      });\n    };\n\n    this.firstNameChangeHandler = e => {\n      this.setState({\n        firstName: e.target.value\n      });\n    };\n\n    this.lastNameChangeHandler = e => {\n      this.setState({\n        lastName: e.target.value\n      });\n    };\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.currentPasswordChangehandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.newPasswordChangeHandler = e => {\n      this.setState({\n        new_password: e.target.value\n      });\n    };\n\n    this.timezoneHandler = value => {\n      this.setState({\n        timeZone: value.value\n      });\n    };\n\n    this.currencyHandler = value => {\n      this.setState({\n        currency: value[0].name\n      });\n    };\n\n    this.submitSignup = e => {\n      //var headers = new Headers();\n      //prevent page from refresh\n      e.preventDefault();\n      const data = {\n        user: {\n          first_name: this.state.firstName,\n          last_name: this.state.lastName,\n          email: this.state.username,\n          default_currency: this.state.currency,\n          password: this.props.user.password,\n          time_zone: this.state.timeZone,\n          avatar: this.state.imageUrl\n        }\n      };\n\n      if (this.state.new_password) {\n        data.user.password = this.state.password;\n        data.user.new_password = this.state.new_password;\n      }\n\n      this.props.update(data);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      firstName: (_this$props$user = this.props.user) === null || _this$props$user === void 0 ? void 0 : _this$props$user.first_name,\n      lastName: (_this$props$user2 = this.props.user) === null || _this$props$user2 === void 0 ? void 0 : _this$props$user2.last_name,\n      username: (_this$props$user3 = this.props.user) === null || _this$props$user3 === void 0 ? void 0 : _this$props$user3.email,\n      password: null,\n      new_password: null,\n      timeZone: (_this$props$user4 = this.props.user) === null || _this$props$user4 === void 0 ? void 0 : _this$props$user4.time_zone,\n      currency: (_this$props$user5 = this.props.user) === null || _this$props$user5 === void 0 ? void 0 : _this$props$user5.default_currency,\n      imageUrl: (_this$props$user6 = this.props.user) === null || _this$props$user6 === void 0 ? void 0 : _this$props$user6.avatar,\n      editMode: false\n    }; //Bind the handlers to this class\n\n    this.firstNameChangeHandler = this.firstNameChangeHandler.bind(this);\n    this.lastNameChangeHandler = this.lastNameChangeHandler.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.currentPasswordChangehandler = this.currentPasswordChangehandler.bind(this);\n    this.newPasswordChangeHandler = this.newPasswordChangeHandler.bind(this);\n    this.submitSignup = this.submitSignup.bind(this);\n    this.timezoneHandler = this.timezoneHandler.bind(this);\n    this.currencyHandler = this.currencyHandler.bind(this);\n    this.avatarChangeHandler = this.avatarChangeHandler.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  }\n\n  setEditMode() {\n    this.setState({\n      editMode: true\n    });\n  }\n\n  render() {\n    console.log('Here ' + this.props.user);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!this.props.user && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 30\n      }, this), this.props.user && /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            style: {\n              'width': '20%',\n              marginTop: '3%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: '17rem'\n              },\n              src: \"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(UploadImage, {\n              label: \"Your avatar\",\n              defaultImage: this.state.imageUrl || getDefaultUserImage(),\n              onChange: this.avatarChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '35rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(EditableField, {\n                  parentReloaded: this.state.reloaded,\n                  setParentEditMode: this.setEditMode.bind(this),\n                  controlId: \"formFirstName\",\n                  label: \"First name\",\n                  value: this.state.firstName,\n                  onChange: this.firstNameChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditableField, {\n                  parentReloaded: this.state.reloaded,\n                  setParentEditMode: this.setEditMode.bind(this),\n                  controlId: \"formLastName\",\n                  label: \"Last name\",\n                  value: this.state.lastName,\n                  onChange: this.lastNameChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'baseline'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: this.props.user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditablePasswordField, {\n                  parentReloaded: this.state.reloaded,\n                  setParentEditMode: this.setEditMode.bind(this),\n                  controlId: \"formLastName\",\n                  currentPassword: this.state.password,\n                  newPassword: this.state.new_password,\n                  onChangeCurrent: this.currentPasswordChangehandler,\n                  onChangeNew: this.newPasswordChangeHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                    id: \"currency\",\n                    labelKey: \"name\",\n                    onChange: this.currencyHandler,\n                    options: CURRENCY,\n                    placeholder: \"Choose a currency...\",\n                    defaultInputValue: this.state.currency,\n                    renderMenuItemChildren: (option, props) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: option.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 29\n                      }, this), ' ']\n                    }, option.name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Time Zone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TimezoneSelect, {\n                    value: 'America/Los Angeles',\n                    onChange: this.timezoneHandler,\n                    defaultInputValue: this.state.timeZone,\n                    timezones: {\n                      'America/Los_Angeles': 'Los Angeles',\n                      'Europe/Berlin': 'Frankfurt',\n                      'Asia/Kuwait': 'Kuwait',\n                      'Asia/Bahrain': 'Bahrain',\n                      'Canada/Mountain': 'Canada Mountain',\n                      'Canada/Pacific': 'Canada Pacific',\n                      'Asia/Kolkata': 'Indian Standard Time' //    ...i18nTimezones,\n\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  type: \"submit\",\n                  onClick: this.submitSignup,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst EditableField = props => {\n  _s();\n\n  const [editMode, setEditMode] = useState(props.editMode);\n\n  if (editMode) {\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: `${props.controlId}Edit`,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: props.value || '',\n        onChange: props.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: `${props.controlId}View`,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: props.value || 'none'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), \" \\xA0 \", /*#__PURE__*/_jsxDEV(GrEdit, {\n        onClick: () => {\n          setEditMode(true);\n          props.setParentEditMode(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditableField, \"c/HUDmS1Caax1w5Qfaw19PAJR1g=\");\n\n_c = EditableField;\n\nconst EditablePasswordField = props => {\n  _s2();\n\n  const [editMode, setEditMode] = useState(props.editMode);\n\n  if (editMode) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: `${props.controlId}CurrentEdit`,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: props.currentPassword || '',\n          onChange: props.onChangeCurrent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: `${props.controlId}NewEdit`,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: props.newPassword || '',\n          onChange: props.onChangeNew\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: `${props.controlId}View`,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this), \" \\xA0 \", /*#__PURE__*/_jsxDEV(GrEdit, {\n        onClick: () => {\n          setEditMode(true);\n          props.setParentEditMode(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditablePasswordField, \"c/HUDmS1Caax1w5Qfaw19PAJR1g=\");\n\n_c2 = EditablePasswordField;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  const {\n    updating\n  } = state.update;\n  return {\n    updating,\n    user\n  };\n}\n\nconst actionCreators = {\n  update: userActions.update\n};\nconst connectedProfilePage = connect(mapState, actionCreators)(Profile);\nexport { connectedProfilePage as Profile, Profile as ProfileForTest };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableField\");\n$RefreshReg$(_c2, \"EditablePasswordField\");","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Profile/Profile.js"],"names":["React","Component","useState","Button","Card","Col","Container","Form","ListGroup","Row","Typeahead","connect","Redirect","TimezoneSelect","userActions","getDefaultUserImage","CURRENCY","UploadImage","GrEdit","Profile","constructor","props","avatarChangeHandler","imageUrl","setState","firstNameChangeHandler","e","firstName","target","value","lastNameChangeHandler","lastName","usernameChangeHandler","username","currentPasswordChangehandler","password","newPasswordChangeHandler","new_password","timezoneHandler","timeZone","currencyHandler","currency","name","submitSignup","preventDefault","data","user","first_name","state","last_name","email","default_currency","time_zone","avatar","update","editMode","bind","componentWillMount","authFlag","setEditMode","render","console","log","alignItems","marginTop","width","reloaded","display","flexDirection","option","EditableField","controlId","label","onChange","setParentEditMode","EditablePasswordField","currentPassword","onChangeCurrent","newPassword","onChangeNew","mapState","authentication","updating","actionCreators","connectedProfilePage","ProfileForTest"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Button, Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport TimezoneSelect from 'react-timezone-select';\nimport '../../App.css';\nimport { userActions } from '../../_actions';\nimport { getDefaultUserImage } from '../../_constants/avatar';\nimport { CURRENCY } from '../../_helper/money';\nimport { UploadImage } from '../Image/UploadImage';\nimport { GrEdit } from 'react-icons/gr';\n\n//Define a Login Component\nclass Profile extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props);\n    //maintain the state required for this component\n    this.state = {\n      firstName: this.props.user?.first_name,\n      lastName: this.props.user?.last_name,\n      username: this.props.user?.email,\n      password: null,\n      new_password: null,\n      timeZone: this.props.user?.time_zone,\n      currency: this.props.user?.default_currency,\n      imageUrl: this.props.user?.avatar,\n      editMode: false,\n    };\n\n    //Bind the handlers to this class\n    this.firstNameChangeHandler = this.firstNameChangeHandler.bind(this);\n    this.lastNameChangeHandler = this.lastNameChangeHandler.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.currentPasswordChangehandler = this.currentPasswordChangehandler.bind(this);\n    this.newPasswordChangeHandler = this.newPasswordChangeHandler.bind(this);\n    this.submitSignup = this.submitSignup.bind(this);\n    this.timezoneHandler = this.timezoneHandler.bind(this);\n    this.currencyHandler = this.currencyHandler.bind(this);\n    this.avatarChangeHandler = this.avatarChangeHandler.bind(this);\n  }\n  //Call the Will Mount to set the auth Flag to false\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    })\n  }\n  avatarChangeHandler = (imageUrl) => {\n    this.setState({ imageUrl });\n  }\n\n  //name change handler to update state variable with the text entered by the user\n  firstNameChangeHandler = (e) => {\n    this.setState({\n      firstName: e.target.value\n    })\n  }\n  //name change handler to update state variable with the text entered by the user\n  lastNameChangeHandler = (e) => {\n    this.setState({\n      lastName: e.target.value\n    })\n  }\n  //username change handler to update state variable with the text entered by the user\n  usernameChangeHandler = (e) => {\n    this.setState({\n      username: e.target.value\n    })\n  }\n  //password change handler to update state variable with the text entered by the user\n  currentPasswordChangehandler = (e) => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n  //password change handler to update state variable with the text entered by the user\n  newPasswordChangeHandler = (e) => {\n    this.setState({\n      new_password: e.target.value\n    })\n  }\n  //timezone change handler\n  timezoneHandler = (value) => {\n    this.setState({\n      timeZone: value.value\n    })\n  }\n  //timezone change handler\n  currencyHandler = (value) => {\n    this.setState({\n      currency: value[0].name\n    })\n  }\n  //submit Login handler to send a request to the node backend\n  submitSignup = (e) => {\n    //var headers = new Headers();\n    //prevent page from refresh\n    e.preventDefault();\n    const data = {\n      user: {\n        first_name: this.state.firstName,\n        last_name: this.state.lastName,\n        email: this.state.username,\n        default_currency: this.state.currency,\n        password: this.props.user.password,\n        time_zone: this.state.timeZone,\n        avatar: this.state.imageUrl,\n      }\n    }\n\n    if (this.state.new_password) {\n      data.user.password = this.state.password;\n      data.user.new_password = this.state.new_password;\n    }\n\n    this.props.update(data);\n    this.setState({ editMode: false });\n  }\n\n  setEditMode() {\n    this.setState({ editMode: true });\n  }\n\n  render() {\n    console.log('Here ' + this.props.user);\n    return (\n      <>\n        {!this.props.user && <Redirect to='/login' />}\n        {this.props.user &&\n          <Container>\n            <Row style={{ alignItems: 'center' }}>\n              <Col lg={3} style={{ 'width': '20%', marginTop: '3%' }}>\n                <img style={{ width: '17rem' }} src=\"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\" alt=\"Logo\" />\n              </Col>\n              <Col lg={3}>\n                <UploadImage label=\"Your avatar\" defaultImage={this.state.imageUrl || getDefaultUserImage()} onChange={this.avatarChangeHandler}></UploadImage>\n              </Col>\n              <Col lg={6}>\n                <Card style={{ width: '35rem' }}>\n                  <Form>\n                    <EditableField parentReloaded={this.state.reloaded} setParentEditMode={this.setEditMode.bind(this)} controlId=\"formFirstName\" label=\"First name\" value={this.state.firstName} onChange={this.firstNameChangeHandler} />\n                    <EditableField parentReloaded={this.state.reloaded} setParentEditMode={this.setEditMode.bind(this)} controlId=\"formLastName\" label=\"Last name\" value={this.state.lastName} onChange={this.lastNameChangeHandler} />\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'baseline' }}>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Label>{this.props.user.email}</Form.Label>\n                      </div>\n                    </Form.Group>\n                    <EditablePasswordField parentReloaded={this.state.reloaded} setParentEditMode={this.setEditMode.bind(this)} controlId=\"formLastName\" currentPassword={this.state.password} newPassword={this.state.new_password} onChangeCurrent={this.currentPasswordChangehandler} onChangeNew={this.newPasswordChangeHandler} />\n                    <Form.Group>\n                      <Form.Label>Currency</Form.Label>\n                      <Typeahead\n                        id=\"currency\"\n                        labelKey=\"name\"\n                        onChange={this.currencyHandler}\n                        options={CURRENCY}\n                        placeholder=\"Choose a currency...\"\n                        defaultInputValue={this.state.currency}\n                        renderMenuItemChildren={(option, props) => (\n                          <ListGroup.Item key={option.name}>\n                            <span>{option.name}</span>{' '}\n                          </ListGroup.Item>\n                        )}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Time Zone</Form.Label>\n                      <TimezoneSelect\n                        value={'America/Los Angeles'}\n                        onChange={this.timezoneHandler}\n                        defaultInputValue={this.state.timeZone}\n                        timezones={{\n                          'America/Los_Angeles': 'Los Angeles',\n                          'Europe/Berlin': 'Frankfurt',\n                          'Asia/Kuwait': 'Kuwait',\n                          'Asia/Bahrain': 'Bahrain',\n                          'Canada/Mountain': 'Canada Mountain',\n                          'Canada/Pacific': 'Canada Pacific',\n                          'Asia/Kolkata': 'Indian Standard Time',\n                          //    ...i18nTimezones,\n                        }}\n                      />\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"submit\" onClick={this.submitSignup}>\n                      Submit</Button>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Container>}\n      </>\n    )\n  }\n}\n\nconst EditableField = (props) => {\n  const [editMode, setEditMode] = useState(props.editMode);\n  if (editMode) {\n    return <Form.Group controlId={`${props.controlId}Edit`}>\n      <Form.Label>{props.label}</Form.Label>\n      <Form.Control type=\"text\" value={props.value || ''} onChange={props.onChange} />\n    </Form.Group>;\n  }\n  return <Form.Group controlId={`${props.controlId}View`}>\n    <Form.Label>{props.label}</Form.Label>\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n      <Form.Label>{props.value || 'none'}</Form.Label> &nbsp; <GrEdit onClick={() => { setEditMode(true); props.setParentEditMode(true); }} />\n    </div>\n  </Form.Group>;\n}\n\nconst EditablePasswordField = (props) => {\n  const [editMode, setEditMode] = useState(props.editMode);\n  if (editMode) {\n    return <><Form.Group controlId={`${props.controlId}CurrentEdit`}>\n      <Form.Label>Current Password</Form.Label>\n      <Form.Control type=\"password\" value={props.currentPassword || ''} onChange={props.onChangeCurrent} />\n    </Form.Group>\n      <Form.Group controlId={`${props.controlId}NewEdit`}>\n        <Form.Label>New Password</Form.Label>\n        <Form.Control type=\"password\" value={props.newPassword || ''} onChange={props.onChangeNew} />\n      </Form.Group>\n    </>;\n  }\n  return <Form.Group controlId={`${props.controlId}View`}>\n    <Form.Label>{props.label}</Form.Label>\n    <div style={{ display: 'flex', alignItems: 'baseline' }}>\n      <Form.Label>••••••••••</Form.Label> &nbsp; <GrEdit onClick={() => { setEditMode(true); props.setParentEditMode(true); }} />\n    </div>\n  </Form.Group>;\n}\n\n\nfunction mapState(state) {\n  const { user } = state.authentication;\n  const { updating } = state.update;\n  return { updating, user };\n}\n\nconst actionCreators = {\n  update: userActions.update\n}\n\nconst connectedProfilePage = connect(mapState, actionCreators)(Profile);\nexport { connectedProfilePage as Profile, Profile as ProfileForTest };"]},"metadata":{},"sourceType":"module"}