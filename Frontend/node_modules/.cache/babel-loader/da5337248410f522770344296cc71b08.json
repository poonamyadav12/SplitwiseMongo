{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Groups/GroupCreateOrUpdateModel.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { Button, Card, Col, Container, Form, Modal, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { getDefaultGroupImage } from '../../_constants/avatar';\nimport { AlertMessages } from '../Alert/Alert';\nimport { UploadImage } from '../Image/UploadImage';\nimport { GroupMemberList } from './GroupMemberList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupCreateOrUpdateModal(props) {\n  _s();\n\n  var _props$group, _props$group2, _props$group3;\n\n  const [name, setName] = useState(props && props.group && props.group.name || \"\");\n  const [errorMsg, setErrorMsg] = useState([]);\n  const [members, setMembers] = useState(props && props.group && props.group.members || []);\n  const [imageUrl, setImageUrl] = useState(props && props.group && props.group.avatar || getDefaultGroupImage());\n\n  function handleGroupNameChange(e) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function handleGroupMemberChange(members) {\n    setMembers(members);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let group = {\n      creator: props.group && props.group.creator || props.user.email,\n      name,\n      members: members.map(m => ({\n        first_name: m.first_name,\n        last_name: m.last_name,\n        email: m.email,\n        group_join_status: m.group_join_status\n      })),\n      avatar: imageUrl\n    };\n\n    if (props && props.group && props.group.id) {\n      group = { ...group,\n        id: props.group.id\n      };\n    }\n\n    try {\n      const response = await axios.post(SERVER_URL + (props.createMode ? '/group/create' : '/group/update'), {\n        group\n      });\n      props.reloadHomeView();\n      props.closeModal();\n    } catch (error) {\n      const data = error.response.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : [\"Some error occured, please try again.\"];\n      setErrorMsg(msg);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.isOpen,\n    onHide: props.closeModal,\n    keyboard: false,\n    backdrop: \"static\",\n    className: \"group-create-modal\",\n    animation: false,\n    style: {\n      width: \"100vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: props.group ? 'UPDATE THE GROUP' : 'START A NEW GROUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AlertMessages, {\n        messages: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      style: {\n        width: \"60vw\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(UploadImage, {\n              defaultImage: (props === null || props === void 0 ? void 0 : (_props$group = props.group) === null || _props$group === void 0 ? void 0 : _props$group.avatar) || getDefaultGroupImage(),\n              label: 'Group avatar',\n              onChange: setImageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGroupName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"My group shall be called...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                style: {\n                  fontSize: '24px',\n                  width: '40rem'\n                },\n                defaultValue: props === null || props === void 0 ? void 0 : (_props$group2 = props.group) === null || _props$group2 === void 0 ? void 0 : _props$group2.name,\n                placeholder: \"1600 Pennsylvania Ave\",\n                onChange: handleGroupNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"GROUP MEMBERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(GroupMemberList, {\n              initialMembers: (props === null || props === void 0 ? void 0 : (_props$group3 = props.group) === null || _props$group3 === void 0 ? void 0 : _props$group3.members) || [{\n                first_name: props.user.first_name,\n                email: props.user.email,\n                last_name: props.user.last_name\n              }],\n              onChange: members => handleGroupMemberChange(members)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: props.closeModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n\n_s(GroupCreateOrUpdateModal, \"eX/WSgTdwkAoVzaKCx+mZPFuuuM=\");\n\n_c = GroupCreateOrUpdateModal;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear\n};\nconst connectedGroupCreateOrUpdateModal = connect(mapState, actionCreators)(GroupCreateOrUpdateModal);\nexport { connectedGroupCreateOrUpdateModal as GroupCreateOrUpdateModal };\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupCreateOrUpdateModal\");","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Groups/GroupCreateOrUpdateModel.js"],"names":["axios","_","React","useState","Button","Card","Col","Container","Form","Modal","Row","connect","alertActions","SERVER_URL","getDefaultGroupImage","AlertMessages","UploadImage","GroupMemberList","GroupCreateOrUpdateModal","props","name","setName","group","errorMsg","setErrorMsg","members","setMembers","imageUrl","setImageUrl","avatar","handleGroupNameChange","e","preventDefault","target","value","handleGroupMemberChange","handleSubmit","creator","user","email","map","m","first_name","last_name","group_join_status","id","response","post","createMode","reloadHomeView","closeModal","error","data","msg","Array","isArray","d","message","isOpen","width","fontSize","mapState","state","authentication","actionCreators","errorAlert","clearAlert","clear","connectedGroupCreateOrUpdateModal"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { Button, Card, Col, Container, Form, Modal, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { getDefaultGroupImage } from '../../_constants/avatar';\nimport { AlertMessages } from '../Alert/Alert';\nimport { UploadImage } from '../Image/UploadImage';\nimport { GroupMemberList } from './GroupMemberList';\n\nfunction GroupCreateOrUpdateModal(props) {\n  const [name, setName] = useState(props && props.group && props.group.name || \"\");\n\n  const [errorMsg, setErrorMsg] = useState([]);\n\n  const [members, setMembers] = useState(props && props.group && props.group.members || []);\n\n  const [imageUrl, setImageUrl] = useState(props && props.group && props.group.avatar || getDefaultGroupImage());\n\n  function handleGroupNameChange(e) {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  function handleGroupMemberChange(members) {\n    setMembers(members);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let group = {\n      creator: props.group && props.group.creator || props.user.email,\n      name,\n      members: members.map((m) => ({ first_name: m.first_name, last_name: m.last_name, email: m.email, group_join_status:m.group_join_status })),\n      avatar: imageUrl,\n    };\n\n    if (props && props.group && props.group.id) {\n      group = { ...group, id: props.group.id };\n    }\n    try {\n      const response = await axios.post(SERVER_URL + (props.createMode ? '/group/create' : '/group/update'), { group });\n      props.reloadHomeView();\n      props.closeModal();\n\n    } catch (error) {\n      const data = error.response.data;\n      const msg = Array.isArray(data) ? data.map(d => d.message) : [\"Some error occured, please try again.\"];\n      setErrorMsg(msg);\n    }\n  }\n\n  return <Modal\n    show={props.isOpen}\n    onHide={props.closeModal}\n    keyboard={false}\n    backdrop=\"static\"\n    className=\"group-create-modal\"\n    animation={false}\n    style={{ width: \"100vw\" }}\n  >\n    <Modal.Header closeButton>\n      <Modal.Title>{props.group ? 'UPDATE THE GROUP' : 'START A NEW GROUP'}</Modal.Title>\n      <AlertMessages messages={errorMsg} />\n    </Modal.Header>\n    <Modal.Body style={{ width: \"60vw\" }} >\n      <Container fluid={true}>\n        <Row>\n          <Col lg={3}>\n            <UploadImage defaultImage={props?.group?.avatar || getDefaultGroupImage()} label={'Group avatar'} onChange={setImageUrl}></UploadImage>\n          </Col>\n          <Col lg={4}><Form.Group controlId=\"formGroupName\">\n            <Form.Label>My group shall be called...</Form.Label>\n            <Form.Control type=\"text\" style={{ fontSize: '24px', width: '40rem' }} defaultValue={props?.group?.name} placeholder=\"1600 Pennsylvania Ave\" onChange={handleGroupNameChange} />\n          </Form.Group>\n            <Card.Title>GROUP MEMBERS</Card.Title>\n            <GroupMemberList initialMembers={props?.group?.members || [{\n              first_name: props.user.first_name,\n              email: props.user.email,\n              last_name: props.user.last_name,\n            },]} onChange={(members) => handleGroupMemberChange(members)} />\n          </Col>\n        </Row>\n      </Container>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={props.closeModal}>\n        Cancel\n          </Button>\n      <Button variant=\"success\" onClick={handleSubmit}>Save</Button>\n    </Modal.Footer>\n  </Modal>;\n}\n\nfunction mapState(state) {\n  const { user } = state.authentication;\n  return { user };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear,\n};\n\nconst connectedGroupCreateOrUpdateModal = connect(mapState, actionCreators)(GroupCreateOrUpdateModal);\nexport { connectedGroupCreateOrUpdateModal as GroupCreateOrUpdateModal };\n"]},"metadata":{},"sourceType":"module"}