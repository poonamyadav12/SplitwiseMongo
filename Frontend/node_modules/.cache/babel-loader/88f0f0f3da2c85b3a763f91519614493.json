{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Home/Home.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Card, Col, Container, ListGroup, Row } from 'react-bootstrap';\nimport { IoMdAdd } from 'react-icons/io';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../../App.css';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { ActivityView } from '../Activity/ActivityView';\nimport { DashboardView } from '../Dashboard/DashboardView';\nimport { FriendList } from '../Friends/FriendList';\nimport { FriendView } from '../Friends/FriendView';\nimport { GroupCreateOrUpdateModal } from '../Groups/GroupCreateOrUpdateModel';\nimport { GroupList } from '../Groups/GroupList';\nimport { GroupView } from '../Groups/GroupView.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false,\n      groupId: null,\n      viewComponent: ViewComponent.DASHBOARD,\n      groupViewData: null,\n      groups: [],\n      isGroupCreateOpen: false,\n      friends: []\n    };\n    this.setGroupView = setGroupView.bind(this);\n    this.setFriendView = setFriendView.bind(this);\n    this.setActivityView = setActivityView.bind(this);\n    this.setDashboardView = setDashboardView.bind(this); //this.addNewGroup = this.addNewGroup.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.clearAlert();\n  }\n\n  componentDidMount() {\n    this.setLocationState();\n    if (this.props.user) this.fetchData();\n  }\n\n  setLocationState() {\n    var _this$props, _this$props$location;\n\n    if ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$location = _this$props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.state) {\n      var _this$props2, _this$props2$location, _this$props2$location2, _this$props3, _this$props3$location, _this$props3$location2, _this$props4, _this$props4$location, _this$props4$location2;\n\n      this.setState({\n        viewComponent: ((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$location = _this$props2.location) === null || _this$props2$location === void 0 ? void 0 : (_this$props2$location2 = _this$props2$location.state) === null || _this$props2$location2 === void 0 ? void 0 : _this$props2$location2.viewComponent) || ViewComponent.DASHBOARD,\n        groupViewData: (_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : (_this$props3$location = _this$props3.location) === null || _this$props3$location === void 0 ? void 0 : (_this$props3$location2 = _this$props3$location.state) === null || _this$props3$location2 === void 0 ? void 0 : _this$props3$location2.groupViewData,\n        friendViewData: (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : (_this$props4$location = _this$props4.location) === null || _this$props4$location === void 0 ? void 0 : (_this$props4$location2 = _this$props4$location.state) === null || _this$props4$location2 === void 0 ? void 0 : _this$props4$location2.friendViewData\n      });\n    }\n  }\n\n  fetchData() {\n    axios.get(SERVER_URL + '/user/groups?userId=' + this.props.user.email).then(response => {\n      //update the state with the response data\n      this.setState({\n        groups: response.data\n      });\n      let friendsMap = new Map();\n      console.log(JSON.parse(JSON.stringify(response.data)));\n      response.data.flatMap(group => group.members).filter(member => member.email !== this.props.user.email).forEach(member => friendsMap.set(member.email, member));\n      this.setState({\n        friends: Array.from(friendsMap.values())\n      });\n    });\n  }\n\n  reload() {\n    this.setDashboardView();\n    this.fetchData();\n  }\n\n  openCreateGroupForm() {\n    this.setState({\n      isGroupCreateOpen: true\n    });\n  }\n\n  closeCreateGroupForm() {\n    this.setState({\n      isGroupCreateOpen: false\n    });\n  }\n\n  render() {\n    var _this$state$groupView, _this$state$friendVie;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !this.props.user ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  style: this.state.viewComponent === ViewComponent.DASHBOARD ? {\n                    backgroundColor: 'lightgray'\n                  } : null,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: '#',\n                    onClick: () => this.setDashboardView(this.props.user.email),\n                    children: \"DashBoard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  style: this.state.viewComponent === ViewComponent.RECENTACTIVITYVIEW ? {\n                    backgroundColor: 'lightgray'\n                  } : null,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: '#',\n                    onClick: () => this.setActivityView(this.props.user.email),\n                    children: \"Recent Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Container, {\n                    children: [/*#__PURE__*/_jsxDEV(Container, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          sm: 1,\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"/groups\",\n                            children: \"Groups\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 134,\n                            columnNumber: 69\n                          }, this), ' ']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: 1,\n                          children: /*#__PURE__*/_jsxDEV(Link, {\n                            onClick: () => this.openCreateGroupForm(),\n                            to: \"#\",\n                            children: /*#__PURE__*/_jsxDEV(IoMdAdd, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 137,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 49\n                    }, this), this.state.isGroupCreateOpen ? /*#__PURE__*/_jsxDEV(GroupCreateOrUpdateModal, {\n                      createMode: true,\n                      reloadHomeView: this.reload.bind(this),\n                      closeModal: () => this.closeCreateGroupForm(),\n                      isOpen: this.state.isGroupCreateOpen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 53\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(GroupList, {\n                    focussed: this.state.viewComponent === ViewComponent.GROUPVIEW,\n                    selectedId: (_this$state$groupView = this.state.groupViewData) === null || _this$state$groupView === void 0 ? void 0 : _this$state$groupView.groupId,\n                    groups: this.state.groups,\n                    setGroupView: this.setGroupView\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(LinkWithText, {\n                    text: \"Friends\",\n                    onClick: Object.assign(this.state, {\n                      groupId: '23'\n                    }),\n                    label: \"+ add\",\n                    link: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(FriendList, {\n                    focussed: this.state.viewComponent === ViewComponent.FRIENDVIEW,\n                    selectedId: (_this$state$friendVie = this.state.friendViewData) === null || _this$state$friendVie === void 0 ? void 0 : _this$state$friendVie.friend,\n                    friends: this.state.friends,\n                    setFriendView: this.setFriendView\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), renderMainView(this.state, this.setGroupView, this.reload.bind(this), this.setFriendView, this.setDashboardView)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction setDashboardView() {\n  this.setState({\n    viewComponent: ViewComponent.DASHBOARD\n  });\n}\n\nfunction setGroupView(groupId) {\n  this.setState({\n    viewComponent: ViewComponent.GROUPVIEW,\n    groupViewData: {\n      groupId\n    }\n  });\n}\n\nfunction setFriendView(friend) {\n  this.setState({\n    viewComponent: ViewComponent.FRIENDVIEW,\n    friendViewData: {\n      friend\n    }\n  });\n}\n\nfunction setActivityView(userId) {\n  this.setState({\n    viewComponent: ViewComponent.RECENTACTIVITYVIEW,\n    activityViewData: {\n      userId\n    }\n  });\n}\n\nfunction renderMainView(state, setGroupView, reloadHomeView, setFriendView, setDashboardView) {\n  const dummyRightView = /*#__PURE__*/_jsxDEV(Col, {\n    lg: 2,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"GET SPLITWISE PRO\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '16rem'\n          },\n          src: \"https://assets.splitwise.com/assets/pro/logo-337b1a7d372db4b56c075c7893d68bfc6873a65d2f77d61b27cb66b6d62c976c.svg\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: \"Subscribe to Splitwise Pro for no ads, currency conversion, charts, search, and more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 29\n  }, this);\n\n  switch (state.viewComponent) {\n    case ViewComponent.DASHBOARD:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(DashboardView, {\n            setFriendView: setFriendView,\n            setGroupView: setGroupView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 22\n        }, this), dummyRightView]\n      }, void 0, true);\n\n    case ViewComponent.GROUPVIEW:\n      const groupId = state.groupViewData.groupId;\n      return /*#__PURE__*/_jsxDEV(GroupView, {\n        groupId: groupId,\n        reloadHomeView: reloadHomeView,\n        setDashboardView: setDashboardView\n      }, groupId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 20\n      }, this);\n\n    case ViewComponent.FRIENDVIEW:\n      const friend = state.friendViewData.friend;\n      return /*#__PURE__*/_jsxDEV(FriendView, {\n        friend: friend\n      }, friend.email, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 20\n      }, this);\n\n    case ViewComponent.RECENTACTIVITYVIEW:\n      const userId = state.activityViewData.userId;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(ActivityView, {\n            userId: userId,\n            setGroupView: setGroupView\n          }, userId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 22\n        }, this), dummyRightView]\n      }, void 0, true);\n\n    default:\n      return '';\n  }\n}\n\nexport const ViewComponent = Object.freeze({\n  DASHBOARD: 'DASHBOARD',\n  GROUPVIEW: 'GROUPVIEW',\n  FRIENDVIEW: 'FRIENDVIEW',\n  RECENTACTIVITYVIEW: 'RECENTACTIVITYVIEW'\n});\n\nconst LinkWithText = props => /*#__PURE__*/_jsxDEV(Container, {\n  children: /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: 1,\n      children: [props.text, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      sm: 1,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => props.onClick(),\n        to: props.link,\n        children: /*#__PURE__*/_jsxDEV(IoMdAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 253,\n  columnNumber: 5\n}, this);\n\n_c = LinkWithText;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear\n};\nconst connectedHome = connect(mapState, actionCreators)(Home);\nexport { connectedHome as Home, Home as HomeForTest };\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkWithText\");","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Home/Home.js"],"names":["axios","React","Component","Card","Col","Container","ListGroup","Row","IoMdAdd","connect","Redirect","Link","alertActions","SERVER_URL","ActivityView","DashboardView","FriendList","FriendView","GroupCreateOrUpdateModal","GroupList","GroupView","Home","constructor","state","redirect","groupId","viewComponent","ViewComponent","DASHBOARD","groupViewData","groups","isGroupCreateOpen","friends","setGroupView","bind","setFriendView","setActivityView","setDashboardView","componentWillMount","props","clearAlert","componentDidMount","setLocationState","user","fetchData","location","setState","friendViewData","get","email","then","response","data","friendsMap","Map","console","log","JSON","parse","stringify","flatMap","group","members","filter","member","forEach","set","Array","from","values","reload","openCreateGroupForm","closeCreateGroupForm","render","width","backgroundColor","RECENTACTIVITYVIEW","GROUPVIEW","Object","assign","FRIENDVIEW","friend","renderMainView","userId","activityViewData","reloadHomeView","dummyRightView","freeze","LinkWithText","text","onClick","link","mapState","authentication","actionCreators","errorAlert","error","clear","connectedHome","HomeForTest"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Card, Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css';\r\nimport { alertActions } from '../../_actions';\r\nimport { SERVER_URL } from '../../_constants';\r\nimport { ActivityView } from '../Activity/ActivityView';\r\nimport { DashboardView } from '../Dashboard/DashboardView';\r\nimport { FriendList } from '../Friends/FriendList';\r\nimport { FriendView } from '../Friends/FriendView';\r\nimport { GroupCreateOrUpdateModal } from '../Groups/GroupCreateOrUpdateModel';\r\nimport { GroupList } from '../Groups/GroupList';\r\nimport { GroupView } from '../Groups/GroupView.js';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            redirect: false,\r\n            groupId: null,\r\n            viewComponent: ViewComponent.DASHBOARD,\r\n            groupViewData: null,\r\n            groups: [],\r\n            isGroupCreateOpen: false,\r\n            friends: [],\r\n        }\r\n        this.setGroupView = setGroupView.bind(this);\r\n        this.setFriendView = setFriendView.bind(this);\r\n        this.setActivityView = setActivityView.bind(this);\r\n        this.setDashboardView = setDashboardView.bind(this);\r\n        //this.addNewGroup = this.addNewGroup.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.clearAlert();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLocationState();\r\n        if (this.props.user) this.fetchData();\r\n    }\r\n\r\n    setLocationState() {\r\n        if (this.props?.location?.state) {\r\n            this.setState(\r\n                {\r\n                    viewComponent: this.props?.location?.state?.viewComponent || ViewComponent.DASHBOARD,\r\n                    groupViewData: this.props?.location?.state?.groupViewData,\r\n                    friendViewData: this.props?.location?.state?.friendViewData,\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    fetchData() {\r\n        axios.get(SERVER_URL + '/user/groups?userId=' + this.props.user.email)\r\n            .then((response) => {\r\n                //update the state with the response data\r\n                this.setState({\r\n                    groups: response.data\r\n                });\r\n                let friendsMap = new Map();\r\n                console.log(JSON.parse(JSON.stringify(response.data)));\r\n                response.data.flatMap(group => group.members).filter((member) => member.email !== this.props.user.email).forEach((member) => (friendsMap.set(member.email, member)));\r\n                this.setState({\r\n                    friends: Array.from(friendsMap.values()),\r\n                });\r\n            });\r\n    }\r\n    reload() {\r\n        this.setDashboardView();\r\n        this.fetchData();\r\n    }\r\n    openCreateGroupForm() {\r\n        this.setState({ isGroupCreateOpen: true });\r\n    }\r\n    closeCreateGroupForm() {\r\n        this.setState({ isGroupCreateOpen: false });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.props.user ? (\r\n                    <Redirect to='/' />\r\n                ) : (\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col lg={2}>\r\n                                <Card style={{ width: '18rem' }}>\r\n                                    <ListGroup>\r\n                                        <ListGroup.Item\r\n                                            style={\r\n                                                this.state.viewComponent === ViewComponent.DASHBOARD\r\n                                                    ? { backgroundColor: 'lightgray' }\r\n                                                    : null\r\n                                            }\r\n                                        >\r\n                                            <Link\r\n                                                to={'#'}\r\n                                                onClick={() =>\r\n                                                    this.setDashboardView(this.props.user.email)\r\n                                                }\r\n                                            >\r\n                                                DashBoard\r\n                                            </Link>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item\r\n                                            style={\r\n                                                this.state.viewComponent ===\r\n                                                    ViewComponent.RECENTACTIVITYVIEW\r\n                                                    ? { backgroundColor: 'lightgray' }\r\n                                                    : null\r\n                                            }\r\n                                        >\r\n                                            <Link\r\n                                                to={'#'}\r\n                                                onClick={() =>\r\n                                                    this.setActivityView(this.props.user.email)\r\n                                                }\r\n                                            >\r\n                                                Recent Activity\r\n                                            </Link>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <Container>\r\n                                                <Container>\r\n                                                    <Row>\r\n                                                        <Col sm={1}><Link to='/groups'>Groups</Link>{' '}</Col>\r\n                                                        <Col sm={1}>\r\n                                                            <Link onClick={() => this.openCreateGroupForm()} to='#'>\r\n                                                                <IoMdAdd />\r\n                                                            </Link>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Container>\r\n                                                {this.state.isGroupCreateOpen ? (\r\n                                                    <GroupCreateOrUpdateModal\r\n                                                        createMode={true}\r\n                                                        reloadHomeView={this.reload.bind(this)}\r\n                                                        closeModal={() => this.closeCreateGroupForm()}\r\n                                                        isOpen={this.state.isGroupCreateOpen}\r\n                                                    />\r\n                                                ) : null}\r\n                                            </Container>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <GroupList\r\n                                                focussed={\r\n                                                    this.state.viewComponent ===\r\n                                                    ViewComponent.GROUPVIEW\r\n                                                }\r\n                                                selectedId={this.state.groupViewData?.groupId}\r\n                                                groups={this.state.groups}\r\n                                                setGroupView={this.setGroupView}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <LinkWithText\r\n                                                text='Friends'\r\n                                                onClick={Object.assign(this.state, {\r\n                                                    groupId: '23',\r\n                                                })}\r\n                                                label='+ add'\r\n                                                link='#'\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <FriendList\r\n                                                focussed={\r\n                                                    this.state.viewComponent ===\r\n                                                    ViewComponent.FRIENDVIEW\r\n                                                }\r\n                                                selectedId={this.state.friendViewData?.friend}\r\n                                                friends={this.state.friends}\r\n                                                setFriendView={this.setFriendView}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                            {renderMainView(\r\n                                this.state,\r\n                                this.setGroupView,\r\n                                this.reload.bind(this),\r\n                                this.setFriendView,\r\n                                this.setDashboardView\r\n                            )}\r\n                        </Row>\r\n                    </Container>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\nfunction setDashboardView() {\r\n    this.setState({ viewComponent: ViewComponent.DASHBOARD });\r\n}\r\nfunction setGroupView(groupId) {\r\n    this.setState({ viewComponent: ViewComponent.GROUPVIEW, groupViewData: { groupId } });\r\n}\r\nfunction setFriendView(friend) {\r\n    this.setState({ viewComponent: ViewComponent.FRIENDVIEW, friendViewData: { friend } });\r\n}\r\nfunction setActivityView(userId) {\r\n    this.setState({ viewComponent: ViewComponent.RECENTACTIVITYVIEW, activityViewData: { userId } });\r\n}\r\n\r\nfunction renderMainView(state, setGroupView, reloadHomeView, setFriendView, setDashboardView) {\r\n    const dummyRightView = (<Col lg={2}>\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Header>\r\n                GET SPLITWISE PRO<br></br>\r\n                <img style={{ width: '16rem' }} src=\"https://assets.splitwise.com/assets/pro/logo-337b1a7d372db4b56c075c7893d68bfc6873a65d2f77d61b27cb66b6d62c976c.svg\" alt=\"Logo\" />\r\n            </Card.Header><br></br>\r\n            <Card.Footer>\r\n                Subscribe to Splitwise Pro for no ads, currency conversion, charts, search, and more.\r\n        </Card.Footer>\r\n        </Card>\r\n    </Col>);\r\n    switch (state.viewComponent) {\r\n        case ViewComponent.DASHBOARD:\r\n            return <><Col lg={8}><DashboardView setFriendView={setFriendView} setGroupView={setGroupView} /></Col>{dummyRightView}</>;\r\n        case ViewComponent.GROUPVIEW:\r\n            const groupId = state.groupViewData.groupId;\r\n            return <GroupView key={groupId} groupId={groupId} reloadHomeView={reloadHomeView} setDashboardView={setDashboardView} />;\r\n        case ViewComponent.FRIENDVIEW:\r\n            const friend = state.friendViewData.friend;\r\n            return <FriendView key={friend.email} friend={friend} />;\r\n        case ViewComponent.RECENTACTIVITYVIEW:\r\n            const userId = state.activityViewData.userId;\r\n            return <><Col lg={8}><ActivityView key={userId} userId={userId} setGroupView={setGroupView} /></Col>{dummyRightView}</>;\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nexport const ViewComponent = Object.freeze({\r\n    DASHBOARD: 'DASHBOARD',\r\n    GROUPVIEW: 'GROUPVIEW',\r\n    FRIENDVIEW: 'FRIENDVIEW',\r\n    RECENTACTIVITYVIEW: 'RECENTACTIVITYVIEW'\r\n});\r\n\r\nconst LinkWithText = (props) => (\r\n    <Container>\r\n        <Row>\r\n            <Col sm={1}>{props.text}{' '}</Col>\r\n            <Col sm={1}>\r\n                <Link onClick={() => props.onClick()} to={props.link}>\r\n                    <IoMdAdd />\r\n                </Link>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nfunction mapState(state) {\r\n    const { user } = state.authentication;\r\n    return { user };\r\n}\r\n\r\nconst actionCreators = {\r\n    errorAlert: alertActions.error,\r\n    clearAlert: alertActions.clear,\r\n};\r\n\r\nconst connectedHome = connect(mapState, actionCreators)(Home);\r\nexport { connectedHome as Home, Home as HomeForTest };\r\n\r\n"]},"metadata":{},"sourceType":"module"}