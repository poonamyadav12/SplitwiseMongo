{"ast":null,"code":"var iana = {\n  Africa: ['Abidjan', 'Accra', 'Addis_Ababa', 'Algiers', 'Asmara', 'Asmera', 'Bamako', 'Bangui', 'Banjul', 'Bissau', 'Blantyre', 'Brazzaville', 'Bujumbura', 'Cairo', 'Casablanca', 'Ceuta', 'Conakry', 'Dakar', 'Dar_Es_Salaam', 'Djibouti', 'Douala', 'El_Aaiun', 'Freetown', 'Gaborone', 'Harare', 'Johannesburg', 'Juba', 'Kampala', 'Khartoum', 'Kigali', 'Kinshasa', 'Lagos', 'Libreville', 'Lome', 'Luanda', 'Lubumbashi', 'Lusaka', 'Malabo', 'Maputo', 'Maseru', 'Mbabane', 'Mogadishu', 'Monrovia', 'Nairobi', 'Ndjamena', 'Niamey', 'Nouakchott', 'Ouagadougou', 'Porto-novo', 'Sao_Tome', 'Timbuktu', 'Tripoli', 'Tunis', 'Windhoek'],\n  America: ['Adak', 'Anchorage', 'Anguilla', 'Antigua', 'Araguaina', 'Argentina', 'Aruba', 'Asuncion', 'Atikokan', 'Atka', 'Bahia', 'Bahia_Banderas', 'Barbados', 'Belem', 'Belize', 'Blanc-sablon', 'Boa_Vista', 'Bogota', 'Boise', 'Buenos_Aires', 'Cambridge_Bay', 'Campo_Grande', 'Cancun', 'Caracas', 'Catamarca', 'Cayenne', 'Cayman', 'Chicago', 'Chihuahua', 'Coral_Harbour', 'Cordoba', 'Costa_Rica', 'Creston', 'Cuiaba', 'Curacao', 'Danmarkshavn', 'Dawson', 'Dawson_Creek', 'Denver', 'Detroit', 'Dominica', 'Edmonton', 'Eirunepe', 'El_Salvador', 'Ensenada', 'Fort_Wayne', 'Fortaleza', 'Glace_Bay', 'Godthab', 'Goose_Bay', 'Grand_Turk', 'Grenada', 'Guadeloupe', 'Guatemala', 'Guayaquil', 'Guyana', 'Halifax', 'Havana', 'Hermosillo', 'Indiana', 'Indianapolis', 'Inuvik', 'Iqaluit', 'Jamaica', 'Jujuy', 'Juneau', 'Kentucky', 'Knox_In', 'Kralendijk', 'La_Paz', 'Lima', 'Los_Angeles', 'Louisville', 'Lower_Princes', 'Maceio', 'Managua', 'Manaus', 'Marigot', 'Martinique', 'Matamoros', 'Mazatlan', 'Mendoza', 'Menominee', 'Merida', 'Metlakatla', 'Mexico_City', 'Miquelon', 'Moncton', 'Monterrey', 'Montevideo', 'Montreal', 'Montserrat', 'Nassau', 'New_York', 'Nipigon', 'Nome', 'Noronha', 'North_Dakota', 'Ojinaga', 'Panama', 'Pangnirtung', 'Paramaribo', 'Phoenix', 'Port-au-prince', 'Port_Of_Spain', 'Porto_Acre', 'Porto_Velho', 'Puerto_Rico', 'Punta_Arenas', 'Rainy_River', 'Rankin_Inlet', 'Recife', 'Regina', 'Resolute', 'Rio_Branco', 'Rosario', 'Santa_Isabel', 'Santarem', 'Santiago', 'Santo_Domingo', 'Sao_Paulo', 'Scoresbysund', 'Shiprock', 'Sitka', 'St_Barthelemy', 'St_Johns', 'St_Kitts', 'St_Lucia', 'St_Thomas', 'St_Vincent', 'Swift_Current', 'Tegucigalpa', 'Thule', 'Thunder_Bay', 'Tijuana', 'Toronto', 'Tortola', 'Vancouver', 'Virgin', 'Whitehorse', 'Winnipeg', 'Yakutat', 'Yellowknife'],\n  Antarctica: ['Casey', 'Davis', 'Dumontdurville', 'Macquarie', 'Mawson', 'Mcmurdo', 'Palmer', 'Rothera', 'South_Pole', 'Syowa', 'Troll', 'Vostok'],\n  Arctic: ['Longyearbyen'],\n  Asia: ['Aden', 'Almaty', 'Amman', 'Anadyr', 'Aqtau', 'Aqtobe', 'Ashgabat', 'Ashkhabad', 'Atyrau', 'Baghdad', 'Bahrain', 'Baku', 'Bangkok', 'Barnaul', 'Beirut', 'Bishkek', 'Brunei', 'Calcutta', 'Chita', 'Choibalsan', 'Chongqing', 'Chungking', 'Colombo', 'Dacca', 'Damascus', 'Dhaka', 'Dili', 'Dubai', 'Dushanbe', 'Gaza', 'Harbin', 'Hebron', 'Ho_Chi_Minh', 'Hong_Kong', 'Hovd', 'Irkutsk', 'Istanbul', 'Jakarta', 'Jayapura', 'Jerusalem', 'Kabul', 'Kamchatka', 'Karachi', 'Kashgar', 'Kathmandu', 'Katmandu', 'Khandyga', 'Kolkata', 'Krasnoyarsk', 'Kuala_Lumpur', 'Kuching', 'Kuwait', 'Macao', 'Macau', 'Magadan', 'Makassar', 'Manila', 'Muscat', 'Nicosia', 'Novokuznetsk', 'Novosibirsk', 'Omsk', 'Oral', 'Phnom_Penh', 'Pontianak', 'Pyongyang', 'Qatar', 'Qyzylorda', 'Rangoon', 'Riyadh', 'Saigon', 'Sakhalin', 'Samarkand', 'Seoul', 'Shanghai', 'Singapore', 'Srednekolymsk', 'Taipei', 'Tashkent', 'Tbilisi', 'Tehran', 'Tel_Aviv', 'Thimbu', 'Thimphu', 'Tokyo', 'Tomsk', 'Ujung_Pandang', 'Ulaanbaatar', 'Ulan_Bator', 'Urumqi', 'Ust-nera', 'Vientiane', 'Vladivostok', 'Yakutsk', 'Yekaterinburg', 'Yerevan', 'Volgograd'],\n  Atlantic: ['Azores', 'Bermuda', 'Canary', 'Cape_Verde', 'Faeroe', 'Faroe', 'Jan_Mayen', 'Madeira', 'Reykjavik', 'South_Georgia', 'St_Helena', 'Stanley'],\n  Australia: ['Act', 'Adelaide', 'Brisbane', 'Broken_Hill', 'Canberra', 'Currie', 'Darwin', 'Eucla', 'Hobart', 'Lhi', 'Lindeman', 'Lord_Howe', 'Melbourne', 'Nsw', 'North', 'Perth', 'Queensland', 'South', 'Sydney', 'Tasmania', 'Victoria', 'West', 'Yancowinna'],\n  Brazil: ['Acre', 'Denoronha', 'East', 'West'],\n  Canada: ['Atlantic', 'Central', 'East-saskatchewan', 'Eastern', 'Mountain', 'Newfoundland', 'Pacific', 'Saskatchewan', 'Yukon'],\n  Chile: ['Continental', 'EasterIsland'],\n  Europe: ['Amsterdam', 'Andorra', 'Astrakhan', 'Athens', 'Belfast', 'Belgrade', 'Berlin', 'Bratislava', 'Brussels', 'Bucharest', 'Budapest', 'Busingen', 'Chisinau', 'Copenhagen', 'Dublin', 'Gibraltar', 'Guernsey', 'Helsinki', 'Isle_Of_Man', 'Istanbul', 'Jersey', 'Kaliningrad', 'Kirov', 'Kiev', 'Lisbon', 'Ljubljana', 'London', 'Luxembourg', 'Madrid', 'Malta', 'Mariehamn', 'Minsk', 'Monaco', 'Moscow', 'Nicosia', 'Oslo', 'Paris', 'Podgorica', 'Prague', 'Riga', 'Rome', 'Samara', 'Saratov', 'San_Marino', 'Sarajevo', 'Simferopol', 'Skopje', 'Sofia', 'Stockholm', 'Tallinn', 'Tirane', 'Tiraspol', 'Ulyanovsk', 'Uzhgorod', 'Vaduz', 'Vatican', 'Vienna', 'Vilnius', 'Volgograd', 'Warsaw', 'Zagreb', 'Zaporozhye', 'Zurich'],\n  Indian: ['Antananarivo', 'Chagos', 'Christmas', 'Cocos', 'Comoro', 'Kerguelen', 'Mahe', 'Maldives', 'Mauritius', 'Mayotte', 'Reunion'],\n  Mexico: ['Bajanorte', 'Bajasur', 'General'],\n  Pacific: ['Apia', 'Auckland', 'Bougainville', 'Chatham', 'Chuuk', 'Easter', 'Efate', 'Enderbury', 'Fakaofo', 'Fiji', 'Funafuti', 'Galapagos', 'Gambier', 'Guadalcanal', 'Guam', 'Honolulu', 'Johnston', 'Kiritimati', 'Kosrae', 'Kwajalein', 'Majuro', 'Marquesas', 'Midway', 'Nauru', 'Niue', 'Norfolk', 'Noumea', 'Pago_Pago', 'Palau', 'Pitcairn', 'Pohnpei', 'Ponape', 'Port_Moresby', 'Rarotonga', 'Saipan', 'Samoa', 'Tahiti', 'Tarawa', 'Tongatapu', 'Truk', 'Wake', 'Wallis', 'Yap'],\n  ETC: ['GMT', 'GMT+0', 'GMT-0', 'GMT0', 'Greenwich', 'UTC', 'Universal', 'Zulu']\n};\nvar ignore = {\n  east: true,\n  west: true\n};\nvar zones = {};\nObject.keys(iana).forEach(function (k) {\n  iana[k].forEach(function (str) {\n    var id = k + '/' + str;\n    zones[id.toLowerCase()] = id;\n\n    if (!ignore[str]) {\n      str = str.toLowerCase();\n      str = str.replace(/[_-]/g, ' ');\n      zones[str] = id;\n    }\n  });\n});\nvar _01Iana = zones; // some notable cities without their own timezone\n\nvar _02ByCity = {\n  //America\n  'san fransisco': 'America/Los_Angeles',\n  //Canada\n  ottawa: 'America/Toronto',\n  montreal: 'America/Toronto',\n  // china\n  chongqing: 'Asia/Shanghai',\n  beijing: 'Asia/Shanghai',\n  chengdu: 'Asia/Shanghai',\n  guangzhou: 'Asia/Shanghai',\n  tianjin: 'Asia/Shanghai',\n  baoding: 'Asia/Shanghai',\n  wenzhou: 'Asia/Shanghai',\n  xian: 'Asia/Shanghai',\n  shenzhen: 'Asia/Shanghai',\n  suzhou: 'Asia/Shanghai',\n  nanjing: 'Asia/Shanghai',\n  dongguan: 'Asia/Shanghai',\n  quanzhou: 'Asia/Shanghai',\n  'hong kong': 'Asia/Shanghai',\n  // india\n  mumbai: 'Asia/Kolkata',\n  bombay: 'Asia/Kolkata',\n  madras: 'Asia/Kolkata',\n  calcutta: 'Asia/Kolkata',\n  'port blair': 'Asia/Kolkata',\n  //Old timezone\n  delhi: 'Asia/Kolkata',\n  chennai: 'Asia/Kolkata',\n  bangalore: 'Asia/Kolkata',\n  hyderabad: 'Asia/Kolkata',\n  // pakistan\n  lahore: 'Asia/Karachi',\n  islamabad: 'Asia/Karachi',\n  peshawar: 'Asia/Karachi',\n  multan: 'Asia/Karachi'\n}; // this file provides links between current names for timezones\n// and their old names.  many names changed in late 1993.\n// from https://Github.com/Eggert/Tz/Blob/Master/Backward\n// and from https://Github.com/Mj1856/Timezonenames\n\nvar _04OldZones = {\n  'africa/asmera': 'Africa/Nairobi',\n  'africa/timbuktu': 'Africa/Abidjan',\n  'america/argentina/comodrivadavia': 'America/Argentina',\n  'america/atka': 'America/Adak',\n  'america/buenos_aires': 'America/Argentina',\n  'america/argentina/buenos_aires': 'America/Argentina',\n  'america/catamarca': 'America/Argentina',\n  'america/argentina/catamarca': 'America/Argentina',\n  'america/coral_harbour': 'America/Atikokan',\n  'america/cordoba': 'America/Argentina',\n  'america/argentina/cordoba': 'America/Argentina',\n  'america/ensenada': 'America/Tijuana',\n  'america/fort_wayne': 'America/Indiana',\n  'america/indiana/indianapolis': 'America/Indiana',\n  'america/indianapolis': 'America/Indiana',\n  'america/jujuy': 'America/Argentina',\n  'america/knox_in': 'America/Indiana',\n  'america/louisville': 'America/Kentucky',\n  'america/kentucky/louisville': 'America/Kentucky',\n  'america/mendoza': 'America/Argentina',\n  'america/montreal': 'America/Toronto',\n  'america/porto_acre': 'America/Rio_Branco',\n  'america/rosario': 'America/Argentina',\n  'america/santa_isabel': 'America/Tijuana',\n  'america/shiprock': 'America/Denver',\n  'america/virgin': 'America/Port_Of_Spain',\n  'antarctica/south_pole': 'Pacific/Auckland',\n  'asia/ashkhabad': 'Asia/Ashgabat',\n  'asia/calcutta': 'Asia/Kolkata',\n  'asia/chongqing': 'Asia/Shanghai',\n  'asia/chungking': 'Asia/Shanghai',\n  'asia/dacca': 'Asia/Dhaka',\n  'asia/harbin': 'Asia/Shanghai',\n  'asia/kashgar': 'Asia/Urumqi',\n  'asia/katmandu': 'Asia/Kathmandu',\n  'asia/macao': 'Asia/Macau',\n  'asia/rangoon': 'Asia/Yangon',\n  'asia/saigon': 'Asia/Ho_Chi_Minh',\n  'asia/tel_aviv': 'Asia/Jerusalem',\n  'asia/thimbu': 'Asia/Thimphu',\n  'asia/ujung_pandang': 'Asia/Makassar',\n  'asia/ulan_bator': 'Asia/Ulaanbaatar',\n  'atlantic/faeroe': 'atlantic/Faroe',\n  'atlantic/jan_mayen': 'Europe/Oslo',\n  'australia/act': 'Australia/Sydney',\n  'australia/canberra': 'Australia/Sydney',\n  'australia/lhi': 'Australia/Lord_Howe',\n  'australia/nsw': 'Australia/Sydney',\n  'australia/north': 'Australia/Darwin',\n  'australia/queensland': 'Australia/Brisbane',\n  'australia/south': 'Australia/Adelaide',\n  'australia/tasmania': 'Australia/Hobart',\n  'australia/victoria': 'Australia/Melbourne',\n  'australia/west': 'Australia/Perth',\n  'australia/yancowinna': 'Australia/Broken_Hill',\n  'brazil/acre': 'America/Rio_Branco',\n  'brazil/denoronha': 'America/Noronha',\n  'brazil/east': 'America/Sao_Paulo',\n  'brazil/west': 'America/Manaus',\n  'canada/atlantic': 'America/Halifax',\n  'canada/central': 'America/Winnipeg',\n  'canada/east-saskatchewan': 'America/Regina',\n  'canada/eastern': 'America/Toronto',\n  'canada/mountain': 'America/Edmonton',\n  'canada/newfoundland': 'America/St_Johns',\n  'canada/pacific': 'America/Vancouver',\n  'canada/saskatchewan': 'America/Regina',\n  'canada/yukon': 'America/Whitehorse',\n  'chile/continental': 'America/Santiago',\n  'chile/easterisland': 'Pacific/Easter',\n  cuba: 'America/Havana',\n  egypt: 'Africa/Cairo',\n  eire: 'Europe/Dublin',\n  'europe/belfast': 'Europe/London',\n  'europe/tiraspol': 'Europe/Chisinau',\n  gb: 'Europe/London',\n  'gb-eire': 'Europe/London',\n  'gmt+0': 'etc/Gmt',\n  'gmt-0': 'etc/Gmt',\n  gmt0: 'etc/Gmt',\n  greenwich: 'etc/Gmt',\n  hongkong: 'Asia/Hong_Kong',\n  iceland: 'atlantic/Reykjavik',\n  iran: 'Asia/Tehran',\n  israel: 'Asia/Jerusalem',\n  jamaica: 'America/Jamaica',\n  japan: 'Asia/Tokyo',\n  kwajalein: 'Pacific/Kwajalein',\n  libya: 'Africa/Tripoli',\n  'mexico/bajanorte': 'America/Tijuana',\n  'mexico/bajasur': 'America/Mazatlan',\n  'mexico/general': 'America/Mexico_City',\n  nz: 'Pacific/Auckland',\n  'nz-chat': 'Pacific/Chatham',\n  navajo: 'America/Denver',\n  prc: 'Asia/Shanghai',\n  'pacific/johnston': 'Pacific/Honolulu',\n  'pacific/ponape': 'Pacific/Pohnpei',\n  'pacific/samoa': 'Pacific/Pago_Pago',\n  'pacific/truk': 'Pacific/Chuuk',\n  'pacific/yap': 'Pacific/Chuuk',\n  poland: 'Europe/Warsaw',\n  portugal: 'Europe/Lisbon',\n  roc: 'Asia/Taipei',\n  rok: 'Asia/Seoul',\n  'us/alaska': 'America/Anchorage',\n  'us/aleutian': 'America/Adak',\n  'us/arizona': 'America/Phoenix',\n  'us/central': 'America/Chicago',\n  'us/east-indiana': 'America/Indiana',\n  'us/eastern': 'America/New_York',\n  'us/hawaii': 'Pacific/Honolulu',\n  'us/indiana-starke': 'America/Indiana',\n  'america/indiana/knox': 'America/Indiana',\n  'us/michigan': 'America/Detroit',\n  'us/mountain': 'America/Denver',\n  'us/pacific': 'America/Los_Angeles',\n  'us/samoa': 'Pacific/Pago_Pago',\n  universal: 'etc/Utc',\n  'w-su': 'Europe/Moscow',\n  zulu: 'Etc/Utc',\n  z: 'Etc/Utc',\n  'america/argentina/jujuy': 'America/Jujuy',\n  'america/argentina/mendoza': 'America/Mendoza',\n  'america/atikokan': 'America/Coral_Harbour',\n  'europe/nicosia': 'Asia/Nicosia',\n  'africa/asmara': 'Africa/Asmera',\n  'pacific/pohnpei': 'Pacific/Ponape',\n  'pacific/chuuk': 'Pacific/Truk',\n  'atlantic/faroe': 'atlantic/Faeroe',\n  'asia/kolkata': 'Asia/Calcutta',\n  'asia/yangon': 'Asia/Rangoon',\n  'asia/kathmandu': 'Asia/Katmandu',\n  'asia/ho_chi_minh': 'Asia/Saigon',\n  'asia/istanbul': 'Europe/Istanbul',\n  'etc/gmt+0': 'Etc/Gmt',\n  'etc/gmt-0': 'Etc/Gmt',\n  'etc/gmt0': 'Etc/Gmt',\n  'etc/greenwich': 'etc/Gmt',\n  'etc/uct': 'Etc/Utc',\n  'etc/universal': 'Etc/Utc',\n  'etc/zulu': 'Etc/Utc',\n  gmt: 'etc/Gmt',\n  singapore: 'Asia/Singapore',\n  'easter island': 'Chile/EasterIsland',\n  'us/pacific-new': 'America/Los_Angeles',\n  uct: 'Etc/Utc',\n  utc: 'Etc/Utc',\n  est: 'Etc/Gmt+5',\n  mst: 'Etc/Gmt+7',\n  hst: 'Etc/Gmt+10'\n};\nvar _07Parentheses = {\n  'west africa time': 'Africa/Lagos',\n  casey: 'Antarctica/Casey',\n  davis: 'Antarctica/Davis',\n  \"dumont-d'urville\": 'Antarctica/DumontDUrville',\n  mawson: 'Antarctica/Mawson',\n  palmer: 'Antarctica/Palmer',\n  rothera: 'Antarctica/Rothera',\n  syowa: 'Antarctica/Syowa',\n  troll: 'Antarctica/Troll',\n  vostok: 'Antarctica/Vostok',\n  'new zealand time': 'Pacific/Auckland',\n  'buenos aires (ba, cf)': 'America/Argentina',\n  'argentina (most areas: cb, cc, cn, er, fm, mn, se, sf)': 'America/Argentina',\n  'salta (sa, lp, nq, rn)': 'America/Argentina',\n  'jujuy (jy)': 'America/Argentina',\n  'tucumán (tm)': 'America/Argentina',\n  'catamarca (ct); chubut (ch)': 'America/Argentina',\n  'la rioja (lr)': 'America/Argentina',\n  'san juan (sj)': 'America/Argentina',\n  'mendoza (mz)': 'America/Argentina',\n  'san luis (sl)': 'America/Argentina',\n  'santa cruz (sc)': 'America/Argentina',\n  'tierra del fuego (tf)': 'America/Argentina',\n  'samoa, midway': 'Pacific/Pago_Pago',\n  'lord howe island': 'Australia/Lord_Howe',\n  'macquarie island': 'Antarctica/Macquarie',\n  'tasmania (most areas)': 'Australia/Hobart',\n  'tasmania (king island)': 'Australia/Currie',\n  victoria: 'Australia/Melbourne',\n  'new south wales (most areas)': 'Australia/Sydney',\n  'new south wales (yancowinna)': 'Australia/Broken_Hill',\n  'queensland (most areas)': 'Australia/Brisbane',\n  'queensland (whitsunday islands)': 'Australia/Lindeman',\n  'south australia': 'Australia/Adelaide',\n  'northern territory': 'Australia/Darwin',\n  'western australia (most areas)': 'Australia/Perth',\n  'western australia (eucla)': 'Australia/Eucla',\n  'central africa time': 'Africa/Maputo',\n  'atlantic islands': 'America/Noronha',\n  'pará (east); amapá': 'America/Belem',\n  'brazil (northeast: ma, pi, ce, rn, pb)': 'America/Fortaleza',\n  pernambuco: 'America/Recife',\n  tocantins: 'America/Araguaina',\n  'alagoas, sergipe': 'America/Maceio',\n  bahia: 'America/Bahia',\n  'brazil (southeast: go, df, mg, es, rj, sp, pr, sc, rs)': 'America/Sao_Paulo',\n  'mato grosso do sul': 'America/Campo_Grande',\n  'mato grosso': 'America/Cuiaba',\n  'pará (west)': 'America/Santarem',\n  rondônia: 'America/Porto_Velho',\n  roraima: 'America/Boa_Vista',\n  'amazonas (east)': 'America/Manaus',\n  'amazonas (west)': 'America/Eirunepe',\n  acre: 'America/Rio_Branco',\n  'newfoundland; labrador (southeast)': 'America/St_Johns',\n  'atlantic - ns (most areas); pe': 'America/Halifax',\n  'atlantic - ns (cape breton)': 'America/Glace_Bay',\n  'atlantic - new brunswick': 'America/Moncton',\n  'atlantic - labrador (most areas)': 'America/Goose_Bay',\n  'ast - qc (lower north shore)': 'America/Blanc-Sablon',\n  'eastern - on, qc (most areas)': 'America/Toronto',\n  'eastern - on, qc (no dst 1967-73)': 'America/Nipigon',\n  'eastern - on (thunder bay)': 'America/Thunder_Bay',\n  'eastern - nu (most east areas)': 'America/Iqaluit',\n  'eastern - nu (pangnirtung)': 'America/Pangnirtung',\n  'est - on (atikokan); nu (coral h)': 'America/Atikokan',\n  'central - on (west); manitoba': 'America/Winnipeg',\n  'central - on (rainy r, ft frances)': 'America/Rainy_River',\n  'central - nu (resolute)': 'America/Resolute',\n  'central - nu (central)': 'America/Rankin_Inlet',\n  'cst - sk (most areas)': 'America/Regina',\n  'cst - sk (midwest)': 'America/Swift_Current',\n  'mountain - ab; bc (e); sk (w)': 'America/Edmonton',\n  'mountain - nu (west)': 'America/Cambridge_Bay',\n  'mountain - nt (central)': 'America/Yellowknife',\n  'mountain - nt (west)': 'America/Inuvik',\n  'mst - bc (creston)': 'America/Creston',\n  'mst - bc (dawson cr, ft st john)': 'America/Dawson_Creek',\n  'mst - bc (ft nelson)': 'America/Fort_Nelson',\n  'pacific - bc (most areas)': 'America/Vancouver',\n  'pacific - yukon (south)': 'America/Whitehorse',\n  'pacific - yukon (north)': 'America/Dawson',\n  'swiss time': 'Europe/Zurich',\n  'chile (most areas)': 'America/Santiago',\n  'region of magallanes': 'America/Punta_Arenas',\n  'easter island': 'Chile/EasterIsland',\n  'beijing time': 'Asia/Shanghai',\n  'xinjiang time': 'Asia/Urumqi',\n  'cyprus (most areas)': 'Asia/Nicosia',\n  'northern cyprus': 'Asia/Famagusta',\n  'germany (most areas)': 'Europe/Berlin',\n  'ecuador (mainland)': 'America/Guayaquil',\n  'galápagos islands': 'Pacific/Galapagos',\n  'spain (mainland)': 'Europe/Madrid',\n  'ceuta, melilla': 'Africa/Ceuta',\n  'canary islands': 'Atlantic/Canary',\n  'chuuk/truk, yap': 'Pacific/Chuuk',\n  'pohnpei/ponape': 'Pacific/Pohnpei',\n  kosrae: 'Pacific/Kosrae',\n  'greenland (most areas)': 'America/Godthab',\n  'national park (east coast)': 'America/Danmarkshavn',\n  'scoresbysund/ittoqqortoormiit': 'America/Scoresbysund',\n  'thule/pituffik': 'America/Thule',\n  'java, sumatra': 'Asia/Jakarta',\n  'borneo (west, central)': 'Asia/Pontianak',\n  'borneo (east, south); sulawesi/celebes, bali, nusa tengarra; timor (west)': 'Asia/Makassar',\n  'new guinea (west papua / irian jaya); malukus/moluccas': 'Asia/Jayapura',\n  'indochina (most areas)': 'Asia/Bangkok',\n  'gilbert islands': 'Pacific/Tarawa',\n  'phoenix islands': 'Pacific/Enderbury',\n  'line islands': 'Pacific/Kiritimati',\n  'kazakhstan (most areas)': 'Asia/Almaty',\n  'qyzylorda/kyzylorda/kzyl-orda': 'Asia/Qyzylorda',\n  'aqtöbe/aktobe': 'Asia/Aqtobe',\n  'mangghystaū/mankistau': 'Asia/Aqtau',\n  \"atyraū/atirau/gur'yev\": 'Asia/Atyrau',\n  'west kazakhstan': 'Asia/Oral',\n  'marshall islands (most areas)': 'Pacific/Majuro',\n  kwajalein: 'Pacific/Kwajalein',\n  'mongolia (most areas)': 'Asia/Ulaanbaatar',\n  'bayan-ölgii, govi-altai, hovd, uvs, zavkhan': 'Asia/Hovd',\n  'dornod, sükhbaatar': 'Asia/Choibalsan',\n  'central time': 'America/Mexico_City',\n  'eastern standard time - quintana roo': 'America/Cancun',\n  'central time - campeche, yucatán': 'America/Merida',\n  'central time - durango; coahuila, nuevo león, tamaulipas (most areas)': 'America/Monterrey',\n  'central time us - coahuila, nuevo león, tamaulipas (us border)': 'America/Matamoros',\n  'mountain time - baja california sur, nayarit, sinaloa': 'America/Mazatlan',\n  'mountain time - chihuahua (most areas)': 'America/Chihuahua',\n  'mountain time us - chihuahua (us border)': 'America/Ojinaga',\n  'mountain standard time - sonora': 'America/Hermosillo',\n  'pacific time us - baja california': 'America/Tijuana',\n  'central time - bahía de banderas': 'America/Bahia_Banderas',\n  'malaysia (peninsula)': 'Asia/Kuala_Lumpur',\n  'sabah, sarawak': 'Asia/Kuching',\n  'chatham islands': 'Pacific/Chatham',\n  'society islands': 'Pacific/Tahiti',\n  'marquesas islands': 'Pacific/Marquesas',\n  'gambier islands': 'Pacific/Gambier',\n  'papua new guinea (most areas)': 'Pacific/Port_Moresby',\n  bougainville: 'Pacific/Bougainville',\n  'gaza strip': 'Asia/Gaza',\n  'west bank': 'Asia/Hebron',\n  'portugal (mainland)': 'Europe/Lisbon',\n  'madeira islands': 'Atlantic/Madeira',\n  azores: 'Atlantic/Azores',\n  'réunion, crozet, scattered islands': 'Indian/Reunion',\n  'msk-01 - kaliningrad': 'Europe/Kaliningrad',\n  'msk+00 - moscow area': 'Europe/Moscow',\n  'msk+00 - crimea': 'Europe/Simferopol',\n  'msk+00 - volgograd': 'Europe/Volgograd',\n  'msk+00 - kirov': 'Europe/Kirov',\n  'msk+01 - astrakhan': 'Europe/Astrakhan',\n  'msk+01 - saratov': 'Europe/Saratov',\n  'msk+01 - ulyanovsk': 'Europe/Ulyanovsk',\n  'msk+01 - samara, udmurtia': 'Europe/Samara',\n  'msk+02 - urals': 'Asia/Yekaterinburg',\n  'msk+03 - omsk': 'Asia/Omsk',\n  'msk+04 - novosibirsk': 'Asia/Novosibirsk',\n  'msk+04 - altai': 'Asia/Barnaul',\n  'msk+04 - tomsk': 'Asia/Tomsk',\n  'msk+04 - kemerovo': 'Asia/Novokuznetsk',\n  'msk+04 - krasnoyarsk area': 'Asia/Krasnoyarsk',\n  'msk+05 - irkutsk, buryatia': 'Asia/Irkutsk',\n  'msk+06 - zabaykalsky': 'Asia/Chita',\n  'msk+06 - lena river': 'Asia/Yakutsk',\n  'msk+06 - tomponsky, ust-maysky': 'Asia/Khandyga',\n  'msk+07 - amur river': 'Asia/Vladivostok',\n  'msk+07 - oymyakonsky': 'Asia/Ust-Nera',\n  'msk+08 - magadan': 'Asia/Magadan',\n  'msk+08 - sakhalin island': 'Asia/Sakhalin',\n  'msk+08 - sakha (e); north kuril is': 'Asia/Srednekolymsk',\n  'msk+09 - kamchatka': 'Asia/Kamchatka',\n  'msk+09 - bering sea': 'Asia/Anadyr',\n  'kerguelen, st paul island, amsterdam island': 'Indian/Kerguelen',\n  'ukraine (most areas)': 'Europe/Kiev',\n  ruthenia: 'Europe/Uzhgorod',\n  \"zaporozh'ye/zaporizhia; lugansk/luhansk (east)\": 'Europe/Zaporozhye',\n  'wake island': 'Pacific/Wake',\n  'eastern (most areas)': 'America/New_York',\n  'eastern - mi (most areas)': 'America/Detroit',\n  'eastern - ky (louisville area)': 'America/Kentucky',\n  'eastern - ky (wayne)': 'America/Kentucky',\n  'eastern - in (most areas)': 'America/Indiana',\n  'eastern - in (da, du, k, mn)': 'America/Indiana',\n  'eastern - in (pulaski)': 'America/Indiana',\n  'eastern - in (crawford)': 'America/Indiana',\n  'eastern - in (pike)': 'America/Indiana',\n  'eastern - in (switzerland)': 'America/Indiana',\n  'central (most areas)': 'America/Chicago',\n  'central - in (perry)': 'America/Indiana',\n  'central - in (starke)': 'America/Indiana',\n  'central - mi (wisconsin border)': 'America/Menominee',\n  'central - nd (oliver)': 'America/North_Dakota',\n  'central - nd (morton rural)': 'America/North_Dakota',\n  'central - nd (mercer)': 'America/North_Dakota',\n  'mountain (most areas)': 'America/Denver',\n  'mountain - id (south); or (east)': 'America/Boise',\n  'mst - arizona (except navajo)': 'America/Phoenix',\n  'alaska (most areas)': 'America/Anchorage',\n  'alaska - juneau area': 'America/Juneau',\n  'alaska - sitka area': 'America/Sitka',\n  'alaska - annette island': 'America/Metlakatla',\n  'alaska - yakutat': 'America/Yakutat',\n  'alaska (west)': 'America/Nome',\n  'aleutian islands': 'America/Adak',\n  'uzbekistan (west)': 'Asia/Samarkand',\n  'uzbekistan (east)': 'Asia/Tashkent',\n  'vietnam (south)': 'Asia/Ho_Chi_Minh'\n}; // this is a very rough list of informal and abbreviated timezones\n// i am not an expert, or even half-knowledgeable in this subject.\n// please help.\n// partially from: https://En.wikipedia.org/Wiki/List_Of_Time_Zone_Abbreviations\n//Format:  'best/Iana': [standard, daylight, alias...]\n\nvar informal = {\n  //North america\n  'America/Halifax': ['ast', 'adt', 'atlantic'],\n  //Or 'arabia standard time'\n  'America/New_York': ['est', 'edt', 'eastern'],\n  //Or 'Ecuador Time'\n  'America/Chicago': ['cst', 'cdt', 'central'],\n  'America/Denver': ['mst', 'mdt', 'mountain'],\n  'America/Los_Angeles': ['pst', 'pdt', 'pacific'],\n  'America/Anchorage': ['ahst', 'ahdt', 'akst', 'akdt', 'alaska'],\n  //Alaska Standard Time\n  'America/St_Johns': ['nst', 'ndt', 'nt', 'newfoundland', 'nddt'],\n  // awt: 'America/Blanc-sablon',\n  // addt: 'America/Pangnirtung',\n  // apt: 'America/Blanc-sablon',\n  // cddt: 'America/Rankin_Inlet',\n  // cwt: 'America/Mexico_City',\n  // cpt: 'America/Atikokan',\n  // eddt: 'America/Iqaluit',\n  // ept: 'America/Detroit',\n  // ewt: 'America/Detroit',\n  // ect: 'America/Anguilla', //Eastern caribbean time (does not recognise dst)\n  // 'eastern caribbean': 'America/Anguilla',\n  // ffmt: 'America/Martinique',\n  // kmt: 'America/Grand_Turk',\n  // mddt: 'America/Cambridge_Bay',\n  // mpt: 'America/Boise',\n  // mwt: 'America/Phoenix',\n  // nwt: 'America/Adak',\n  // // npt: 'America/Goose_Bay',\n  // pddt: 'America/Inuvik',\n  // ppmt: 'America/Port-au-prince',\n  // ppt: 'America/Dawson_Creek',\n  // pwt: 'America/Dawson_Creek',\n  // qmt: 'America/Guayaquil',\n  // sdmt: 'America/Santo_Domingo',\n  // sjmt: 'America/Costa_Rica',\n  // ydt: 'America/Dawson', //Yukon\n  // ypt: 'America/Dawson',\n  // yddt: 'America/Dawson',\n  // ywt: 'America/Dawson',\n  // yst: 'America/Whitehorse',\n  //South america\n  'America/Caracas': ['vet', null, 'venezuela'],\n  'America/Bogota': ['cot', null, 'colombia'],\n  'America/Cayenne': ['gft', null, 'french guiana'],\n  'America/Paramaribo': ['srt', null, 'suriname'],\n  'America/Guyana': ['gyt'],\n  'America/Buenos_Aires': ['art', null, 'argentina'],\n  'America/La_Paz': ['bot', null, 'bolivia'],\n  'America/Asuncion': ['pyt', 'pyst', 'paraguay'],\n  'America/Santiago': ['clt', 'clst', 'chile'],\n  'America/Lima': ['pet', null, 'peru'],\n  'America/Montevideo': ['uyt', null, 'uruguay'],\n  'Atlantic/Stanley': ['fkst', null, 'falkland island'],\n  //Brazil\n  'America/Manaus': ['amt'],\n  'America/Sao_Paulo': ['brt', 'brst'],\n  'Brazil/Acre': ['act'],\n  // amst: -3, //Amazon summer time (brazil)\n  // fnt: -2, //Fernando de noronha time\n  // pmdt: -2, //Saint pierre and miquelon daylight time\n  // pmst: -3, //Saint pierre and miquelon standard time\n  // rott: -3, //Rothera research station time\n  //Europe\n  'Europe/London': ['gmt', 'bst', 'british'],\n  //Britain is different\n  'ETC/GMT': ['gmt', null, 'greenwich'],\n  'Europe/Lisbon': ['wet', 'west', 'west europe'],\n  //Western europe\n  'Europe/Berlin': ['cet', 'cest', 'central europe', 'middle european', 'met', 'mest'],\n  //Central europe\n  'Europe/Riga': ['eet', 'eest', 'east europe', 'kalt'],\n  //Eastern europe\n  // -- these are old european ones, before the EU, i think:\n  // 'Europe/Minsk': ['feet', 'feest', 'eastern europe'], //Further eastern europe (discontinued)\n  // ace: 'Europe/Dublin',\n  // amt: 'Europe/Amsterdam',\n  // bdst: 'Europe/Gibraltar',\n  // bmt: 'Europe/Brussels',\n  // bst: 'Europe/Gibraltar', //British summer time\n  // 'british summer': 1,\n  // dmt: 'Europe/Dublin',\n  // dft: 1, //Aix-specific equivalent of central european time\n  // cmt: 'Europe/Copenhagen',\n  // // ist: 'Europe/Dublin',\n  // imt: 'Europe/Sofia',\n  // lst: 'Europe/Riga',\n  // pmt: 'Europe/Prague',\n  // rmt: 'Europe/Rome',\n  // set: 'Europe/Stockholm',\n  // wemt: 'Europe/Madrid',\n  // tse: 'Europe/Dublin',\n  // utc: 'etc/Utc', //Coordinated universal time\n  // 'coordinated universal': 'etc/Utc',\n  //Russia\n  'Europe/Moscow': ['msk', null, 'fet', 'mdst', 'msd'],\n  //'further eastern europe'\n  'Europe/Samara': ['samt'],\n  'Asia/Yekaterinburg': ['yekt'],\n  'Asia/Omsk': ['omst'],\n  'Asia/Krasnoyarsk': ['krat'],\n  'Asia/Novosibirsk': ['novt'],\n  'Asia/Irkutsk': ['irkt'],\n  'Asia/Yakutsk': ['yakt'],\n  'Asia/Cladivostok': ['vlat'],\n  'Asia/Magadan': ['magt'],\n  'Asia/Sakhalin': ['sakt'],\n  'Asia/Srednekolymsk': ['sret'],\n  'Asia/Anadyr': ['anat'],\n  'Asia/Kamchatka': ['pett'],\n  //Near-russia\n  'Asia/Tashkent': ['uzt', 'uzbekistan'],\n  //Uzbekistan time\n  'Asia/Bishkek': ['kgt', 'kyrgyzstan'],\n  //Kyrgyzstan time\n  'Antarctica/Vostok': ['vost'],\n  'Asia/Hovd': ['hovt'],\n  'Asia/Ashgabat': ['tmt', null, 'turkmenistan'],\n  // wmt: 'Europe/Warsaw',\n  // 'Europe/Volgograd':['volt']\n  //Africa\n  'Africa/Lagos': ['wat', 'wast', 'west africa'],\n  //West african\n  'Africa/Khartoum': ['cat', null, 'central africa'],\n  'Africa/Nairobi': ['eat', null, 'east africa'],\n  'Atlantic/Cape_Verde': ['cvt'],\n  'Indian/Mauritius': ['mut'],\n  'Indian/Reunion': ['ret'],\n  'Africa/Johannesburg': ['sast', null, 'south africa'],\n  //Atlantic\n  'Atlantic/Azores': ['azot', 'azost', 'hmt'],\n  'America/Godthab': ['wgt', 'wgst', 'west greenland'],\n  'America/Scoresbysund': ['egt', 'egst', 'east greenland'],\n  //Middle-east\n  'Europe/Istanbul': ['trt', null, 'turkey'],\n  'Asia/Tbilisi': ['get', null, 'georgia'],\n  // 'Asia/Yerevan': ['amt', null, 'armenia'], //(sorry!)\n  'Asia/Baku': ['azt', null, 'azerbaijan'],\n  'Asia/Jerusalem': [null, 'idt', 'israel', 'jmt', 'iddt'],\n  //Using ist for india\n  'Asia/Tehran': ['irst', 'irdt', 'iran'],\n  'Asia/Karachi': ['pkt', null, 'pakistan'],\n  'Asia/Kabul': ['aft', null, 'afghanistan'],\n  'Asia/Dushanbe': ['tjt', null, 'tajikistan'],\n  'Asia/Almaty': ['almt', null, 'alma ata'],\n  'Asia/Dubai': ['gst', null, 'gulf'],\n  //India\n  'Asia/Kolkata': ['ist', null, 'india', 'slst'],\n  // 'Asia/Dhaka': ['bst', null, 'bangladesh'], //(sorry)\n  'Asia/Thimbu': ['btt', null, 'bhutan'],\n  'Indian/Maldives': ['mvt'],\n  'Asia/Kathmandu': ['npt', null, 'nepal'],\n  'Indian/Cocos': ['cct', null, 'cocos island'],\n  'Indian/Chagos': ['iot', null, 'indian chagos'],\n  'Indian/Kerguelen': ['tft', null, 'french southern and antarctic'],\n  // biot: 6, //British indian ocean time\n  // iot: 3, //Indian ocean time\n  //Asia\n  'Asia/Shanghai': ['ct', null, 'china', 'hkt'],\n  'Asia/Ulaanbaatar': ['ulat'],\n  'Asia/Seoul': ['kst', null, 'korea'],\n  'Asia/Tokyo': ['jst', null, 'japan'],\n  'Asia/Phnom_Penh': ['ict', null],\n  'Asia/Manila': ['pht', null, 'philippines'],\n  'Asia/Singapore': ['sgt'],\n  // mmt: 'Asia/Colombo',\n  //Australia\n  'Australia/Brisbane': ['aest', 'aedt', 'australian east'],\n  //Australian eastern standard time\n  'Australia/Adelaide': ['acst', 'acdt', 'australian central'],\n  //Australian central daylight savings time\n  'Australia/Eucla': ['acwst', null, 'cwst', 'australian central western'],\n  //Australian central western standard time (unofficial)\n  'Australia/Perth': ['awst', 'awdt', 'australian west'],\n  //Australian western standard time\n  'Pacific/Auckland': ['nzst', 'nzdt', 'nzmt'],\n  'Australia/Lord_Howe': ['lhst', 'lhdt'],\n  //Pacific\n  'Pacific/Guam': ['chst'],\n  'Pacific/Chatham': ['chast', 'chadt'],\n  'Pacific/Honolulu': ['hst'],\n  'Asia/Brunei': ['bnt', null, 'bdt'],\n  'Pacific/Midway': ['sst', null, 'samoa', 'sdt'],\n  'Pacific/Niue': ['nut'],\n  'Pacific/Fakaofo': ['tkt'],\n  'Pacific/Rarotonga': ['ckt', null, 'cook islands'],\n  'Chile/EasterIsland': ['east', 'easst', 'easter island', 'emt'],\n  'Asia/Jayapura': ['wit', null, 'east indonesia'],\n  'Asia/Jakarta': ['wib', null, 'west indonesia'],\n  'Asia/Makassar': ['wita', null, 'central indonesia'],\n  'Pacific/Galapagos': ['galt'],\n  'Pacific/Fiji': ['fjt', 'fjst'],\n  'Asia/Dili': ['tlt', null, 'east timor'],\n  'Indian/Christmas': ['cxt'] // sbt: 11, //Solomon islands time\n  // mht: 12, //Marshall islands time\n  // bit: -12, //Baker island time\n  // cist: -8, //Clipperton island standard time\n  // chut: 10, //Chuuk time\n  // ddut: 10, //Dumont durville time\n  // gst: 'Pacific/Guam',\n  // gamt: -9, //Gambier islands time\n  // git: -9, //Gambier island time\n  // gilt: 12, //Gilbert island time\n  // idlw: -12, //International day line west time zone\n  // 'international day line west': -12,\n  // kost: 11, //Kosrae time\n  // lint: 14, //Line islands time\n  // magt: 12, //Magadan time\n  // mist: 11, //Macquarie island station time\n  // nct: 11, //New caledonia time\n  // nft: 11, //Norfolk island time\n  // phot: 13, //Phoenix island time\n  // pont: 11, //Pohnpei standard time\n  // pett: 12, //Kamchatka time\n  // mart: -9.5, //Marquesas islands time\n  // mit: -9.5, //Marquesas islands time\n  // myt: 8, //Malaysia time\n  // nut: -11, //Niue time\n  // pht: 8, //Philippine time\n  // pgt: 10, //Papua new guinea time\n  // pmmt: 'Pacific/Bougainville',\n  // // smt: 'Asia/Singapore',\n  // sakt: 11, //Sakhalin island time\n  // sret: 11, //Srednekolymsk time\n  // sst: 'Pacific/Pago_Pago',\n  // taht: -10, //Tahiti time\n  // tvt: 12, //Tuvalu time\n  // tkt: 13, //Tokelau time\n  // tot: 13, //Tonga time\n  // vut: 11, //Vanuatu time\n  // wakt: 12, //Wake island time\n  //I forget (sorry!)\n  // haec: 2, //Heure avancée deurope centrale french-language name for cest\n  // syot: 3, //Showa station time\n  // yekt: 5, //Yekaterinburg time\n  // sct: 4, //Seychelles time\n  // orat: 5, //Oral time\n  // mawt: 5, //Mawson station time\n  // hovt: 7, //Khovd standard time\n  // hovst: 8, //Khovd summer time\n  // davt: 7, //Davis time\n  // chost: 9, //Choibalsan summer time\n  // chot: 8, //Choibalsan standard time\n  // wst: 8, //Western standard time\n\n}; //Use each abbreviation as a key\n// const lookup = Object.keys(informal).reduce((h, k) => {\n//   let arr = informal[k]\n//   for (let i = 0; i < 5; i += 1) {\n//     if (arr[i]) {\n//       h[arr[i]] = k\n//     }\n//   }\n//   return h\n// }, {})\n\nvar _06Abbreviations = informal; //From https://Github.com/Mj1856/Timezonenames\n// and from  https://Github.com/Nodatime/Nodatime/Blob/Master/Data/Cldr/Windowszones-35.xml\n\nvar _05Metazones = [//gmt-0, with daylight savings\n{\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  daylight: {\n    name: 'British Summer Time',\n    abbrev: 'BST'\n  },\n  alias: ['british', 'britain'],\n  pick: 'Europe/London',\n  zones: ['Europe/Guernsey', 'Europe/Isle_Of_Man', 'Europe/Jersey', 'Europe/London']\n}, {\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  daylight: {\n    name: 'Irish Summer Time',\n    abbrev: 'IST'\n  },\n  alias: ['ireland'],\n  zones: ['Europe/Dublin']\n}, //gmt-0, no daylight savings\n{\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  pick: 'Africa/Freetown',\n  alias: ['etc', 'utc'],\n  zones: ['Africa/Abidjan', 'Africa/Accra', 'Africa/Bamako', 'Africa/Banjul', 'Africa/Bissau', 'Africa/Conakry', 'Africa/Dakar', 'Africa/Freetown', 'Africa/Lome', 'Africa/Monrovia', 'Africa/Nouakchott', 'Africa/Ouagadougou', 'Africa/Sao_Tome', 'America/Danmarkshavn', 'Antarctica/Troll', 'Atlantic/Reykjavik', 'Atlantic/St_Helena', 'ETC/GMT']\n}, //North america\n{\n  standard: {\n    name: 'Central Standard Time',\n    abbrev: 'CST'\n  },\n  daylight: {\n    name: 'Central Daylight Time',\n    abbrev: 'CDT'\n  },\n  pick: 'America/Chicago',\n  zones: ['America/Bahia_Banderas', 'America/Belize', 'America/Chicago', 'America/Costa_Rica', 'America/El_Salvador', 'America/Guatemala', 'America/Indiana', 'America/Managua', 'America/Matamoros', 'America/Menominee', 'America/Merida', 'America/Mexico_City', 'America/Monterrey', 'America/North_Dakota', 'America/North_Dakota', 'America/North_Dakota', 'America/Rainy_River', 'America/Rankin_Inlet', 'America/Regina', 'America/Resolute', 'America/Swift_Current', 'America/Tegucigalpa', 'America/Winnipeg']\n}, {\n  standard: {\n    name: 'Mountain Standard Time',\n    abbrev: 'MST'\n  },\n  daylight: {\n    name: 'Mountain Daylight Time',\n    abbrev: 'MDT'\n  },\n  pick: 'America/Denver',\n  zones: ['America/Boise', 'America/Cambridge_Bay', 'America/Creston', 'America/Dawson_Creek', 'America/Denver', 'America/Edmonton', 'America/Fort_Nelson', 'America/Inuvik', 'America/Ojinaga', 'America/Phoenix', 'America/Yellowknife', // add mexico\n  'America/Chihuahua', 'America/Hermosillo', 'America/Mazatlan']\n}, {\n  standard: {\n    name: 'Atlantic Standard Time',\n    abbrev: 'AST'\n  },\n  daylight: {\n    name: 'Atlantic Daylight Time',\n    abbrev: 'ADT'\n  },\n  pick: 'America/Halifax',\n  zones: ['America/Anguilla', 'America/Antigua', 'America/Aruba', 'America/Barbados', 'America/Blanc-sablon', 'America/Curacao', 'America/Dominica', 'America/Glace_Bay', 'America/Goose_Bay', 'America/Grenada', 'America/Guadeloupe', 'America/Halifax', 'America/Kralendijk', 'America/Lower_Princes', 'America/Marigot', 'America/Martinique', 'America/Moncton', 'America/Montserrat', 'America/Port_Of_Spain', 'America/Puerto_Rico', 'America/Santo_Domingo', 'America/St_Barthelemy', 'America/St_Kitts', 'America/St_Lucia', 'America/St_Thomas', 'America/St_Vincent', 'America/Thule', 'America/Tortola', 'Atlantic/Bermuda']\n}, {\n  standard: {\n    name: 'Eastern Standard Time',\n    abbrev: 'EST'\n  },\n  daylight: {\n    name: 'Eastern Daylight Time',\n    abbrev: 'EDT'\n  },\n  pick: 'America/New_York',\n  zones: ['America/Cancun', 'America/Cayman', 'America/Coral_Harbour', 'America/Detroit', 'America/Grand_Turk', 'America/Indiana', 'America/Indianapolis', 'America/Iqaluit', 'America/Jamaica', 'America/Kentucky', 'America/Louisville', 'America/Nassau', 'America/New_York', 'America/Nipigon', 'America/Panama', 'America/Pangnirtung', 'America/Port-au-prince', 'America/Thunder_Bay', 'America/Toronto', 'America/Montreal']\n}, {\n  standard: {\n    name: 'Pacific Standard Time',\n    abbrev: 'PST'\n  },\n  daylight: {\n    name: 'Pacific Daylight Time',\n    abbrev: 'PDT'\n  },\n  pick: 'America/Los_Angeles',\n  zones: ['America/Dawson', 'America/Los_Angeles', 'America/Tijuana', 'America/Vancouver', 'America/Whitehorse']\n}, {\n  standard: {\n    name: 'Alaskan Standard Time',\n    abbrev: 'AHST'\n  },\n  daylight: {\n    name: 'Alaskan Daylight Time',\n    abbrev: 'AHDT'\n  },\n  pick: 'America/Anchorage',\n  zones: ['America/Anchorage', 'America/Juneau', 'America/Metlakatla', 'America/Nome', 'America/Sitka', 'America/Yakutat']\n}, {\n  standard: {\n    name: 'Hawaiian Standard Time',\n    abbrev: 'HST'\n  },\n  alias: ['aleutian', 'hawaii'],\n  pick: 'Pacific/Honolulu',\n  zones: ['America/Adak', 'Pacific/Honolulu', 'Pacific/Johnston']\n}, {\n  standard: {\n    name: 'Newfoundland Standard Time',\n    abbrev: 'NST'\n  },\n  daylight: {\n    name: 'Newfoundland Daylight Time',\n    abbrev: 'NDT'\n  },\n  pick: 'America/St_Johns',\n  zones: ['America/St_Johns']\n}, ///Europe\n{\n  standard: {\n    name: 'Central European Time',\n    abbrev: 'CET'\n  },\n  daylight: {\n    name: 'Central European Summer Time',\n    abbrev: 'CEST'\n  },\n  alias: ['romance', 'central europe'],\n  pick: 'Europe/Berlin',\n  zones: ['Africa/Algiers', 'Africa/Ceuta', 'Africa/Tunis', 'arctic/Longyearbyen', 'Europe/Amsterdam', 'Europe/Andorra', 'Europe/Belgrade', 'Europe/Berlin', 'Europe/Bratislava', 'Europe/Brussels', 'Europe/Budapest', 'Europe/Busingen', 'Europe/Copenhagen', 'Europe/Gibraltar', 'Europe/Ljubljana', 'Europe/Luxembourg', 'Europe/Madrid', 'Europe/Malta', 'Europe/Monaco', 'Europe/Oslo', 'Europe/Paris', 'Europe/Podgorica', 'Europe/Prague', 'Europe/Rome', 'Europe/San_Marino', 'Europe/Sarajevo', 'Europe/Skopje', 'Europe/Stockholm', 'Europe/Tirane', 'Europe/Vaduz', 'Europe/Vatican', 'Europe/Vienna', 'Europe/Warsaw', 'Europe/Zagreb', 'Europe/Zurich']\n}, {\n  standard: {\n    name: 'Eastern European Time',\n    abbrev: 'EET'\n  },\n  daylight: {\n    name: 'Eastern European Summer Time',\n    abbrev: 'EEST'\n  },\n  alias: ['eastern europe'],\n  pick: 'Europe/Riga',\n  zones: ['Africa/Cairo', 'Africa/Tripoli', 'Asia/Amman', 'Asia/Beirut', 'Asia/Damascus', 'Asia/Famagusta', 'Asia/Gaza', 'Asia/Hebron', 'Asia/Nicosia', 'Europe/Athens', 'Europe/Bucharest', 'Europe/Chisinau', 'Europe/Helsinki', 'Europe/Kaliningrad', 'Europe/Kiev', 'Europe/Mariehamn', 'Europe/Riga', 'Europe/Sofia', 'Europe/Tallinn', 'Europe/Uzhgorod', 'Europe/Vilnius', 'Europe/Zaporozhye']\n}, {\n  standard: {\n    name: 'Western European Time',\n    abbrev: 'WET'\n  },\n  daylight: {\n    name: 'Western European Summer Time',\n    abbrev: 'WEST'\n  },\n  alias: ['western europe'],\n  pick: 'Europe/Lisbon',\n  zones: ['Africa/Casablanca', 'Africa/El_Aaiun', 'Atlantic/Canary', 'Atlantic/Faeroe', 'Atlantic/Madeira', 'Europe/Lisbon']\n}, {\n  standard: {\n    name: 'Turkey Standard Time',\n    abbrev: 'TRT'\n  },\n  alias: ['turkish'],\n  pick: 'Europe/Istanbul',\n  zones: ['Europe/Istanbul']\n}, // samara: ['Europe/Samara', 'Europe/Saratov'],\n//Africa\n{\n  standard: {\n    name: 'East Africa Time',\n    abbrev: 'EAT'\n  },\n  alias: ['east african', 'eastern africa'],\n  pick: 'Africa/Nairobi',\n  zones: ['Africa/Addis_Ababa', 'Africa/Asmera', 'Africa/Dar_Es_Salaam', 'Africa/Djibouti', 'Africa/Juba', 'Africa/Kampala', 'Africa/Mogadishu', 'Africa/Nairobi', 'Indian/Antananarivo', 'Indian/Comoro', 'Indian/Mayotte']\n}, {\n  standard: {\n    name: 'Central Africa Time',\n    abbrev: 'CAT'\n  },\n  pick: 'Africa/Khartoum',\n  alias: ['central africa'],\n  zones: ['Africa/Blantyre', 'Africa/Bujumbura', 'Africa/Gaborone', 'Africa/Harare', 'Africa/Khartoum', 'Africa/Kigali', 'Africa/Lubumbashi', 'Africa/Lusaka', 'Africa/Maputo', 'Africa/Windhoek']\n}, {\n  standard: {\n    name: 'South Africa Standard Time',\n    abbrev: 'SAST'\n  },\n  alias: ['southern africa', 'south african'],\n  pick: 'Africa/Johannesburg',\n  zones: ['Africa/Johannesburg', 'Africa/Maseru', 'Africa/Mbabane']\n}, {\n  standard: {\n    name: 'West Africa Standard Time',\n    abbrev: 'WAT'\n  },\n  alias: ['western africa', 'west african'],\n  pick: 'Africa/Lagos',\n  zones: ['Africa/Bangui', 'Africa/Brazzaville', 'Africa/Douala', 'Africa/Kinshasa', 'Africa/Lagos', 'Africa/Libreville', 'Africa/Luanda', 'Africa/Malabo', 'Africa/Ndjamena', 'Africa/Niamey', 'Africa/Porto-novo']\n}, //Australia\n{\n  standard: {\n    name: 'Australian Central Standard Time',\n    abbrev: 'ACST'\n  },\n  daylight: {\n    name: 'Australian Central Daylight Time',\n    abbrev: 'ACDT'\n  },\n  alias: ['australia central'],\n  pick: 'Australia/Adelaide',\n  zones: ['Australia/Adelaide', 'Australia/Broken_Hill', 'Australia/Darwin']\n}, {\n  standard: {\n    name: 'Australian Eastern Standard Time',\n    abbrev: 'AEST'\n  },\n  daylight: {\n    name: 'Australian Eastern Daylight Time',\n    abbrev: 'AEDT'\n  },\n  alias: ['australia east'],\n  pick: 'Australia/Brisbane',\n  zones: ['Australia/Brisbane', 'Australia/Currie', 'Australia/Hobart', 'Australia/Lindeman', 'Australia/Melbourne', 'Australia/Sydney']\n}, {\n  standard: {\n    name: 'Australian Western Standard Time',\n    abbrev: 'AWST'\n  },\n  daylight: {\n    name: 'Australian Western Daylight Time',\n    abbrev: 'AWDT'\n  },\n  alias: ['australia west'],\n  pick: 'Australia/Perth',\n  zones: ['Antarctica/Casey', 'Australia/Perth']\n}, {\n  standard: {\n    name: 'Australian Central Western Standard Time',\n    abbrev: 'ACWST'\n  },\n  alias: ['australia central west'],\n  pick: 'Australia/Eucla',\n  zones: ['Australia/Eucla']\n}, {\n  standard: {\n    name: 'Lord Howe Standard Time',\n    abbrev: 'LHST'\n  },\n  daylight: {\n    name: 'Lord Howe Daylight Time',\n    abbrev: 'LHDT'\n  },\n  pick: 'Australia/Lord_Howe',\n  zones: ['Australia/Lord_Howe']\n}, {\n  standard: {\n    name: 'New Zealand Standard Time',\n    abbrev: 'NZST'\n  },\n  daylight: {\n    name: 'New Zealand Daylight Time',\n    abbrev: 'NZDT'\n  },\n  pick: 'Pacific/Auckland',\n  zones: ['Antarctica/Mcmurdo', 'Pacific/Auckland']\n}, {\n  standard: {\n    name: 'Chatham Island Standard Time',\n    abbrev: 'CHAST'\n  },\n  daylight: {\n    name: 'Chatham Island Daylight Time',\n    abbrev: 'CHADT'\n  },\n  pick: 'Pacific/Chatham',\n  zones: ['Pacific/Chatham']\n}, //Russia\n{\n  standard: {\n    name: 'Russian Standard Time',\n    abbrev: 'MSK'\n  },\n  alias: ['russian'],\n  pick: 'Europe/Moscow',\n  zones: ['Europe/Astrakhan', 'Europe/Minsk', 'Europe/Moscow', 'Europe/Simferopol', 'Europe/Ulyanovsk', 'Europe/Kirov']\n}, {\n  standard: {\n    name: 'Volgograd Time',\n    abbrev: 'VOLT'\n  },\n  zones: ['Europe/Volgograd']\n}, //South america\n{\n  standard: {\n    name: 'Brazil Time',\n    abbrev: 'BRT'\n  },\n  alias: ['brasília', 'brasilia', 'brazilian'],\n  pick: 'America/Sao_Paulo',\n  zones: ['America/Araguaina', 'America/Bahia', 'America/Belem', 'America/Fortaleza', 'America/Maceio', 'America/Recife', 'America/Santarem', 'America/Sao_Paulo']\n}, {\n  standard: {\n    name: 'Argentina Time',\n    abbrev: 'ART'\n  },\n  alias: ['argentinian'],\n  pick: 'America/Buenos_Aires',\n  zones: ['America/Argentina', 'America/Buenos_Aires', 'America/Catamarca', 'America/Cordoba', 'America/Jujuy', 'America/Mendoza']\n}, {\n  standard: {\n    name: 'Amazon Time',\n    abbrev: 'AMT'\n  },\n  alias: ['amazonian'],\n  pick: 'America/Manaus',\n  zones: ['America/Boa_Vista', 'America/Campo_Grande', 'America/Cuiaba', //Has dst?\n  'America/Manaus', 'America/Porto_Velho']\n}, {\n  standard: {\n    name: 'Easter Island Standard Time',\n    abbrev: 'EAST'\n  },\n  daylight: {\n    name: 'Easter Island Summer Time',\n    abbrev: 'EASST'\n  },\n  zones: ['Chile/EasterIsland']\n}, {\n  standard: {\n    name: 'Venezuelan Standard Time',\n    abbrev: 'VET'\n  },\n  alias: ['venezuela'],\n  zones: ['America/Caracas']\n}, {\n  standard: {\n    name: 'Paraguay Time',\n    abbrev: 'PYT'\n  },\n  daylight: {\n    name: 'Paraguay Summer Time',\n    abbrev: 'PYST'\n  },\n  zones: ['America/Asuncion']\n}, {\n  standard: {\n    name: 'Cuba Standard Time',\n    abbrev: 'CST'\n  },\n  daylight: {\n    name: 'Cuba Daylight Time',\n    abbrev: 'CDT'\n  },\n  alias: ['cuban'],\n  zones: ['America/Havana']\n}, {\n  standard: {\n    name: 'Bolivia Time',\n    abbrev: 'BOT'\n  },\n  alias: ['bolivian'],\n  zones: ['America/La_Paz']\n}, {\n  standard: {\n    name: 'Colombia Time',\n    abbrev: 'COT'\n  },\n  alias: ['colombian'],\n  zones: ['America/Bogota']\n}, {\n  standard: {\n    name: 'Acre Time',\n    abbrev: 'ACT'\n  },\n  pick: null,\n  zones: ['America/Eirunepe', 'America/Rio_Branco']\n}, {\n  standard: {\n    name: 'Peru Time',\n    abbrev: 'PET'\n  },\n  zones: ['America/Lima']\n}, {\n  standard: {\n    name: 'Chile Standard Time',\n    abbrev: 'CLST'\n  },\n  daylight: {\n    name: 'Chile Summer Time',\n    abbrev: 'CLDT'\n  },\n  pick: null,\n  zones: ['America/Punta_Arenas', 'America/Santiago', 'Antarctica/Palmer']\n}, {\n  standard: {\n    name: 'Uruguay Time',\n    abbrev: 'UYT'\n  },\n  zones: ['America/Montevideo']\n}, // argentina_Western: ['America/Argentina/San_Luis'],\n// french_Guiana: ['America/Cayenne'],\n// greenland_Western: ['America/Godthab'],\n// ecuador: ['America/Guayaquil'],\n// guyana: ['America/Guyana'],\n// pierre_Miquelon: ['America/Miquelon'],\n// noronha: ['America/Noronha'],\n// suriname: ['America/Paramaribo'],\n// mexico_Northwest: ['America/Santa_Isabel'],\n//Middle-east\n{\n  standard: {\n    name: 'Arabic Standard Time',\n    abbrev: 'AST'\n  },\n  pick: 'Asia/Baghdad',\n  alias: ['arabic', 'arab'],\n  zones: ['Asia/Aden', 'Asia/Baghdad', 'Asia/Bahrain', 'Asia/Kuwait', 'Asia/Qatar', 'Asia/Riyadh']\n}, {\n  standard: {\n    name: 'Iran Standard Time',\n    abbrev: 'IRST'\n  },\n  daylight: {\n    name: 'Iran Daylight Time',\n    abbrev: 'IRDT'\n  },\n  alias: ['iranian'],\n  pick: 'Asia/Tehran',\n  zones: ['Asia/Tehran']\n}, {\n  standard: {\n    name: 'Pakistan Standard Time',\n    abbrev: 'PKT'\n  },\n  pick: 'Asia/Karachi',\n  zones: ['Asia/Karachi']\n}, {\n  standard: {\n    name: 'India Standard Time',\n    abbrev: 'IST'\n  },\n  alias: ['indian'],\n  pick: 'Asia/Kolkata',\n  zones: ['Asia/Kolkata', 'Asia/Colombo']\n}, {\n  standard: {\n    name: 'Indochina Time',\n    abbrev: 'ICT'\n  },\n  alias: ['South East Asia'],\n  pick: 'Asia/Bangkok',\n  zones: ['Asia/Bangkok', 'Asia/Phnom_Penh', 'Asia/Saigon', 'Asia/Vientiane']\n}, {\n  standard: {\n    name: 'China Standard Time',\n    abbrev: 'CT'\n  },\n  //cst?\n  alias: ['chinese'],\n  pick: 'Asia/Shanghai',\n  zones: ['Asia/Macau', 'Asia/Shanghai', 'Asia/Taipei']\n}, {\n  standard: {\n    name: 'Alma-Ata Time',\n    abbrev: 'ALMT'\n  },\n  pick: 'Asia/Almaty',\n  zones: ['Asia/Almaty', 'Asia/Qostanay']\n}, {\n  standard: {\n    name: 'Oral Time',\n    abbrev: 'ORAT'\n  },\n  pick: 'Asia/Oral',\n  zones: ['Asia/Aqtau', 'Asia/Aqtobe', 'Asia/Atyrau', 'Asia/Oral', 'Asia/Qyzylorda']\n}, {\n  standard: {\n    name: 'Yakutsk Time',\n    abbrev: 'YAKT'\n  },\n  pick: 'Asia/Yakutsk',\n  zones: ['Asia/Chita', 'Asia/Khandyga', 'Asia/Yakutsk']\n}, {\n  standard: {\n    name: 'Gulf Standard Time',\n    abbrev: 'GST'\n  },\n  pick: 'Asia/Dubai',\n  alias: ['uae'],\n  zones: ['Asia/Dubai', 'Asia/Muscat']\n}, {\n  standard: {\n    name: 'Hong Kong Time',\n    abbrev: 'HKT'\n  },\n  zones: ['Asia/Hong_Kong']\n}, {\n  standard: {\n    name: 'Western Indonesian Time',\n    abbrev: 'WIB'\n  },\n  alias: ['indonesia'],\n  //most of it\n  zones: ['Asia/Jakarta', 'Asia/Pontianak', 'Asia/Jayapura']\n}, {\n  standard: {\n    name: 'Central Indonesian Time',\n    abbrev: 'WITA'\n  },\n  zones: ['Asia/Makassar']\n}, {\n  standard: {\n    name: 'Israel Daylight Time',\n    abbrev: 'IDT'\n  },\n  daylight: {\n    name: 'Israel Standard Time',\n    abbrev: 'IST'\n  },\n  alias: ['israeli'],\n  zones: ['Asia/Jerusalem']\n}, {\n  standard: {\n    name: 'Krasnoyarsk Time',\n    abbrev: 'KRAT'\n  },\n  zones: ['Asia/Krasnoyarsk', 'Asia/Novokuznetsk', 'Asia/Barnaul']\n}, {\n  standard: {\n    name: 'Malaysia Time',\n    abbrev: 'MYT'\n  },\n  zones: ['Asia/Kuala_Lumpur', 'Asia/Kuching']\n}, {\n  standard: {\n    name: 'Singapore Time',\n    abbrev: 'SGT'\n  },\n  zones: ['Asia/Singapore']\n}, {\n  standard: {\n    name: 'Korea Standard Time',\n    abbrev: 'KST'\n  },\n  pick: 'Asia/Seoul',\n  alias: ['korean'],\n  zones: ['Asia/Pyongyang', 'Asia/Seoul']\n}, {\n  standard: {\n    name: 'Uzbekistan Time',\n    abbrev: 'UZT'\n  },\n  zones: ['Asia/Samarkand', 'Asia/Tashkent']\n}, {\n  standard: {\n    name: 'Vladivostok Time',\n    abbrev: 'VLAT'\n  },\n  pick: 'Asia/Vladivostok',\n  zones: ['Asia/Ust-nera', 'Asia/Vladivostok']\n}, {\n  standard: {\n    name: 'Anadyr Time',\n    abbrev: 'ANAT'\n  },\n  zones: ['Asia/Anadyr']\n}, {\n  standard: {\n    name: 'Turkmenistan Time',\n    abbrev: 'TMT'\n  },\n  zones: ['Asia/Ashgabat']\n}, {\n  standard: {\n    name: 'Azerbaijan Time',\n    abbrev: 'AZT'\n  },\n  zones: ['Asia/Baku']\n}, {\n  standard: {\n    name: 'Kyrgyzstan Time',\n    abbrev: 'KGT'\n  },\n  zones: ['Asia/Bishkek']\n}, {\n  standard: {\n    name: 'Brunei Darussalam Time',\n    abbrev: 'BNT'\n  },\n  zones: ['Asia/Brunei']\n}, // choibalsan: ['Asia/Choibalsan'],\n// { standard: { name: 'Bangladesh Standard Time', abbrev: 'BST' }, zones: ['Asia/Dhaka'] },\n// east_Timor: ['Asia/Dili'],\n// tajikistan: ['Asia/Dushanbe'],\n// hovd: ['Asia/Hovd'],\n// irkutsk: ['Asia/Irkutsk'],\n{\n  standard: {\n    name: 'Afghanistan Time',\n    abbrev: 'AFT'\n  },\n  zones: ['Asia/Kabul']\n}, {\n  standard: {\n    name: 'Kamchatka Time',\n    abbrev: 'PETT'\n  },\n  zones: ['Asia/Kamchatka']\n}, {\n  standard: {\n    name: 'Nepal Time',\n    abbrev: 'NPT'\n  },\n  zones: ['Asia/Katmandu']\n}, // magadan: ['Asia/Magadan'],\n{\n  standard: {\n    name: 'Philippine Time',\n    abbrev: 'PHT'\n  },\n  zones: ['Asia/Manila']\n}, // novosibirsk: ['Asia/Novosibirsk'],\n// omsk: ['Asia/Omsk'],\n{\n  standard: {\n    name: 'Myanmar Time',\n    abbrev: 'MMT'\n  },\n  zones: ['Asia/Rangoon']\n}, // sakhalin: ['Asia/Sakhalin'],\n// srednekolymsk: ['Asia/Srednekolymsk'],\n{\n  standard: {\n    name: 'Georgia Standard Time',\n    abbrev: 'GET'\n  },\n  zones: ['Asia/Tbilisi']\n}, // bhutan: ['Asia/Thimphu'],\n{\n  standard: {\n    name: 'Japan Standard Time',\n    abbrev: 'JST'\n  },\n  zones: ['Asia/Tokyo']\n}, {\n  standard: {\n    name: 'Ulaanbaatar Time',\n    abbrev: 'ULAT'\n  },\n  zones: ['Asia/Ulaanbaatar']\n}, // urumqi: ['Asia/Urumqi'],\n// yekaterinburg: ['Asia/Yekaterinburg'],\n// armenia: ['Asia/Yerevan'],\n// azores: ['Atlantic/Azores'],\n// cape_Verde: ['Atlantic/Cape_Verde'],\n// south_Georgia: ['Atlantic/South_Georgia'],\n// falkland: ['Atlantic/Stanley'],\n//India\n{\n  standard: {\n    name: 'Maldives Time',\n    abbrev: 'MVT'\n  },\n  zones: ['Indian/Maldives']\n}, {\n  standard: {\n    name: 'Mauritius Time',\n    abbrev: 'MUT'\n  },\n  zones: ['Indian/Mauritius']\n}, {\n  standard: {\n    name: 'Marshall Islands Time',\n    abbrev: 'MHT'\n  },\n  zones: ['Pacific/Kwajalein', 'Pacific/Majuro']\n}, {\n  standard: {\n    name: 'Samoa Standard Time',\n    abbrev: 'SST'\n  },\n  alias: ['somoan'],\n  zones: ['Pacific/Midway', 'Pacific/Pago_Pago']\n}, {\n  standard: {\n    name: 'Chamorro Standard Time',\n    abbrev: 'CHST'\n  },\n  zones: ['Pacific/Guam', 'Pacific/Saipan']\n}, {\n  standard: {\n    name: 'Papua New Guinea Time',\n    abbrev: 'PGT'\n  },\n  zones: ['Pacific/Bougainville', 'Pacific/Port_Moresby']\n} // indian_Ocean: ['Indian/Chagos'],\n// christmas: ['Indian/Christmas'],\n// cocos: ['Indian/Cocos'],\n// french_Southern: ['Indian/Kerguelen'],\n// seychelles: ['Indian/Mahe'],\n// reunion: ['Indian/Reunion'],\n//Pacific\n// apia: ['Pacific/Apia'],\n// easter: ['Pacific/Easter'],\n// vanuatu: ['Pacific/Efate'],\n// phoenix_Islands: ['Pacific/Enderbury'],\n// tokelau: ['Pacific/Fakaofo'],\n// fiji: ['Pacific/Fiji'],\n// tuvalu: ['Pacific/Funafuti'],\n// galapagos: ['Pacific/Galapagos'],\n// gambier: ['Pacific/Gambier'],\n// solomon: ['Pacific/Guadalcanal'],\n// line_Islands: ['Pacific/Kiritimati'],\n// kosrae: ['Pacific/Kosrae'],\n// marquesas: ['Pacific/Marquesas'],\n// nauru: ['Pacific/Nauru'],\n// niue: ['Pacific/Niue'],\n// norfolk: ['Pacific/Norfolk'],\n// new_Caledonia: ['Pacific/Noumea'],\n// palau: ['Pacific/Palau'],\n// pitcairn: ['Pacific/Pitcairn'],\n// ponape: ['Pacific/Ponape'],\n// cook: ['Pacific/Rarotonga'],\n// tahiti: ['Pacific/Tahiti'],\n// gilbert_Islands: ['Pacific/Tarawa'],\n// tonga: ['Pacific/Tongatapu'],\n// truk: ['Pacific/Truk'],\n// wake: ['Pacific/Wake'],\n// wallis: ['Pacific/Wallis'],\n// tomsk: ['Asia/Tomsk']\n// antarctic\n// greenland_Eastern: ['America/Scoresbysund'],\n// davis: ['Antarctica/Davis'],\n// dumontdurville: ['Antarctica/Dumontdurville'],\n// macquarie: ['Antarctica/Macquarie'],\n// mawson: ['Antarctica/Mawson'],\n// rothera: ['Antarctica/Rothera'],\n// syowa: ['Antarctica/Syowa'],\n// vostok: ['Antarctica/Vostok'],\n]; //  a list of judgement-calls for country → timezone mappings\n//  with 'new zealand' we usually want 'Pacific/Auckland'.\n//  based on population, country-capital, and geographical center\n//  often some guesswork!\n\nvar _03ByCountry = {\n  //First, these countries only have one timezone.\n  andorra: {\n    code: 'ad',\n    choice: 'Europe/Andorra'\n  },\n  oman: {\n    code: 'om',\n    choice: 'Asia/Dubai'\n  },\n  afghanistan: {\n    code: 'af',\n    choice: 'Asia/Kabul'\n  },\n  'virgin islands': {\n    code: 'vi',\n    choice: 'America/Port_Of_Spain'\n  },\n  albania: {\n    code: 'al',\n    choice: 'Europe/Tirane'\n  },\n  armenia: {\n    code: 'am',\n    choice: 'Asia/Yerevan'\n  },\n  nigeria: {\n    code: 'ng',\n    choice: 'Africa/Lagos'\n  },\n  austria: {\n    code: 'at',\n    choice: 'Europe/Vienna'\n  },\n  'st maarten': {\n    code: 'sx',\n    choice: 'America/Curacao'\n  },\n  finland: {\n    code: 'fi',\n    choice: 'Europe/Helsinki'\n  },\n  azerbaijan: {\n    code: 'az',\n    choice: 'Asia/Baku'\n  },\n  slovenia: {\n    code: 'si',\n    choice: 'Europe/Belgrade'\n  },\n  barbados: {\n    code: 'bb',\n    choice: 'America/Barbados'\n  },\n  bangladesh: {\n    code: 'bd',\n    choice: 'Asia/Dhaka'\n  },\n  belgium: {\n    code: 'be',\n    choice: 'Europe/Brussels'\n  },\n  togo: {\n    code: 'tg',\n    choice: 'Africa/Abidjan'\n  },\n  bulgaria: {\n    code: 'bg',\n    choice: 'Europe/Sofia'\n  },\n  qatar: {\n    code: 'qa',\n    choice: 'Asia/Qatar'\n  },\n  zimbabwe: {\n    code: 'zw',\n    choice: 'Africa/Maputo'\n  },\n  bermuda: {\n    code: 'bm',\n    choice: 'Atlantic/Bermuda'\n  },\n  brunei: {\n    code: 'bn',\n    choice: 'Asia/Brunei'\n  },\n  bolivia: {\n    code: 'bo',\n    choice: 'America/La_Paz'\n  },\n  bahamas: {\n    code: 'bs',\n    choice: 'America/Nassau'\n  },\n  bhutan: {\n    code: 'bt',\n    choice: 'Asia/Thimphu'\n  },\n  belarus: {\n    code: 'by',\n    choice: 'Europe/Minsk'\n  },\n  belize: {\n    code: 'bz',\n    choice: 'America/Belize'\n  },\n  'cocos islands': {\n    code: 'cc',\n    choice: 'Indian/Cocos'\n  },\n  liechtenstein: {\n    code: 'li',\n    choice: 'Europe/Zurich'\n  },\n  'cook islands': {\n    code: 'ck',\n    choice: 'Pacific/Rarotonga'\n  },\n  colombia: {\n    code: 'co',\n    choice: 'America/Bogota'\n  },\n  'costa rica': {\n    code: 'cr',\n    choice: 'America/Costa_Rica'\n  },\n  cuba: {\n    code: 'cu',\n    choice: 'America/Havana'\n  },\n  'cape verde': {\n    code: 'cv',\n    choice: 'Atlantic/Cape_Verde'\n  },\n  'christmas island': {\n    code: 'cx',\n    choice: 'Indian/Christmas'\n  },\n  slovakia: {\n    code: 'sk',\n    choice: 'Europe/Prague'\n  },\n  mayotte: {\n    code: 'yt',\n    choice: 'Africa/Nairobi'\n  },\n  denmark: {\n    code: 'dk',\n    choice: 'Europe/Copenhagen'\n  },\n  'dominican republic': {\n    code: 'do',\n    choice: 'America/Santo_Domingo'\n  },\n  algeria: {\n    code: 'dz',\n    choice: 'Africa/Algiers'\n  },\n  estonia: {\n    code: 'ee',\n    choice: 'Europe/Tallinn'\n  },\n  egypt: {\n    code: 'eg',\n    choice: 'Africa/Cairo'\n  },\n  'western sahara': {\n    code: 'eh',\n    choice: 'Africa/El_Aaiun'\n  },\n  fiji: {\n    code: 'fj',\n    choice: 'Pacific/Fiji'\n  },\n  'falkland islands': {\n    code: 'fk',\n    choice: 'Atlantic/Stanley'\n  },\n  'faroe islands': {\n    code: 'fo',\n    choice: 'Atlantic/Faroe'\n  },\n  france: {\n    code: 'fr',\n    choice: 'Europe/Paris'\n  },\n  jersey: {\n    code: 'je',\n    choice: 'Europe/London'\n  },\n  georgia: {\n    code: 'ge',\n    choice: 'Asia/Tbilisi'\n  },\n  'french guiana': {\n    code: 'gf',\n    choice: 'America/Cayenne'\n  },\n  ghana: {\n    code: 'gh',\n    choice: 'Africa/Accra'\n  },\n  gibraltar: {\n    code: 'gi',\n    choice: 'Europe/Gibraltar'\n  },\n  greece: {\n    code: 'gr',\n    choice: 'Europe/Athens'\n  },\n  'south georgia': {\n    code: 'gs',\n    choice: 'Atlantic/South_Georgia'\n  },\n  guatemala: {\n    code: 'gt',\n    choice: 'America/Guatemala'\n  },\n  'northern mariana islands': {\n    code: 'mp',\n    choice: 'Pacific/Guam'\n  },\n  'guinea bissau': {\n    code: 'gw',\n    choice: 'Africa/Bissau'\n  },\n  guyana: {\n    code: 'gy',\n    choice: 'America/Guyana'\n  },\n  'hong kong': {\n    code: 'hk',\n    choice: 'Asia/Hong_Kong'\n  },\n  honduras: {\n    code: 'hn',\n    choice: 'America/Tegucigalpa'\n  },\n  haiti: {\n    code: 'ht',\n    choice: 'America/Port-au-prince'\n  },\n  hungary: {\n    code: 'hu',\n    choice: 'Europe/Budapest'\n  },\n  ireland: {\n    code: 'ie',\n    choice: 'Europe/Dublin'\n  },\n  israel: {\n    code: 'il',\n    choice: 'Asia/Jerusalem'\n  },\n  india: {\n    code: 'in',\n    choice: 'Asia/Kolkata'\n  },\n  'british indian ocean territory': {\n    code: 'io',\n    choice: 'Indian/Chagos'\n  },\n  iraq: {\n    code: 'iq',\n    choice: 'Asia/Baghdad'\n  },\n  iran: {\n    code: 'ir',\n    choice: 'Asia/Tehran'\n  },\n  iceland: {\n    code: 'is',\n    choice: 'Atlantic/Reykjavik'\n  },\n  'vatican city': {\n    code: 'va',\n    choice: 'Europe/Rome'\n  },\n  jamaica: {\n    code: 'jm',\n    choice: 'America/Jamaica'\n  },\n  jordan: {\n    code: 'jo',\n    choice: 'Asia/Amman'\n  },\n  japan: {\n    code: 'jp',\n    choice: 'Asia/Tokyo'\n  },\n  kyrgyzstan: {\n    code: 'kg',\n    choice: 'Asia/Bishkek'\n  },\n  'north korea': {\n    code: 'kp',\n    choice: 'Asia/Pyongyang'\n  },\n  'south korea': {\n    code: 'kr',\n    choice: 'Asia/Seoul'\n  },\n  yemen: {\n    code: 'ye',\n    choice: 'Asia/Riyadh'\n  },\n  panama: {\n    code: 'pa',\n    choice: 'America/Panama'\n  },\n  lebanon: {\n    code: 'lb',\n    choice: 'Asia/Beirut'\n  },\n  'sri lanka': {\n    code: 'lk',\n    choice: 'Asia/Colombo'\n  },\n  liberia: {\n    code: 'lr',\n    choice: 'Africa/Monrovia'\n  },\n  'south africa': {\n    code: 'za',\n    choice: 'Africa/Johannesburg'\n  },\n  lithuania: {\n    code: 'lt',\n    choice: 'Europe/Vilnius'\n  },\n  luxembourg: {\n    code: 'lu',\n    choice: 'Europe/Luxembourg'\n  },\n  latvia: {\n    code: 'lv',\n    choice: 'Europe/Riga'\n  },\n  libya: {\n    code: 'ly',\n    choice: 'Africa/Tripoli'\n  },\n  morocco: {\n    code: 'ma',\n    choice: 'Africa/Casablanca'\n  },\n  monaco: {\n    code: 'mc',\n    choice: 'Europe/Monaco'\n  },\n  moldova: {\n    code: 'md',\n    choice: 'Europe/Chisinau'\n  },\n  myanmar: {\n    code: 'mm',\n    choice: 'Asia/Yangon'\n  },\n  //(alias for myanmar)\n  burma: {\n    code: 'mm',\n    choice: 'Asia/Yangon'\n  },\n  macau: {\n    code: 'mo',\n    choice: 'Asia/Macau'\n  },\n  martinique: {\n    code: 'mq',\n    choice: 'America/Martinique'\n  },\n  malta: {\n    code: 'mt',\n    choice: 'Europe/Malta'\n  },\n  mauritius: {\n    code: 'mu',\n    choice: 'Indian/Mauritius'\n  },\n  maldives: {\n    code: 'mv',\n    choice: 'Indian/Maldives'\n  },\n  namibia: {\n    code: 'na',\n    choice: 'Africa/Windhoek'\n  },\n  'new caledonia': {\n    code: 'nc',\n    choice: 'Pacific/Noumea'\n  },\n  'norfolk island': {\n    code: 'nf',\n    choice: 'Pacific/Norfolk'\n  },\n  nicaragua: {\n    code: 'ni',\n    choice: 'America/Managua'\n  },\n  netherlands: {\n    code: 'nl',\n    choice: 'Europe/Amsterdam'\n  },\n  'svalbard and jan mayen': {\n    code: 'sj',\n    choice: 'Europe/Oslo'\n  },\n  nepal: {\n    code: 'np',\n    choice: 'Asia/Kathmandu'\n  },\n  nauru: {\n    code: 'nr',\n    choice: 'Pacific/Nauru'\n  },\n  niue: {\n    code: 'nu',\n    choice: 'Pacific/Niue'\n  },\n  peru: {\n    code: 'pe',\n    choice: 'America/Lima'\n  },\n  philippines: {\n    code: 'ph',\n    choice: 'Asia/Manila'\n  },\n  pakistan: {\n    code: 'pk',\n    choice: 'Asia/Karachi'\n  },\n  poland: {\n    code: 'pl',\n    choice: 'Europe/Warsaw'\n  },\n  'st pierre and miquelon': {\n    code: 'pm',\n    choice: 'America/Miquelon'\n  },\n  pitcairn: {\n    code: 'pn',\n    choice: 'Pacific/Pitcairn'\n  },\n  'puerto rico': {\n    code: 'pr',\n    choice: 'America/Puerto_Rico'\n  },\n  palau: {\n    code: 'pw',\n    choice: 'Pacific/Palau'\n  },\n  paraguay: {\n    code: 'py',\n    choice: 'America/Asuncion'\n  },\n  romania: {\n    code: 'ro',\n    choice: 'Europe/Bucharest'\n  },\n  'solomon islands': {\n    code: 'sb',\n    choice: 'Pacific/Guadalcanal'\n  },\n  seychelles: {\n    code: 'sc',\n    choice: 'Indian/Mahe'\n  },\n  sudan: {\n    code: 'sd',\n    choice: 'Africa/Khartoum'\n  },\n  sweden: {\n    code: 'se',\n    choice: 'Europe/Stockholm'\n  },\n  singapore: {\n    code: 'sg',\n    choice: 'Asia/Singapore'\n  },\n  suriname: {\n    code: 'sr',\n    choice: 'America/Paramaribo'\n  },\n  'south sudan': {\n    code: 'ss',\n    choice: 'Africa/Juba'\n  },\n  'sao tome': {\n    code: 'st',\n    choice: 'Africa/Sao_Tome'\n  },\n  'el salvador': {\n    code: 'sv',\n    choice: 'America/El_Salvador'\n  },\n  syria: {\n    code: 'sy',\n    choice: 'Asia/Damascus'\n  },\n  'turks and caicos': {\n    code: 'tc',\n    choice: 'America/Grand_Turk'\n  },\n  chad: {\n    code: 'td',\n    choice: 'Africa/Ndjamena'\n  },\n  tajikistan: {\n    code: 'tj',\n    choice: 'Asia/Dushanbe'\n  },\n  tokelau: {\n    code: 'tk',\n    choice: 'Pacific/Fakaofo'\n  },\n  'east timor': {\n    code: 'tl',\n    choice: 'Asia/Dili'\n  },\n  turkmenistan: {\n    code: 'tm',\n    choice: 'Asia/Ashgabat'\n  },\n  tunisia: {\n    code: 'tn',\n    choice: 'Africa/Tunis'\n  },\n  tonga: {\n    code: 'to',\n    choice: 'Pacific/Tongatapu'\n  },\n  turkey: {\n    code: 'tr',\n    choice: 'Europe/Istanbul'\n  },\n  tuvalu: {\n    code: 'tv',\n    choice: 'Pacific/Funafuti'\n  },\n  taiwan: {\n    code: 'tw',\n    choice: 'Asia/Taipei'\n  },\n  uruguay: {\n    code: 'uy',\n    choice: 'America/Montevideo'\n  },\n  venezuela: {\n    code: 've',\n    choice: 'America/Caracas'\n  },\n  vanuatu: {\n    code: 'vu',\n    choice: 'Pacific/Efate'\n  },\n  'wallis and futuna': {\n    code: 'wf',\n    choice: 'Pacific/Wallis'\n  },\n  'western samoa': {\n    code: 'ws',\n    choice: 'Pacific/Apia'\n  },\n  samoa: {\n    code: 'ws',\n    choice: 'Pacific/Apia'\n  },\n  ////////////\n  /// these countries have more than one timezone\n  /// and i picked one.\n  // (i tried to do my best.)\n  antarctica: {\n    code: 'aq',\n    choice: 'Antarctica/Davis'\n  },\n  argentina: {\n    code: 'ar',\n    choice: 'America/Argentina'\n  },\n  australia: {\n    code: 'au',\n    choice: 'Australia/Sydney'\n  },\n  brazil: {\n    code: 'br',\n    choice: 'America/Sao_Paulo'\n  },\n  canada: {\n    code: 'ca',\n    choice: 'America/Toronto'\n  },\n  congo: {\n    code: 'cd',\n    choice: 'Africa/Kinshasa' //'Africa/Lagos'?\n\n  },\n  chile: {\n    code: 'cl',\n    choice: 'America/Santiago'\n  },\n  china: {\n    code: 'cn',\n    choice: 'Asia/Shanghai'\n  },\n  cyprus: {\n    code: 'cy',\n    choice: 'Asia/Nicosia'\n  },\n  germany: {\n    code: 'de',\n    choice: 'Europe/Berlin'\n  },\n  ecuador: {\n    code: 'ec',\n    choice: 'America/Guayaquil'\n  },\n  spain: {\n    code: 'es',\n    choice: 'Europe/Madrid'\n  },\n  micronesia: {\n    code: 'fm',\n    choice: 'Pacific/Pohnpei'\n  },\n  greenland: {\n    code: 'gl',\n    choice: 'America/Godthab'\n  },\n  indonesia: {\n    code: 'id',\n    choice: 'Asia/Jakarta'\n  },\n  kiribati: {\n    code: 'ki',\n    choice: 'Pacific/Kiritimati'\n  },\n  kazakhstan: {\n    code: 'kz',\n    choice: 'Asia/Almaty'\n  },\n  'marshall islands': {\n    code: 'mh',\n    choice: 'Pacific/Majuro'\n  },\n  mongolia: {\n    code: 'mn',\n    choice: 'Asia/Ulaanbaatar'\n  },\n  mexico: {\n    code: 'mx',\n    choice: 'America/Mexico_City' // 'America/Monterrey'?\n\n  },\n  malaysia: {\n    code: 'my',\n    choice: 'Asia/Kuala_Lumpur'\n  },\n  'new zealand': {\n    code: 'nz',\n    choice: 'Pacific/Auckland'\n  },\n  'french polynesia': {\n    code: 'pf',\n    choice: 'Pacific/Pohnpei'\n  },\n  'papua new guinea': {\n    code: 'pg',\n    choice: 'Pacific/Port_Moresby'\n  },\n  palestine: {\n    code: 'ps',\n    choice: 'Asia/Gaza'\n  },\n  portugal: {\n    code: 'pt',\n    choice: 'Europe/Lisbon'\n  },\n  russia: {\n    code: 'ru',\n    choice: 'Europe/Moscow' // 'Europe/Kaliningrad'?\n\n  },\n  'french southern and antarctic lands': {\n    code: 'tf',\n    choice: 'Indian/Kerguelen'\n  },\n  ukraine: {\n    code: 'ua',\n    choice: 'Europe/Kiev'\n  },\n  'us minor outlying islands': {\n    code: 'um',\n    choice: 'Pacific/Wake'\n  },\n  'united states': {\n    code: 'us',\n    choice: 'America/New_York'\n  },\n  uzbekistan: {\n    code: 'uz',\n    choice: 'Asia/Tashkent' //'Asia/Samarkand'\n\n  },\n  vietnam: {\n    code: 'vn',\n    choice: 'Asia/Ho_Chi_Minh'\n  }\n};\nvar all = Object.assign({}, _01Iana, _02ByCity, _04OldZones, _07Parentheses); //Add country info\n\nObject.keys(_03ByCountry).forEach(function (key) {\n  //Add country name\n  all[key] = _03ByCountry[key].choice; //Add 2-letter country code\n\n  all[_03ByCountry[key].code] = _03ByCountry[key].choice;\n}); //Add metazone info\n\n_05Metazones.forEach(function (obj) {\n  var zone = obj.pick || obj.zones[0];\n  all[obj.standard.name.toLowerCase()] = zone;\n\n  if (obj.standard.abbrev) {\n    all[obj.standard.abbrev.toLowerCase()] = zone;\n  }\n\n  if (obj.daylight) {\n    if (obj.daylight.name) {\n      all[obj.daylight.name.toLowerCase()] = zone;\n    }\n\n    if (obj.daylight.abbrev) {\n      all[obj.daylight.abbrev.toLowerCase()] = zone;\n    }\n  }\n\n  if (obj.alias) {\n    obj.alias.forEach(function (str) {\n      return all[str.toLowerCase()] = zone;\n    });\n  }\n}); // add even-more abbreviations\n\n\nObject.keys(_06Abbreviations).forEach(function (k) {\n  var arr = (_06Abbreviations[k] || []).filter(function (a) {\n    return a;\n  });\n  arr.forEach(function (abbr) {\n    if (all.hasOwnProperty(abbr) === false) {\n      all[abbr] = k;\n    }\n  });\n}); // console.log(all['canada/vancouver'])\n// console.log(Object.keys(all).length)\n\nvar data = all;\nvar isOffset = /(\\-?[0-9]+)h(rs)?/i;\nvar isNumber = /(\\-?[0-9]+)/;\nvar utcOffset = /utc([\\-+]?[0-9]+)/i;\nvar gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nvar toIana = function toIana(num) {\n  num = Number(num);\n\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n\n    return 'Etc/GMT' + num;\n  }\n\n  return null;\n};\n\nvar parseOffset = function parseOffset(tz) {\n  // '+5hrs'\n  var m = tz.match(isOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'utc+5'\n\n\n  m = tz.match(utcOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'GMT-5' (not opposite)\n\n\n  m = tz.match(gmtOffset);\n\n  if (m !== null) {\n    var num = Number(m[1]) * -1;\n    return toIana(num);\n  } // '+5'\n\n\n  m = tz.match(isNumber);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n\n  return null;\n};\n\nvar parseOffset_1 = parseOffset;\n\nvar normalizeOne = function normalizeOne(tz) {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/ - .*/g, ''); //`Eastern Time - US & Canada`\n\n  tz = tz.replace(/, .*/g, ''); //`mumbai, india`\n\n  return tz.trim();\n}; //some more aggressive transformations\n\n\nvar normalizeTwo = function normalizeTwo(tz) {\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  tz = tz.replace(/.*\\//g, '');\n  return tz.trim();\n}; // even-more agressive\n\n\nvar normalizeThree = function normalizeThree(tz) {\n  tz = tz.replace(/\\(.*\\)/, '');\n  return tz.trim();\n}; //\n\n\nvar find = function find(str) {\n  if (!str) {\n    return null;\n  }\n\n  str = str.toLowerCase().trim(); // lookup known abbreviations\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // -8hrs\n\n\n  if (/[0-9]/.test(str)) {\n    var etc = parseOffset_1(str);\n\n    if (etc) {\n      return etc;\n    }\n  } // start fuzzy-match against iana timezones\n\n\n  str = normalizeOne(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // 'eastern daylight'\n\n\n  var tmp = str + ' time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // 'pacific'\n\n\n  tmp = str + ' standard time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // -- harder normalizations --\n\n\n  str = normalizeTwo(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // -- HARDER normalizations --\n\n\n  str = normalizeThree(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // 'eastern daylight'\n\n\n  tmp = str + ' time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // 'pacific'\n\n\n  tmp = str + ' standard time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  }\n\n  return null;\n};\n\nvar find_1 = find;\n\nvar display = function display(str) {\n  var id = find_1(str);\n\n  if (!id) {\n    return null;\n  }\n\n  var meta = _05Metazones.find(function (obj) {\n    return obj.zones.find(function (tz) {\n      return tz === id;\n    });\n  });\n\n  meta = meta || {};\n  return {\n    iana: id,\n    standard: meta.standard,\n    daylight: meta.daylight\n  };\n};\n\nvar display_1 = display;\nvar _version = '0.5.0';\nvar src = {\n  find: find_1,\n  display: display_1,\n  version: _version\n};\nvar src_1 = src.find;\nvar src_2 = src.display;\nvar src_3 = src.version;\nexport default src;\nexport { src_2 as display, src_1 as find, src_3 as version };","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/node_modules/spacetime-informal/builds/spacetime-informal.mjs"],"names":["iana","Africa","America","Antarctica","Arctic","Asia","Atlantic","Australia","Brazil","Canada","Chile","Europe","Indian","Mexico","Pacific","ETC","ignore","east","west","zones","Object","keys","forEach","k","str","id","toLowerCase","replace","_01Iana","_02ByCity","ottawa","montreal","chongqing","beijing","chengdu","guangzhou","tianjin","baoding","wenzhou","xian","shenzhen","suzhou","nanjing","dongguan","quanzhou","mumbai","bombay","madras","calcutta","delhi","chennai","bangalore","hyderabad","lahore","islamabad","peshawar","multan","_04OldZones","cuba","egypt","eire","gb","gmt0","greenwich","hongkong","iceland","iran","israel","jamaica","japan","kwajalein","libya","nz","navajo","prc","poland","portugal","roc","rok","universal","zulu","z","gmt","singapore","uct","utc","est","mst","hst","_07Parentheses","casey","davis","mawson","palmer","rothera","syowa","troll","vostok","victoria","pernambuco","tocantins","bahia","rondônia","roraima","acre","kosrae","bougainville","azores","ruthenia","informal","_06Abbreviations","_05Metazones","standard","name","abbrev","daylight","alias","pick","_03ByCountry","andorra","code","choice","oman","afghanistan","albania","armenia","nigeria","austria","finland","azerbaijan","slovenia","barbados","bangladesh","belgium","togo","bulgaria","qatar","zimbabwe","bermuda","brunei","bolivia","bahamas","bhutan","belarus","belize","liechtenstein","colombia","slovakia","mayotte","denmark","algeria","estonia","fiji","france","jersey","georgia","ghana","gibraltar","greece","guatemala","guyana","honduras","haiti","hungary","ireland","india","iraq","jordan","kyrgyzstan","yemen","panama","lebanon","liberia","lithuania","luxembourg","latvia","morocco","monaco","moldova","myanmar","burma","macau","martinique","malta","mauritius","maldives","namibia","nicaragua","netherlands","nepal","nauru","niue","peru","philippines","pakistan","pitcairn","palau","paraguay","romania","seychelles","sudan","sweden","suriname","syria","chad","tajikistan","tokelau","turkmenistan","tunisia","tonga","turkey","tuvalu","taiwan","uruguay","venezuela","vanuatu","samoa","antarctica","argentina","australia","brazil","canada","congo","chile","china","cyprus","germany","ecuador","spain","micronesia","greenland","indonesia","kiribati","kazakhstan","mongolia","mexico","malaysia","palestine","russia","ukraine","uzbekistan","vietnam","all","assign","key","obj","zone","arr","filter","a","abbr","hasOwnProperty","data","isOffset","isNumber","utcOffset","gmtOffset","toIana","num","Number","parseOffset","tz","m","match","parseOffset_1","normalizeOne","trim","normalizeTwo","normalizeThree","find","test","etc","tmp","find_1","display","meta","display_1","_version","src","version","src_1","src_2","src_3"],"mappings":"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","sourcesContent":["var iana = {\n  Africa: ['Abidjan', 'Accra', 'Addis_Ababa', 'Algiers', 'Asmara', 'Asmera', 'Bamako', 'Bangui', 'Banjul', 'Bissau', 'Blantyre', 'Brazzaville', 'Bujumbura', 'Cairo', 'Casablanca', 'Ceuta', 'Conakry', 'Dakar', 'Dar_Es_Salaam', 'Djibouti', 'Douala', 'El_Aaiun', 'Freetown', 'Gaborone', 'Harare', 'Johannesburg', 'Juba', 'Kampala', 'Khartoum', 'Kigali', 'Kinshasa', 'Lagos', 'Libreville', 'Lome', 'Luanda', 'Lubumbashi', 'Lusaka', 'Malabo', 'Maputo', 'Maseru', 'Mbabane', 'Mogadishu', 'Monrovia', 'Nairobi', 'Ndjamena', 'Niamey', 'Nouakchott', 'Ouagadougou', 'Porto-novo', 'Sao_Tome', 'Timbuktu', 'Tripoli', 'Tunis', 'Windhoek'],\n  America: ['Adak', 'Anchorage', 'Anguilla', 'Antigua', 'Araguaina', 'Argentina', 'Aruba', 'Asuncion', 'Atikokan', 'Atka', 'Bahia', 'Bahia_Banderas', 'Barbados', 'Belem', 'Belize', 'Blanc-sablon', 'Boa_Vista', 'Bogota', 'Boise', 'Buenos_Aires', 'Cambridge_Bay', 'Campo_Grande', 'Cancun', 'Caracas', 'Catamarca', 'Cayenne', 'Cayman', 'Chicago', 'Chihuahua', 'Coral_Harbour', 'Cordoba', 'Costa_Rica', 'Creston', 'Cuiaba', 'Curacao', 'Danmarkshavn', 'Dawson', 'Dawson_Creek', 'Denver', 'Detroit', 'Dominica', 'Edmonton', 'Eirunepe', 'El_Salvador', 'Ensenada', 'Fort_Wayne', 'Fortaleza', 'Glace_Bay', 'Godthab', 'Goose_Bay', 'Grand_Turk', 'Grenada', 'Guadeloupe', 'Guatemala', 'Guayaquil', 'Guyana', 'Halifax', 'Havana', 'Hermosillo', 'Indiana', 'Indianapolis', 'Inuvik', 'Iqaluit', 'Jamaica', 'Jujuy', 'Juneau', 'Kentucky', 'Knox_In', 'Kralendijk', 'La_Paz', 'Lima', 'Los_Angeles', 'Louisville', 'Lower_Princes', 'Maceio', 'Managua', 'Manaus', 'Marigot', 'Martinique', 'Matamoros', 'Mazatlan', 'Mendoza', 'Menominee', 'Merida', 'Metlakatla', 'Mexico_City', 'Miquelon', 'Moncton', 'Monterrey', 'Montevideo', 'Montreal', 'Montserrat', 'Nassau', 'New_York', 'Nipigon', 'Nome', 'Noronha', 'North_Dakota', 'Ojinaga', 'Panama', 'Pangnirtung', 'Paramaribo', 'Phoenix', 'Port-au-prince', 'Port_Of_Spain', 'Porto_Acre', 'Porto_Velho', 'Puerto_Rico', 'Punta_Arenas', 'Rainy_River', 'Rankin_Inlet', 'Recife', 'Regina', 'Resolute', 'Rio_Branco', 'Rosario', 'Santa_Isabel', 'Santarem', 'Santiago', 'Santo_Domingo', 'Sao_Paulo', 'Scoresbysund', 'Shiprock', 'Sitka', 'St_Barthelemy', 'St_Johns', 'St_Kitts', 'St_Lucia', 'St_Thomas', 'St_Vincent', 'Swift_Current', 'Tegucigalpa', 'Thule', 'Thunder_Bay', 'Tijuana', 'Toronto', 'Tortola', 'Vancouver', 'Virgin', 'Whitehorse', 'Winnipeg', 'Yakutat', 'Yellowknife'],\n  Antarctica: ['Casey', 'Davis', 'Dumontdurville', 'Macquarie', 'Mawson', 'Mcmurdo', 'Palmer', 'Rothera', 'South_Pole', 'Syowa', 'Troll', 'Vostok'],\n  Arctic: ['Longyearbyen'],\n  Asia: ['Aden', 'Almaty', 'Amman', 'Anadyr', 'Aqtau', 'Aqtobe', 'Ashgabat', 'Ashkhabad', 'Atyrau', 'Baghdad', 'Bahrain', 'Baku', 'Bangkok', 'Barnaul', 'Beirut', 'Bishkek', 'Brunei', 'Calcutta', 'Chita', 'Choibalsan', 'Chongqing', 'Chungking', 'Colombo', 'Dacca', 'Damascus', 'Dhaka', 'Dili', 'Dubai', 'Dushanbe', 'Gaza', 'Harbin', 'Hebron', 'Ho_Chi_Minh', 'Hong_Kong', 'Hovd', 'Irkutsk', 'Istanbul', 'Jakarta', 'Jayapura', 'Jerusalem', 'Kabul', 'Kamchatka', 'Karachi', 'Kashgar', 'Kathmandu', 'Katmandu', 'Khandyga', 'Kolkata', 'Krasnoyarsk', 'Kuala_Lumpur', 'Kuching', 'Kuwait', 'Macao', 'Macau', 'Magadan', 'Makassar', 'Manila', 'Muscat', 'Nicosia', 'Novokuznetsk', 'Novosibirsk', 'Omsk', 'Oral', 'Phnom_Penh', 'Pontianak', 'Pyongyang', 'Qatar', 'Qyzylorda', 'Rangoon', 'Riyadh', 'Saigon', 'Sakhalin', 'Samarkand', 'Seoul', 'Shanghai', 'Singapore', 'Srednekolymsk', 'Taipei', 'Tashkent', 'Tbilisi', 'Tehran', 'Tel_Aviv', 'Thimbu', 'Thimphu', 'Tokyo', 'Tomsk', 'Ujung_Pandang', 'Ulaanbaatar', 'Ulan_Bator', 'Urumqi', 'Ust-nera', 'Vientiane', 'Vladivostok', 'Yakutsk', 'Yekaterinburg', 'Yerevan', 'Volgograd'],\n  Atlantic: ['Azores', 'Bermuda', 'Canary', 'Cape_Verde', 'Faeroe', 'Faroe', 'Jan_Mayen', 'Madeira', 'Reykjavik', 'South_Georgia', 'St_Helena', 'Stanley'],\n  Australia: ['Act', 'Adelaide', 'Brisbane', 'Broken_Hill', 'Canberra', 'Currie', 'Darwin', 'Eucla', 'Hobart', 'Lhi', 'Lindeman', 'Lord_Howe', 'Melbourne', 'Nsw', 'North', 'Perth', 'Queensland', 'South', 'Sydney', 'Tasmania', 'Victoria', 'West', 'Yancowinna'],\n  Brazil: ['Acre', 'Denoronha', 'East', 'West'],\n  Canada: ['Atlantic', 'Central', 'East-saskatchewan', 'Eastern', 'Mountain', 'Newfoundland', 'Pacific', 'Saskatchewan', 'Yukon'],\n  Chile: ['Continental', 'EasterIsland'],\n  Europe: ['Amsterdam', 'Andorra', 'Astrakhan', 'Athens', 'Belfast', 'Belgrade', 'Berlin', 'Bratislava', 'Brussels', 'Bucharest', 'Budapest', 'Busingen', 'Chisinau', 'Copenhagen', 'Dublin', 'Gibraltar', 'Guernsey', 'Helsinki', 'Isle_Of_Man', 'Istanbul', 'Jersey', 'Kaliningrad', 'Kirov', 'Kiev', 'Lisbon', 'Ljubljana', 'London', 'Luxembourg', 'Madrid', 'Malta', 'Mariehamn', 'Minsk', 'Monaco', 'Moscow', 'Nicosia', 'Oslo', 'Paris', 'Podgorica', 'Prague', 'Riga', 'Rome', 'Samara', 'Saratov', 'San_Marino', 'Sarajevo', 'Simferopol', 'Skopje', 'Sofia', 'Stockholm', 'Tallinn', 'Tirane', 'Tiraspol', 'Ulyanovsk', 'Uzhgorod', 'Vaduz', 'Vatican', 'Vienna', 'Vilnius', 'Volgograd', 'Warsaw', 'Zagreb', 'Zaporozhye', 'Zurich'],\n  Indian: ['Antananarivo', 'Chagos', 'Christmas', 'Cocos', 'Comoro', 'Kerguelen', 'Mahe', 'Maldives', 'Mauritius', 'Mayotte', 'Reunion'],\n  Mexico: ['Bajanorte', 'Bajasur', 'General'],\n  Pacific: ['Apia', 'Auckland', 'Bougainville', 'Chatham', 'Chuuk', 'Easter', 'Efate', 'Enderbury', 'Fakaofo', 'Fiji', 'Funafuti', 'Galapagos', 'Gambier', 'Guadalcanal', 'Guam', 'Honolulu', 'Johnston', 'Kiritimati', 'Kosrae', 'Kwajalein', 'Majuro', 'Marquesas', 'Midway', 'Nauru', 'Niue', 'Norfolk', 'Noumea', 'Pago_Pago', 'Palau', 'Pitcairn', 'Pohnpei', 'Ponape', 'Port_Moresby', 'Rarotonga', 'Saipan', 'Samoa', 'Tahiti', 'Tarawa', 'Tongatapu', 'Truk', 'Wake', 'Wallis', 'Yap'],\n  ETC: ['GMT', 'GMT+0', 'GMT-0', 'GMT0', 'Greenwich', 'UTC', 'Universal', 'Zulu']\n};\nvar ignore = {\n  east: true,\n  west: true\n};\nvar zones = {};\nObject.keys(iana).forEach(function (k) {\n  iana[k].forEach(function (str) {\n    var id = k + '/' + str;\n    zones[id.toLowerCase()] = id;\n\n    if (!ignore[str]) {\n      str = str.toLowerCase();\n      str = str.replace(/[_-]/g, ' ');\n      zones[str] = id;\n    }\n  });\n});\nvar _01Iana = zones;\n\n// some notable cities without their own timezone\nvar _02ByCity = {\n  //America\n  'san fransisco': 'America/Los_Angeles',\n  //Canada\n  ottawa: 'America/Toronto',\n  montreal: 'America/Toronto',\n  // china\n  chongqing: 'Asia/Shanghai',\n  beijing: 'Asia/Shanghai',\n  chengdu: 'Asia/Shanghai',\n  guangzhou: 'Asia/Shanghai',\n  tianjin: 'Asia/Shanghai',\n  baoding: 'Asia/Shanghai',\n  wenzhou: 'Asia/Shanghai',\n  xian: 'Asia/Shanghai',\n  shenzhen: 'Asia/Shanghai',\n  suzhou: 'Asia/Shanghai',\n  nanjing: 'Asia/Shanghai',\n  dongguan: 'Asia/Shanghai',\n  quanzhou: 'Asia/Shanghai',\n  'hong kong': 'Asia/Shanghai',\n  // india\n  mumbai: 'Asia/Kolkata',\n  bombay: 'Asia/Kolkata',\n  madras: 'Asia/Kolkata',\n  calcutta: 'Asia/Kolkata',\n  'port blair': 'Asia/Kolkata',\n  //Old timezone\n  delhi: 'Asia/Kolkata',\n  chennai: 'Asia/Kolkata',\n  bangalore: 'Asia/Kolkata',\n  hyderabad: 'Asia/Kolkata',\n  // pakistan\n  lahore: 'Asia/Karachi',\n  islamabad: 'Asia/Karachi',\n  peshawar: 'Asia/Karachi',\n  multan: 'Asia/Karachi'\n};\n\n// this file provides links between current names for timezones\n// and their old names.  many names changed in late 1993.\n// from https://Github.com/Eggert/Tz/Blob/Master/Backward\n// and from https://Github.com/Mj1856/Timezonenames\nvar _04OldZones = {\n  'africa/asmera': 'Africa/Nairobi',\n  'africa/timbuktu': 'Africa/Abidjan',\n  'america/argentina/comodrivadavia': 'America/Argentina',\n  'america/atka': 'America/Adak',\n  'america/buenos_aires': 'America/Argentina',\n  'america/argentina/buenos_aires': 'America/Argentina',\n  'america/catamarca': 'America/Argentina',\n  'america/argentina/catamarca': 'America/Argentina',\n  'america/coral_harbour': 'America/Atikokan',\n  'america/cordoba': 'America/Argentina',\n  'america/argentina/cordoba': 'America/Argentina',\n  'america/ensenada': 'America/Tijuana',\n  'america/fort_wayne': 'America/Indiana',\n  'america/indiana/indianapolis': 'America/Indiana',\n  'america/indianapolis': 'America/Indiana',\n  'america/jujuy': 'America/Argentina',\n  'america/knox_in': 'America/Indiana',\n  'america/louisville': 'America/Kentucky',\n  'america/kentucky/louisville': 'America/Kentucky',\n  'america/mendoza': 'America/Argentina',\n  'america/montreal': 'America/Toronto',\n  'america/porto_acre': 'America/Rio_Branco',\n  'america/rosario': 'America/Argentina',\n  'america/santa_isabel': 'America/Tijuana',\n  'america/shiprock': 'America/Denver',\n  'america/virgin': 'America/Port_Of_Spain',\n  'antarctica/south_pole': 'Pacific/Auckland',\n  'asia/ashkhabad': 'Asia/Ashgabat',\n  'asia/calcutta': 'Asia/Kolkata',\n  'asia/chongqing': 'Asia/Shanghai',\n  'asia/chungking': 'Asia/Shanghai',\n  'asia/dacca': 'Asia/Dhaka',\n  'asia/harbin': 'Asia/Shanghai',\n  'asia/kashgar': 'Asia/Urumqi',\n  'asia/katmandu': 'Asia/Kathmandu',\n  'asia/macao': 'Asia/Macau',\n  'asia/rangoon': 'Asia/Yangon',\n  'asia/saigon': 'Asia/Ho_Chi_Minh',\n  'asia/tel_aviv': 'Asia/Jerusalem',\n  'asia/thimbu': 'Asia/Thimphu',\n  'asia/ujung_pandang': 'Asia/Makassar',\n  'asia/ulan_bator': 'Asia/Ulaanbaatar',\n  'atlantic/faeroe': 'atlantic/Faroe',\n  'atlantic/jan_mayen': 'Europe/Oslo',\n  'australia/act': 'Australia/Sydney',\n  'australia/canberra': 'Australia/Sydney',\n  'australia/lhi': 'Australia/Lord_Howe',\n  'australia/nsw': 'Australia/Sydney',\n  'australia/north': 'Australia/Darwin',\n  'australia/queensland': 'Australia/Brisbane',\n  'australia/south': 'Australia/Adelaide',\n  'australia/tasmania': 'Australia/Hobart',\n  'australia/victoria': 'Australia/Melbourne',\n  'australia/west': 'Australia/Perth',\n  'australia/yancowinna': 'Australia/Broken_Hill',\n  'brazil/acre': 'America/Rio_Branco',\n  'brazil/denoronha': 'America/Noronha',\n  'brazil/east': 'America/Sao_Paulo',\n  'brazil/west': 'America/Manaus',\n  'canada/atlantic': 'America/Halifax',\n  'canada/central': 'America/Winnipeg',\n  'canada/east-saskatchewan': 'America/Regina',\n  'canada/eastern': 'America/Toronto',\n  'canada/mountain': 'America/Edmonton',\n  'canada/newfoundland': 'America/St_Johns',\n  'canada/pacific': 'America/Vancouver',\n  'canada/saskatchewan': 'America/Regina',\n  'canada/yukon': 'America/Whitehorse',\n  'chile/continental': 'America/Santiago',\n  'chile/easterisland': 'Pacific/Easter',\n  cuba: 'America/Havana',\n  egypt: 'Africa/Cairo',\n  eire: 'Europe/Dublin',\n  'europe/belfast': 'Europe/London',\n  'europe/tiraspol': 'Europe/Chisinau',\n  gb: 'Europe/London',\n  'gb-eire': 'Europe/London',\n  'gmt+0': 'etc/Gmt',\n  'gmt-0': 'etc/Gmt',\n  gmt0: 'etc/Gmt',\n  greenwich: 'etc/Gmt',\n  hongkong: 'Asia/Hong_Kong',\n  iceland: 'atlantic/Reykjavik',\n  iran: 'Asia/Tehran',\n  israel: 'Asia/Jerusalem',\n  jamaica: 'America/Jamaica',\n  japan: 'Asia/Tokyo',\n  kwajalein: 'Pacific/Kwajalein',\n  libya: 'Africa/Tripoli',\n  'mexico/bajanorte': 'America/Tijuana',\n  'mexico/bajasur': 'America/Mazatlan',\n  'mexico/general': 'America/Mexico_City',\n  nz: 'Pacific/Auckland',\n  'nz-chat': 'Pacific/Chatham',\n  navajo: 'America/Denver',\n  prc: 'Asia/Shanghai',\n  'pacific/johnston': 'Pacific/Honolulu',\n  'pacific/ponape': 'Pacific/Pohnpei',\n  'pacific/samoa': 'Pacific/Pago_Pago',\n  'pacific/truk': 'Pacific/Chuuk',\n  'pacific/yap': 'Pacific/Chuuk',\n  poland: 'Europe/Warsaw',\n  portugal: 'Europe/Lisbon',\n  roc: 'Asia/Taipei',\n  rok: 'Asia/Seoul',\n  'us/alaska': 'America/Anchorage',\n  'us/aleutian': 'America/Adak',\n  'us/arizona': 'America/Phoenix',\n  'us/central': 'America/Chicago',\n  'us/east-indiana': 'America/Indiana',\n  'us/eastern': 'America/New_York',\n  'us/hawaii': 'Pacific/Honolulu',\n  'us/indiana-starke': 'America/Indiana',\n  'america/indiana/knox': 'America/Indiana',\n  'us/michigan': 'America/Detroit',\n  'us/mountain': 'America/Denver',\n  'us/pacific': 'America/Los_Angeles',\n  'us/samoa': 'Pacific/Pago_Pago',\n  universal: 'etc/Utc',\n  'w-su': 'Europe/Moscow',\n  zulu: 'Etc/Utc',\n  z: 'Etc/Utc',\n  'america/argentina/jujuy': 'America/Jujuy',\n  'america/argentina/mendoza': 'America/Mendoza',\n  'america/atikokan': 'America/Coral_Harbour',\n  'europe/nicosia': 'Asia/Nicosia',\n  'africa/asmara': 'Africa/Asmera',\n  'pacific/pohnpei': 'Pacific/Ponape',\n  'pacific/chuuk': 'Pacific/Truk',\n  'atlantic/faroe': 'atlantic/Faeroe',\n  'asia/kolkata': 'Asia/Calcutta',\n  'asia/yangon': 'Asia/Rangoon',\n  'asia/kathmandu': 'Asia/Katmandu',\n  'asia/ho_chi_minh': 'Asia/Saigon',\n  'asia/istanbul': 'Europe/Istanbul',\n  'etc/gmt+0': 'Etc/Gmt',\n  'etc/gmt-0': 'Etc/Gmt',\n  'etc/gmt0': 'Etc/Gmt',\n  'etc/greenwich': 'etc/Gmt',\n  'etc/uct': 'Etc/Utc',\n  'etc/universal': 'Etc/Utc',\n  'etc/zulu': 'Etc/Utc',\n  gmt: 'etc/Gmt',\n  singapore: 'Asia/Singapore',\n  'easter island': 'Chile/EasterIsland',\n  'us/pacific-new': 'America/Los_Angeles',\n  uct: 'Etc/Utc',\n  utc: 'Etc/Utc',\n  est: 'Etc/Gmt+5',\n  mst: 'Etc/Gmt+7',\n  hst: 'Etc/Gmt+10'\n};\n\nvar _07Parentheses = {\n  'west africa time': 'Africa/Lagos',\n  casey: 'Antarctica/Casey',\n  davis: 'Antarctica/Davis',\n  \"dumont-d'urville\": 'Antarctica/DumontDUrville',\n  mawson: 'Antarctica/Mawson',\n  palmer: 'Antarctica/Palmer',\n  rothera: 'Antarctica/Rothera',\n  syowa: 'Antarctica/Syowa',\n  troll: 'Antarctica/Troll',\n  vostok: 'Antarctica/Vostok',\n  'new zealand time': 'Pacific/Auckland',\n  'buenos aires (ba, cf)': 'America/Argentina',\n  'argentina (most areas: cb, cc, cn, er, fm, mn, se, sf)': 'America/Argentina',\n  'salta (sa, lp, nq, rn)': 'America/Argentina',\n  'jujuy (jy)': 'America/Argentina',\n  'tucumán (tm)': 'America/Argentina',\n  'catamarca (ct); chubut (ch)': 'America/Argentina',\n  'la rioja (lr)': 'America/Argentina',\n  'san juan (sj)': 'America/Argentina',\n  'mendoza (mz)': 'America/Argentina',\n  'san luis (sl)': 'America/Argentina',\n  'santa cruz (sc)': 'America/Argentina',\n  'tierra del fuego (tf)': 'America/Argentina',\n  'samoa, midway': 'Pacific/Pago_Pago',\n  'lord howe island': 'Australia/Lord_Howe',\n  'macquarie island': 'Antarctica/Macquarie',\n  'tasmania (most areas)': 'Australia/Hobart',\n  'tasmania (king island)': 'Australia/Currie',\n  victoria: 'Australia/Melbourne',\n  'new south wales (most areas)': 'Australia/Sydney',\n  'new south wales (yancowinna)': 'Australia/Broken_Hill',\n  'queensland (most areas)': 'Australia/Brisbane',\n  'queensland (whitsunday islands)': 'Australia/Lindeman',\n  'south australia': 'Australia/Adelaide',\n  'northern territory': 'Australia/Darwin',\n  'western australia (most areas)': 'Australia/Perth',\n  'western australia (eucla)': 'Australia/Eucla',\n  'central africa time': 'Africa/Maputo',\n  'atlantic islands': 'America/Noronha',\n  'pará (east); amapá': 'America/Belem',\n  'brazil (northeast: ma, pi, ce, rn, pb)': 'America/Fortaleza',\n  pernambuco: 'America/Recife',\n  tocantins: 'America/Araguaina',\n  'alagoas, sergipe': 'America/Maceio',\n  bahia: 'America/Bahia',\n  'brazil (southeast: go, df, mg, es, rj, sp, pr, sc, rs)': 'America/Sao_Paulo',\n  'mato grosso do sul': 'America/Campo_Grande',\n  'mato grosso': 'America/Cuiaba',\n  'pará (west)': 'America/Santarem',\n  rondônia: 'America/Porto_Velho',\n  roraima: 'America/Boa_Vista',\n  'amazonas (east)': 'America/Manaus',\n  'amazonas (west)': 'America/Eirunepe',\n  acre: 'America/Rio_Branco',\n  'newfoundland; labrador (southeast)': 'America/St_Johns',\n  'atlantic - ns (most areas); pe': 'America/Halifax',\n  'atlantic - ns (cape breton)': 'America/Glace_Bay',\n  'atlantic - new brunswick': 'America/Moncton',\n  'atlantic - labrador (most areas)': 'America/Goose_Bay',\n  'ast - qc (lower north shore)': 'America/Blanc-Sablon',\n  'eastern - on, qc (most areas)': 'America/Toronto',\n  'eastern - on, qc (no dst 1967-73)': 'America/Nipigon',\n  'eastern - on (thunder bay)': 'America/Thunder_Bay',\n  'eastern - nu (most east areas)': 'America/Iqaluit',\n  'eastern - nu (pangnirtung)': 'America/Pangnirtung',\n  'est - on (atikokan); nu (coral h)': 'America/Atikokan',\n  'central - on (west); manitoba': 'America/Winnipeg',\n  'central - on (rainy r, ft frances)': 'America/Rainy_River',\n  'central - nu (resolute)': 'America/Resolute',\n  'central - nu (central)': 'America/Rankin_Inlet',\n  'cst - sk (most areas)': 'America/Regina',\n  'cst - sk (midwest)': 'America/Swift_Current',\n  'mountain - ab; bc (e); sk (w)': 'America/Edmonton',\n  'mountain - nu (west)': 'America/Cambridge_Bay',\n  'mountain - nt (central)': 'America/Yellowknife',\n  'mountain - nt (west)': 'America/Inuvik',\n  'mst - bc (creston)': 'America/Creston',\n  'mst - bc (dawson cr, ft st john)': 'America/Dawson_Creek',\n  'mst - bc (ft nelson)': 'America/Fort_Nelson',\n  'pacific - bc (most areas)': 'America/Vancouver',\n  'pacific - yukon (south)': 'America/Whitehorse',\n  'pacific - yukon (north)': 'America/Dawson',\n  'swiss time': 'Europe/Zurich',\n  'chile (most areas)': 'America/Santiago',\n  'region of magallanes': 'America/Punta_Arenas',\n  'easter island': 'Chile/EasterIsland',\n  'beijing time': 'Asia/Shanghai',\n  'xinjiang time': 'Asia/Urumqi',\n  'cyprus (most areas)': 'Asia/Nicosia',\n  'northern cyprus': 'Asia/Famagusta',\n  'germany (most areas)': 'Europe/Berlin',\n  'ecuador (mainland)': 'America/Guayaquil',\n  'galápagos islands': 'Pacific/Galapagos',\n  'spain (mainland)': 'Europe/Madrid',\n  'ceuta, melilla': 'Africa/Ceuta',\n  'canary islands': 'Atlantic/Canary',\n  'chuuk/truk, yap': 'Pacific/Chuuk',\n  'pohnpei/ponape': 'Pacific/Pohnpei',\n  kosrae: 'Pacific/Kosrae',\n  'greenland (most areas)': 'America/Godthab',\n  'national park (east coast)': 'America/Danmarkshavn',\n  'scoresbysund/ittoqqortoormiit': 'America/Scoresbysund',\n  'thule/pituffik': 'America/Thule',\n  'java, sumatra': 'Asia/Jakarta',\n  'borneo (west, central)': 'Asia/Pontianak',\n  'borneo (east, south); sulawesi/celebes, bali, nusa tengarra; timor (west)': 'Asia/Makassar',\n  'new guinea (west papua / irian jaya); malukus/moluccas': 'Asia/Jayapura',\n  'indochina (most areas)': 'Asia/Bangkok',\n  'gilbert islands': 'Pacific/Tarawa',\n  'phoenix islands': 'Pacific/Enderbury',\n  'line islands': 'Pacific/Kiritimati',\n  'kazakhstan (most areas)': 'Asia/Almaty',\n  'qyzylorda/kyzylorda/kzyl-orda': 'Asia/Qyzylorda',\n  'aqtöbe/aktobe': 'Asia/Aqtobe',\n  'mangghystaū/mankistau': 'Asia/Aqtau',\n  \"atyraū/atirau/gur'yev\": 'Asia/Atyrau',\n  'west kazakhstan': 'Asia/Oral',\n  'marshall islands (most areas)': 'Pacific/Majuro',\n  kwajalein: 'Pacific/Kwajalein',\n  'mongolia (most areas)': 'Asia/Ulaanbaatar',\n  'bayan-ölgii, govi-altai, hovd, uvs, zavkhan': 'Asia/Hovd',\n  'dornod, sükhbaatar': 'Asia/Choibalsan',\n  'central time': 'America/Mexico_City',\n  'eastern standard time - quintana roo': 'America/Cancun',\n  'central time - campeche, yucatán': 'America/Merida',\n  'central time - durango; coahuila, nuevo león, tamaulipas (most areas)': 'America/Monterrey',\n  'central time us - coahuila, nuevo león, tamaulipas (us border)': 'America/Matamoros',\n  'mountain time - baja california sur, nayarit, sinaloa': 'America/Mazatlan',\n  'mountain time - chihuahua (most areas)': 'America/Chihuahua',\n  'mountain time us - chihuahua (us border)': 'America/Ojinaga',\n  'mountain standard time - sonora': 'America/Hermosillo',\n  'pacific time us - baja california': 'America/Tijuana',\n  'central time - bahía de banderas': 'America/Bahia_Banderas',\n  'malaysia (peninsula)': 'Asia/Kuala_Lumpur',\n  'sabah, sarawak': 'Asia/Kuching',\n  'chatham islands': 'Pacific/Chatham',\n  'society islands': 'Pacific/Tahiti',\n  'marquesas islands': 'Pacific/Marquesas',\n  'gambier islands': 'Pacific/Gambier',\n  'papua new guinea (most areas)': 'Pacific/Port_Moresby',\n  bougainville: 'Pacific/Bougainville',\n  'gaza strip': 'Asia/Gaza',\n  'west bank': 'Asia/Hebron',\n  'portugal (mainland)': 'Europe/Lisbon',\n  'madeira islands': 'Atlantic/Madeira',\n  azores: 'Atlantic/Azores',\n  'réunion, crozet, scattered islands': 'Indian/Reunion',\n  'msk-01 - kaliningrad': 'Europe/Kaliningrad',\n  'msk+00 - moscow area': 'Europe/Moscow',\n  'msk+00 - crimea': 'Europe/Simferopol',\n  'msk+00 - volgograd': 'Europe/Volgograd',\n  'msk+00 - kirov': 'Europe/Kirov',\n  'msk+01 - astrakhan': 'Europe/Astrakhan',\n  'msk+01 - saratov': 'Europe/Saratov',\n  'msk+01 - ulyanovsk': 'Europe/Ulyanovsk',\n  'msk+01 - samara, udmurtia': 'Europe/Samara',\n  'msk+02 - urals': 'Asia/Yekaterinburg',\n  'msk+03 - omsk': 'Asia/Omsk',\n  'msk+04 - novosibirsk': 'Asia/Novosibirsk',\n  'msk+04 - altai': 'Asia/Barnaul',\n  'msk+04 - tomsk': 'Asia/Tomsk',\n  'msk+04 - kemerovo': 'Asia/Novokuznetsk',\n  'msk+04 - krasnoyarsk area': 'Asia/Krasnoyarsk',\n  'msk+05 - irkutsk, buryatia': 'Asia/Irkutsk',\n  'msk+06 - zabaykalsky': 'Asia/Chita',\n  'msk+06 - lena river': 'Asia/Yakutsk',\n  'msk+06 - tomponsky, ust-maysky': 'Asia/Khandyga',\n  'msk+07 - amur river': 'Asia/Vladivostok',\n  'msk+07 - oymyakonsky': 'Asia/Ust-Nera',\n  'msk+08 - magadan': 'Asia/Magadan',\n  'msk+08 - sakhalin island': 'Asia/Sakhalin',\n  'msk+08 - sakha (e); north kuril is': 'Asia/Srednekolymsk',\n  'msk+09 - kamchatka': 'Asia/Kamchatka',\n  'msk+09 - bering sea': 'Asia/Anadyr',\n  'kerguelen, st paul island, amsterdam island': 'Indian/Kerguelen',\n  'ukraine (most areas)': 'Europe/Kiev',\n  ruthenia: 'Europe/Uzhgorod',\n  \"zaporozh'ye/zaporizhia; lugansk/luhansk (east)\": 'Europe/Zaporozhye',\n  'wake island': 'Pacific/Wake',\n  'eastern (most areas)': 'America/New_York',\n  'eastern - mi (most areas)': 'America/Detroit',\n  'eastern - ky (louisville area)': 'America/Kentucky',\n  'eastern - ky (wayne)': 'America/Kentucky',\n  'eastern - in (most areas)': 'America/Indiana',\n  'eastern - in (da, du, k, mn)': 'America/Indiana',\n  'eastern - in (pulaski)': 'America/Indiana',\n  'eastern - in (crawford)': 'America/Indiana',\n  'eastern - in (pike)': 'America/Indiana',\n  'eastern - in (switzerland)': 'America/Indiana',\n  'central (most areas)': 'America/Chicago',\n  'central - in (perry)': 'America/Indiana',\n  'central - in (starke)': 'America/Indiana',\n  'central - mi (wisconsin border)': 'America/Menominee',\n  'central - nd (oliver)': 'America/North_Dakota',\n  'central - nd (morton rural)': 'America/North_Dakota',\n  'central - nd (mercer)': 'America/North_Dakota',\n  'mountain (most areas)': 'America/Denver',\n  'mountain - id (south); or (east)': 'America/Boise',\n  'mst - arizona (except navajo)': 'America/Phoenix',\n  'alaska (most areas)': 'America/Anchorage',\n  'alaska - juneau area': 'America/Juneau',\n  'alaska - sitka area': 'America/Sitka',\n  'alaska - annette island': 'America/Metlakatla',\n  'alaska - yakutat': 'America/Yakutat',\n  'alaska (west)': 'America/Nome',\n  'aleutian islands': 'America/Adak',\n  'uzbekistan (west)': 'Asia/Samarkand',\n  'uzbekistan (east)': 'Asia/Tashkent',\n  'vietnam (south)': 'Asia/Ho_Chi_Minh'\n};\n\n// this is a very rough list of informal and abbreviated timezones\n// i am not an expert, or even half-knowledgeable in this subject.\n// please help.\n// partially from: https://En.wikipedia.org/Wiki/List_Of_Time_Zone_Abbreviations\n//Format:  'best/Iana': [standard, daylight, alias...]\nvar informal = {\n  //North america\n  'America/Halifax': ['ast', 'adt', 'atlantic'],\n  //Or 'arabia standard time'\n  'America/New_York': ['est', 'edt', 'eastern'],\n  //Or 'Ecuador Time'\n  'America/Chicago': ['cst', 'cdt', 'central'],\n  'America/Denver': ['mst', 'mdt', 'mountain'],\n  'America/Los_Angeles': ['pst', 'pdt', 'pacific'],\n  'America/Anchorage': ['ahst', 'ahdt', 'akst', 'akdt', 'alaska'],\n  //Alaska Standard Time\n  'America/St_Johns': ['nst', 'ndt', 'nt', 'newfoundland', 'nddt'],\n  // awt: 'America/Blanc-sablon',\n  // addt: 'America/Pangnirtung',\n  // apt: 'America/Blanc-sablon',\n  // cddt: 'America/Rankin_Inlet',\n  // cwt: 'America/Mexico_City',\n  // cpt: 'America/Atikokan',\n  // eddt: 'America/Iqaluit',\n  // ept: 'America/Detroit',\n  // ewt: 'America/Detroit',\n  // ect: 'America/Anguilla', //Eastern caribbean time (does not recognise dst)\n  // 'eastern caribbean': 'America/Anguilla',\n  // ffmt: 'America/Martinique',\n  // kmt: 'America/Grand_Turk',\n  // mddt: 'America/Cambridge_Bay',\n  // mpt: 'America/Boise',\n  // mwt: 'America/Phoenix',\n  // nwt: 'America/Adak',\n  // // npt: 'America/Goose_Bay',\n  // pddt: 'America/Inuvik',\n  // ppmt: 'America/Port-au-prince',\n  // ppt: 'America/Dawson_Creek',\n  // pwt: 'America/Dawson_Creek',\n  // qmt: 'America/Guayaquil',\n  // sdmt: 'America/Santo_Domingo',\n  // sjmt: 'America/Costa_Rica',\n  // ydt: 'America/Dawson', //Yukon\n  // ypt: 'America/Dawson',\n  // yddt: 'America/Dawson',\n  // ywt: 'America/Dawson',\n  // yst: 'America/Whitehorse',\n  //South america\n  'America/Caracas': ['vet', null, 'venezuela'],\n  'America/Bogota': ['cot', null, 'colombia'],\n  'America/Cayenne': ['gft', null, 'french guiana'],\n  'America/Paramaribo': ['srt', null, 'suriname'],\n  'America/Guyana': ['gyt'],\n  'America/Buenos_Aires': ['art', null, 'argentina'],\n  'America/La_Paz': ['bot', null, 'bolivia'],\n  'America/Asuncion': ['pyt', 'pyst', 'paraguay'],\n  'America/Santiago': ['clt', 'clst', 'chile'],\n  'America/Lima': ['pet', null, 'peru'],\n  'America/Montevideo': ['uyt', null, 'uruguay'],\n  'Atlantic/Stanley': ['fkst', null, 'falkland island'],\n  //Brazil\n  'America/Manaus': ['amt'],\n  'America/Sao_Paulo': ['brt', 'brst'],\n  'Brazil/Acre': ['act'],\n  // amst: -3, //Amazon summer time (brazil)\n  // fnt: -2, //Fernando de noronha time\n  // pmdt: -2, //Saint pierre and miquelon daylight time\n  // pmst: -3, //Saint pierre and miquelon standard time\n  // rott: -3, //Rothera research station time\n  //Europe\n  'Europe/London': ['gmt', 'bst', 'british'],\n  //Britain is different\n  'ETC/GMT': ['gmt', null, 'greenwich'],\n  'Europe/Lisbon': ['wet', 'west', 'west europe'],\n  //Western europe\n  'Europe/Berlin': ['cet', 'cest', 'central europe', 'middle european', 'met', 'mest'],\n  //Central europe\n  'Europe/Riga': ['eet', 'eest', 'east europe', 'kalt'],\n  //Eastern europe\n  // -- these are old european ones, before the EU, i think:\n  // 'Europe/Minsk': ['feet', 'feest', 'eastern europe'], //Further eastern europe (discontinued)\n  // ace: 'Europe/Dublin',\n  // amt: 'Europe/Amsterdam',\n  // bdst: 'Europe/Gibraltar',\n  // bmt: 'Europe/Brussels',\n  // bst: 'Europe/Gibraltar', //British summer time\n  // 'british summer': 1,\n  // dmt: 'Europe/Dublin',\n  // dft: 1, //Aix-specific equivalent of central european time\n  // cmt: 'Europe/Copenhagen',\n  // // ist: 'Europe/Dublin',\n  // imt: 'Europe/Sofia',\n  // lst: 'Europe/Riga',\n  // pmt: 'Europe/Prague',\n  // rmt: 'Europe/Rome',\n  // set: 'Europe/Stockholm',\n  // wemt: 'Europe/Madrid',\n  // tse: 'Europe/Dublin',\n  // utc: 'etc/Utc', //Coordinated universal time\n  // 'coordinated universal': 'etc/Utc',\n  //Russia\n  'Europe/Moscow': ['msk', null, 'fet', 'mdst', 'msd'],\n  //'further eastern europe'\n  'Europe/Samara': ['samt'],\n  'Asia/Yekaterinburg': ['yekt'],\n  'Asia/Omsk': ['omst'],\n  'Asia/Krasnoyarsk': ['krat'],\n  'Asia/Novosibirsk': ['novt'],\n  'Asia/Irkutsk': ['irkt'],\n  'Asia/Yakutsk': ['yakt'],\n  'Asia/Cladivostok': ['vlat'],\n  'Asia/Magadan': ['magt'],\n  'Asia/Sakhalin': ['sakt'],\n  'Asia/Srednekolymsk': ['sret'],\n  'Asia/Anadyr': ['anat'],\n  'Asia/Kamchatka': ['pett'],\n  //Near-russia\n  'Asia/Tashkent': ['uzt', 'uzbekistan'],\n  //Uzbekistan time\n  'Asia/Bishkek': ['kgt', 'kyrgyzstan'],\n  //Kyrgyzstan time\n  'Antarctica/Vostok': ['vost'],\n  'Asia/Hovd': ['hovt'],\n  'Asia/Ashgabat': ['tmt', null, 'turkmenistan'],\n  // wmt: 'Europe/Warsaw',\n  // 'Europe/Volgograd':['volt']\n  //Africa\n  'Africa/Lagos': ['wat', 'wast', 'west africa'],\n  //West african\n  'Africa/Khartoum': ['cat', null, 'central africa'],\n  'Africa/Nairobi': ['eat', null, 'east africa'],\n  'Atlantic/Cape_Verde': ['cvt'],\n  'Indian/Mauritius': ['mut'],\n  'Indian/Reunion': ['ret'],\n  'Africa/Johannesburg': ['sast', null, 'south africa'],\n  //Atlantic\n  'Atlantic/Azores': ['azot', 'azost', 'hmt'],\n  'America/Godthab': ['wgt', 'wgst', 'west greenland'],\n  'America/Scoresbysund': ['egt', 'egst', 'east greenland'],\n  //Middle-east\n  'Europe/Istanbul': ['trt', null, 'turkey'],\n  'Asia/Tbilisi': ['get', null, 'georgia'],\n  // 'Asia/Yerevan': ['amt', null, 'armenia'], //(sorry!)\n  'Asia/Baku': ['azt', null, 'azerbaijan'],\n  'Asia/Jerusalem': [null, 'idt', 'israel', 'jmt', 'iddt'],\n  //Using ist for india\n  'Asia/Tehran': ['irst', 'irdt', 'iran'],\n  'Asia/Karachi': ['pkt', null, 'pakistan'],\n  'Asia/Kabul': ['aft', null, 'afghanistan'],\n  'Asia/Dushanbe': ['tjt', null, 'tajikistan'],\n  'Asia/Almaty': ['almt', null, 'alma ata'],\n  'Asia/Dubai': ['gst', null, 'gulf'],\n  //India\n  'Asia/Kolkata': ['ist', null, 'india', 'slst'],\n  // 'Asia/Dhaka': ['bst', null, 'bangladesh'], //(sorry)\n  'Asia/Thimbu': ['btt', null, 'bhutan'],\n  'Indian/Maldives': ['mvt'],\n  'Asia/Kathmandu': ['npt', null, 'nepal'],\n  'Indian/Cocos': ['cct', null, 'cocos island'],\n  'Indian/Chagos': ['iot', null, 'indian chagos'],\n  'Indian/Kerguelen': ['tft', null, 'french southern and antarctic'],\n  // biot: 6, //British indian ocean time\n  // iot: 3, //Indian ocean time\n  //Asia\n  'Asia/Shanghai': ['ct', null, 'china', 'hkt'],\n  'Asia/Ulaanbaatar': ['ulat'],\n  'Asia/Seoul': ['kst', null, 'korea'],\n  'Asia/Tokyo': ['jst', null, 'japan'],\n  'Asia/Phnom_Penh': ['ict', null],\n  'Asia/Manila': ['pht', null, 'philippines'],\n  'Asia/Singapore': ['sgt'],\n  // mmt: 'Asia/Colombo',\n  //Australia\n  'Australia/Brisbane': ['aest', 'aedt', 'australian east'],\n  //Australian eastern standard time\n  'Australia/Adelaide': ['acst', 'acdt', 'australian central'],\n  //Australian central daylight savings time\n  'Australia/Eucla': ['acwst', null, 'cwst', 'australian central western'],\n  //Australian central western standard time (unofficial)\n  'Australia/Perth': ['awst', 'awdt', 'australian west'],\n  //Australian western standard time\n  'Pacific/Auckland': ['nzst', 'nzdt', 'nzmt'],\n  'Australia/Lord_Howe': ['lhst', 'lhdt'],\n  //Pacific\n  'Pacific/Guam': ['chst'],\n  'Pacific/Chatham': ['chast', 'chadt'],\n  'Pacific/Honolulu': ['hst'],\n  'Asia/Brunei': ['bnt', null, 'bdt'],\n  'Pacific/Midway': ['sst', null, 'samoa', 'sdt'],\n  'Pacific/Niue': ['nut'],\n  'Pacific/Fakaofo': ['tkt'],\n  'Pacific/Rarotonga': ['ckt', null, 'cook islands'],\n  'Chile/EasterIsland': ['east', 'easst', 'easter island', 'emt'],\n  'Asia/Jayapura': ['wit', null, 'east indonesia'],\n  'Asia/Jakarta': ['wib', null, 'west indonesia'],\n  'Asia/Makassar': ['wita', null, 'central indonesia'],\n  'Pacific/Galapagos': ['galt'],\n  'Pacific/Fiji': ['fjt', 'fjst'],\n  'Asia/Dili': ['tlt', null, 'east timor'],\n  'Indian/Christmas': ['cxt'] // sbt: 11, //Solomon islands time\n  // mht: 12, //Marshall islands time\n  // bit: -12, //Baker island time\n  // cist: -8, //Clipperton island standard time\n  // chut: 10, //Chuuk time\n  // ddut: 10, //Dumont durville time\n  // gst: 'Pacific/Guam',\n  // gamt: -9, //Gambier islands time\n  // git: -9, //Gambier island time\n  // gilt: 12, //Gilbert island time\n  // idlw: -12, //International day line west time zone\n  // 'international day line west': -12,\n  // kost: 11, //Kosrae time\n  // lint: 14, //Line islands time\n  // magt: 12, //Magadan time\n  // mist: 11, //Macquarie island station time\n  // nct: 11, //New caledonia time\n  // nft: 11, //Norfolk island time\n  // phot: 13, //Phoenix island time\n  // pont: 11, //Pohnpei standard time\n  // pett: 12, //Kamchatka time\n  // mart: -9.5, //Marquesas islands time\n  // mit: -9.5, //Marquesas islands time\n  // myt: 8, //Malaysia time\n  // nut: -11, //Niue time\n  // pht: 8, //Philippine time\n  // pgt: 10, //Papua new guinea time\n  // pmmt: 'Pacific/Bougainville',\n  // // smt: 'Asia/Singapore',\n  // sakt: 11, //Sakhalin island time\n  // sret: 11, //Srednekolymsk time\n  // sst: 'Pacific/Pago_Pago',\n  // taht: -10, //Tahiti time\n  // tvt: 12, //Tuvalu time\n  // tkt: 13, //Tokelau time\n  // tot: 13, //Tonga time\n  // vut: 11, //Vanuatu time\n  // wakt: 12, //Wake island time\n  //I forget (sorry!)\n  // haec: 2, //Heure avancée deurope centrale french-language name for cest\n  // syot: 3, //Showa station time\n  // yekt: 5, //Yekaterinburg time\n  // sct: 4, //Seychelles time\n  // orat: 5, //Oral time\n  // mawt: 5, //Mawson station time\n  // hovt: 7, //Khovd standard time\n  // hovst: 8, //Khovd summer time\n  // davt: 7, //Davis time\n  // chost: 9, //Choibalsan summer time\n  // chot: 8, //Choibalsan standard time\n  // wst: 8, //Western standard time\n\n}; //Use each abbreviation as a key\n// const lookup = Object.keys(informal).reduce((h, k) => {\n//   let arr = informal[k]\n//   for (let i = 0; i < 5; i += 1) {\n//     if (arr[i]) {\n//       h[arr[i]] = k\n//     }\n//   }\n//   return h\n// }, {})\n\nvar _06Abbreviations = informal;\n\n//From https://Github.com/Mj1856/Timezonenames\n// and from  https://Github.com/Nodatime/Nodatime/Blob/Master/Data/Cldr/Windowszones-35.xml\nvar _05Metazones = [//gmt-0, with daylight savings\n{\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  daylight: {\n    name: 'British Summer Time',\n    abbrev: 'BST'\n  },\n  alias: ['british', 'britain'],\n  pick: 'Europe/London',\n  zones: ['Europe/Guernsey', 'Europe/Isle_Of_Man', 'Europe/Jersey', 'Europe/London']\n}, {\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  daylight: {\n    name: 'Irish Summer Time',\n    abbrev: 'IST'\n  },\n  alias: ['ireland'],\n  zones: ['Europe/Dublin']\n}, //gmt-0, no daylight savings\n{\n  standard: {\n    name: 'Greenwich Standard Time',\n    abbrev: 'GMT'\n  },\n  pick: 'Africa/Freetown',\n  alias: ['etc', 'utc'],\n  zones: ['Africa/Abidjan', 'Africa/Accra', 'Africa/Bamako', 'Africa/Banjul', 'Africa/Bissau', 'Africa/Conakry', 'Africa/Dakar', 'Africa/Freetown', 'Africa/Lome', 'Africa/Monrovia', 'Africa/Nouakchott', 'Africa/Ouagadougou', 'Africa/Sao_Tome', 'America/Danmarkshavn', 'Antarctica/Troll', 'Atlantic/Reykjavik', 'Atlantic/St_Helena', 'ETC/GMT']\n}, //North america\n{\n  standard: {\n    name: 'Central Standard Time',\n    abbrev: 'CST'\n  },\n  daylight: {\n    name: 'Central Daylight Time',\n    abbrev: 'CDT'\n  },\n  pick: 'America/Chicago',\n  zones: ['America/Bahia_Banderas', 'America/Belize', 'America/Chicago', 'America/Costa_Rica', 'America/El_Salvador', 'America/Guatemala', 'America/Indiana', 'America/Managua', 'America/Matamoros', 'America/Menominee', 'America/Merida', 'America/Mexico_City', 'America/Monterrey', 'America/North_Dakota', 'America/North_Dakota', 'America/North_Dakota', 'America/Rainy_River', 'America/Rankin_Inlet', 'America/Regina', 'America/Resolute', 'America/Swift_Current', 'America/Tegucigalpa', 'America/Winnipeg']\n}, {\n  standard: {\n    name: 'Mountain Standard Time',\n    abbrev: 'MST'\n  },\n  daylight: {\n    name: 'Mountain Daylight Time',\n    abbrev: 'MDT'\n  },\n  pick: 'America/Denver',\n  zones: ['America/Boise', 'America/Cambridge_Bay', 'America/Creston', 'America/Dawson_Creek', 'America/Denver', 'America/Edmonton', 'America/Fort_Nelson', 'America/Inuvik', 'America/Ojinaga', 'America/Phoenix', 'America/Yellowknife', // add mexico\n  'America/Chihuahua', 'America/Hermosillo', 'America/Mazatlan']\n}, {\n  standard: {\n    name: 'Atlantic Standard Time',\n    abbrev: 'AST'\n  },\n  daylight: {\n    name: 'Atlantic Daylight Time',\n    abbrev: 'ADT'\n  },\n  pick: 'America/Halifax',\n  zones: ['America/Anguilla', 'America/Antigua', 'America/Aruba', 'America/Barbados', 'America/Blanc-sablon', 'America/Curacao', 'America/Dominica', 'America/Glace_Bay', 'America/Goose_Bay', 'America/Grenada', 'America/Guadeloupe', 'America/Halifax', 'America/Kralendijk', 'America/Lower_Princes', 'America/Marigot', 'America/Martinique', 'America/Moncton', 'America/Montserrat', 'America/Port_Of_Spain', 'America/Puerto_Rico', 'America/Santo_Domingo', 'America/St_Barthelemy', 'America/St_Kitts', 'America/St_Lucia', 'America/St_Thomas', 'America/St_Vincent', 'America/Thule', 'America/Tortola', 'Atlantic/Bermuda']\n}, {\n  standard: {\n    name: 'Eastern Standard Time',\n    abbrev: 'EST'\n  },\n  daylight: {\n    name: 'Eastern Daylight Time',\n    abbrev: 'EDT'\n  },\n  pick: 'America/New_York',\n  zones: ['America/Cancun', 'America/Cayman', 'America/Coral_Harbour', 'America/Detroit', 'America/Grand_Turk', 'America/Indiana', 'America/Indianapolis', 'America/Iqaluit', 'America/Jamaica', 'America/Kentucky', 'America/Louisville', 'America/Nassau', 'America/New_York', 'America/Nipigon', 'America/Panama', 'America/Pangnirtung', 'America/Port-au-prince', 'America/Thunder_Bay', 'America/Toronto', 'America/Montreal']\n}, {\n  standard: {\n    name: 'Pacific Standard Time',\n    abbrev: 'PST'\n  },\n  daylight: {\n    name: 'Pacific Daylight Time',\n    abbrev: 'PDT'\n  },\n  pick: 'America/Los_Angeles',\n  zones: ['America/Dawson', 'America/Los_Angeles', 'America/Tijuana', 'America/Vancouver', 'America/Whitehorse']\n}, {\n  standard: {\n    name: 'Alaskan Standard Time',\n    abbrev: 'AHST'\n  },\n  daylight: {\n    name: 'Alaskan Daylight Time',\n    abbrev: 'AHDT'\n  },\n  pick: 'America/Anchorage',\n  zones: ['America/Anchorage', 'America/Juneau', 'America/Metlakatla', 'America/Nome', 'America/Sitka', 'America/Yakutat']\n}, {\n  standard: {\n    name: 'Hawaiian Standard Time',\n    abbrev: 'HST'\n  },\n  alias: ['aleutian', 'hawaii'],\n  pick: 'Pacific/Honolulu',\n  zones: ['America/Adak', 'Pacific/Honolulu', 'Pacific/Johnston']\n}, {\n  standard: {\n    name: 'Newfoundland Standard Time',\n    abbrev: 'NST'\n  },\n  daylight: {\n    name: 'Newfoundland Daylight Time',\n    abbrev: 'NDT'\n  },\n  pick: 'America/St_Johns',\n  zones: ['America/St_Johns']\n}, ///Europe\n{\n  standard: {\n    name: 'Central European Time',\n    abbrev: 'CET'\n  },\n  daylight: {\n    name: 'Central European Summer Time',\n    abbrev: 'CEST'\n  },\n  alias: ['romance', 'central europe'],\n  pick: 'Europe/Berlin',\n  zones: ['Africa/Algiers', 'Africa/Ceuta', 'Africa/Tunis', 'arctic/Longyearbyen', 'Europe/Amsterdam', 'Europe/Andorra', 'Europe/Belgrade', 'Europe/Berlin', 'Europe/Bratislava', 'Europe/Brussels', 'Europe/Budapest', 'Europe/Busingen', 'Europe/Copenhagen', 'Europe/Gibraltar', 'Europe/Ljubljana', 'Europe/Luxembourg', 'Europe/Madrid', 'Europe/Malta', 'Europe/Monaco', 'Europe/Oslo', 'Europe/Paris', 'Europe/Podgorica', 'Europe/Prague', 'Europe/Rome', 'Europe/San_Marino', 'Europe/Sarajevo', 'Europe/Skopje', 'Europe/Stockholm', 'Europe/Tirane', 'Europe/Vaduz', 'Europe/Vatican', 'Europe/Vienna', 'Europe/Warsaw', 'Europe/Zagreb', 'Europe/Zurich']\n}, {\n  standard: {\n    name: 'Eastern European Time',\n    abbrev: 'EET'\n  },\n  daylight: {\n    name: 'Eastern European Summer Time',\n    abbrev: 'EEST'\n  },\n  alias: ['eastern europe'],\n  pick: 'Europe/Riga',\n  zones: ['Africa/Cairo', 'Africa/Tripoli', 'Asia/Amman', 'Asia/Beirut', 'Asia/Damascus', 'Asia/Famagusta', 'Asia/Gaza', 'Asia/Hebron', 'Asia/Nicosia', 'Europe/Athens', 'Europe/Bucharest', 'Europe/Chisinau', 'Europe/Helsinki', 'Europe/Kaliningrad', 'Europe/Kiev', 'Europe/Mariehamn', 'Europe/Riga', 'Europe/Sofia', 'Europe/Tallinn', 'Europe/Uzhgorod', 'Europe/Vilnius', 'Europe/Zaporozhye']\n}, {\n  standard: {\n    name: 'Western European Time',\n    abbrev: 'WET'\n  },\n  daylight: {\n    name: 'Western European Summer Time',\n    abbrev: 'WEST'\n  },\n  alias: ['western europe'],\n  pick: 'Europe/Lisbon',\n  zones: ['Africa/Casablanca', 'Africa/El_Aaiun', 'Atlantic/Canary', 'Atlantic/Faeroe', 'Atlantic/Madeira', 'Europe/Lisbon']\n}, {\n  standard: {\n    name: 'Turkey Standard Time',\n    abbrev: 'TRT'\n  },\n  alias: ['turkish'],\n  pick: 'Europe/Istanbul',\n  zones: ['Europe/Istanbul']\n}, // samara: ['Europe/Samara', 'Europe/Saratov'],\n//Africa\n{\n  standard: {\n    name: 'East Africa Time',\n    abbrev: 'EAT'\n  },\n  alias: ['east african', 'eastern africa'],\n  pick: 'Africa/Nairobi',\n  zones: ['Africa/Addis_Ababa', 'Africa/Asmera', 'Africa/Dar_Es_Salaam', 'Africa/Djibouti', 'Africa/Juba', 'Africa/Kampala', 'Africa/Mogadishu', 'Africa/Nairobi', 'Indian/Antananarivo', 'Indian/Comoro', 'Indian/Mayotte']\n}, {\n  standard: {\n    name: 'Central Africa Time',\n    abbrev: 'CAT'\n  },\n  pick: 'Africa/Khartoum',\n  alias: ['central africa'],\n  zones: ['Africa/Blantyre', 'Africa/Bujumbura', 'Africa/Gaborone', 'Africa/Harare', 'Africa/Khartoum', 'Africa/Kigali', 'Africa/Lubumbashi', 'Africa/Lusaka', 'Africa/Maputo', 'Africa/Windhoek']\n}, {\n  standard: {\n    name: 'South Africa Standard Time',\n    abbrev: 'SAST'\n  },\n  alias: ['southern africa', 'south african'],\n  pick: 'Africa/Johannesburg',\n  zones: ['Africa/Johannesburg', 'Africa/Maseru', 'Africa/Mbabane']\n}, {\n  standard: {\n    name: 'West Africa Standard Time',\n    abbrev: 'WAT'\n  },\n  alias: ['western africa', 'west african'],\n  pick: 'Africa/Lagos',\n  zones: ['Africa/Bangui', 'Africa/Brazzaville', 'Africa/Douala', 'Africa/Kinshasa', 'Africa/Lagos', 'Africa/Libreville', 'Africa/Luanda', 'Africa/Malabo', 'Africa/Ndjamena', 'Africa/Niamey', 'Africa/Porto-novo']\n}, //Australia\n{\n  standard: {\n    name: 'Australian Central Standard Time',\n    abbrev: 'ACST'\n  },\n  daylight: {\n    name: 'Australian Central Daylight Time',\n    abbrev: 'ACDT'\n  },\n  alias: ['australia central'],\n  pick: 'Australia/Adelaide',\n  zones: ['Australia/Adelaide', 'Australia/Broken_Hill', 'Australia/Darwin']\n}, {\n  standard: {\n    name: 'Australian Eastern Standard Time',\n    abbrev: 'AEST'\n  },\n  daylight: {\n    name: 'Australian Eastern Daylight Time',\n    abbrev: 'AEDT'\n  },\n  alias: ['australia east'],\n  pick: 'Australia/Brisbane',\n  zones: ['Australia/Brisbane', 'Australia/Currie', 'Australia/Hobart', 'Australia/Lindeman', 'Australia/Melbourne', 'Australia/Sydney']\n}, {\n  standard: {\n    name: 'Australian Western Standard Time',\n    abbrev: 'AWST'\n  },\n  daylight: {\n    name: 'Australian Western Daylight Time',\n    abbrev: 'AWDT'\n  },\n  alias: ['australia west'],\n  pick: 'Australia/Perth',\n  zones: ['Antarctica/Casey', 'Australia/Perth']\n}, {\n  standard: {\n    name: 'Australian Central Western Standard Time',\n    abbrev: 'ACWST'\n  },\n  alias: ['australia central west'],\n  pick: 'Australia/Eucla',\n  zones: ['Australia/Eucla']\n}, {\n  standard: {\n    name: 'Lord Howe Standard Time',\n    abbrev: 'LHST'\n  },\n  daylight: {\n    name: 'Lord Howe Daylight Time',\n    abbrev: 'LHDT'\n  },\n  pick: 'Australia/Lord_Howe',\n  zones: ['Australia/Lord_Howe']\n}, {\n  standard: {\n    name: 'New Zealand Standard Time',\n    abbrev: 'NZST'\n  },\n  daylight: {\n    name: 'New Zealand Daylight Time',\n    abbrev: 'NZDT'\n  },\n  pick: 'Pacific/Auckland',\n  zones: ['Antarctica/Mcmurdo', 'Pacific/Auckland']\n}, {\n  standard: {\n    name: 'Chatham Island Standard Time',\n    abbrev: 'CHAST'\n  },\n  daylight: {\n    name: 'Chatham Island Daylight Time',\n    abbrev: 'CHADT'\n  },\n  pick: 'Pacific/Chatham',\n  zones: ['Pacific/Chatham']\n}, //Russia\n{\n  standard: {\n    name: 'Russian Standard Time',\n    abbrev: 'MSK'\n  },\n  alias: ['russian'],\n  pick: 'Europe/Moscow',\n  zones: ['Europe/Astrakhan', 'Europe/Minsk', 'Europe/Moscow', 'Europe/Simferopol', 'Europe/Ulyanovsk', 'Europe/Kirov']\n}, {\n  standard: {\n    name: 'Volgograd Time',\n    abbrev: 'VOLT'\n  },\n  zones: ['Europe/Volgograd']\n}, //South america\n{\n  standard: {\n    name: 'Brazil Time',\n    abbrev: 'BRT'\n  },\n  alias: ['brasília', 'brasilia', 'brazilian'],\n  pick: 'America/Sao_Paulo',\n  zones: ['America/Araguaina', 'America/Bahia', 'America/Belem', 'America/Fortaleza', 'America/Maceio', 'America/Recife', 'America/Santarem', 'America/Sao_Paulo']\n}, {\n  standard: {\n    name: 'Argentina Time',\n    abbrev: 'ART'\n  },\n  alias: ['argentinian'],\n  pick: 'America/Buenos_Aires',\n  zones: ['America/Argentina', 'America/Buenos_Aires', 'America/Catamarca', 'America/Cordoba', 'America/Jujuy', 'America/Mendoza']\n}, {\n  standard: {\n    name: 'Amazon Time',\n    abbrev: 'AMT'\n  },\n  alias: ['amazonian'],\n  pick: 'America/Manaus',\n  zones: ['America/Boa_Vista', 'America/Campo_Grande', 'America/Cuiaba', //Has dst?\n  'America/Manaus', 'America/Porto_Velho']\n}, {\n  standard: {\n    name: 'Easter Island Standard Time',\n    abbrev: 'EAST'\n  },\n  daylight: {\n    name: 'Easter Island Summer Time',\n    abbrev: 'EASST'\n  },\n  zones: ['Chile/EasterIsland']\n}, {\n  standard: {\n    name: 'Venezuelan Standard Time',\n    abbrev: 'VET'\n  },\n  alias: ['venezuela'],\n  zones: ['America/Caracas']\n}, {\n  standard: {\n    name: 'Paraguay Time',\n    abbrev: 'PYT'\n  },\n  daylight: {\n    name: 'Paraguay Summer Time',\n    abbrev: 'PYST'\n  },\n  zones: ['America/Asuncion']\n}, {\n  standard: {\n    name: 'Cuba Standard Time',\n    abbrev: 'CST'\n  },\n  daylight: {\n    name: 'Cuba Daylight Time',\n    abbrev: 'CDT'\n  },\n  alias: ['cuban'],\n  zones: ['America/Havana']\n}, {\n  standard: {\n    name: 'Bolivia Time',\n    abbrev: 'BOT'\n  },\n  alias: ['bolivian'],\n  zones: ['America/La_Paz']\n}, {\n  standard: {\n    name: 'Colombia Time',\n    abbrev: 'COT'\n  },\n  alias: ['colombian'],\n  zones: ['America/Bogota']\n}, {\n  standard: {\n    name: 'Acre Time',\n    abbrev: 'ACT'\n  },\n  pick: null,\n  zones: ['America/Eirunepe', 'America/Rio_Branco']\n}, {\n  standard: {\n    name: 'Peru Time',\n    abbrev: 'PET'\n  },\n  zones: ['America/Lima']\n}, {\n  standard: {\n    name: 'Chile Standard Time',\n    abbrev: 'CLST'\n  },\n  daylight: {\n    name: 'Chile Summer Time',\n    abbrev: 'CLDT'\n  },\n  pick: null,\n  zones: ['America/Punta_Arenas', 'America/Santiago', 'Antarctica/Palmer']\n}, {\n  standard: {\n    name: 'Uruguay Time',\n    abbrev: 'UYT'\n  },\n  zones: ['America/Montevideo']\n}, // argentina_Western: ['America/Argentina/San_Luis'],\n// french_Guiana: ['America/Cayenne'],\n// greenland_Western: ['America/Godthab'],\n// ecuador: ['America/Guayaquil'],\n// guyana: ['America/Guyana'],\n// pierre_Miquelon: ['America/Miquelon'],\n// noronha: ['America/Noronha'],\n// suriname: ['America/Paramaribo'],\n// mexico_Northwest: ['America/Santa_Isabel'],\n//Middle-east\n{\n  standard: {\n    name: 'Arabic Standard Time',\n    abbrev: 'AST'\n  },\n  pick: 'Asia/Baghdad',\n  alias: ['arabic', 'arab'],\n  zones: ['Asia/Aden', 'Asia/Baghdad', 'Asia/Bahrain', 'Asia/Kuwait', 'Asia/Qatar', 'Asia/Riyadh']\n}, {\n  standard: {\n    name: 'Iran Standard Time',\n    abbrev: 'IRST'\n  },\n  daylight: {\n    name: 'Iran Daylight Time',\n    abbrev: 'IRDT'\n  },\n  alias: ['iranian'],\n  pick: 'Asia/Tehran',\n  zones: ['Asia/Tehran']\n}, {\n  standard: {\n    name: 'Pakistan Standard Time',\n    abbrev: 'PKT'\n  },\n  pick: 'Asia/Karachi',\n  zones: ['Asia/Karachi']\n}, {\n  standard: {\n    name: 'India Standard Time',\n    abbrev: 'IST'\n  },\n  alias: ['indian'],\n  pick: 'Asia/Kolkata',\n  zones: ['Asia/Kolkata', 'Asia/Colombo']\n}, {\n  standard: {\n    name: 'Indochina Time',\n    abbrev: 'ICT'\n  },\n  alias: ['South East Asia'],\n  pick: 'Asia/Bangkok',\n  zones: ['Asia/Bangkok', 'Asia/Phnom_Penh', 'Asia/Saigon', 'Asia/Vientiane']\n}, {\n  standard: {\n    name: 'China Standard Time',\n    abbrev: 'CT'\n  },\n  //cst?\n  alias: ['chinese'],\n  pick: 'Asia/Shanghai',\n  zones: ['Asia/Macau', 'Asia/Shanghai', 'Asia/Taipei']\n}, {\n  standard: {\n    name: 'Alma-Ata Time',\n    abbrev: 'ALMT'\n  },\n  pick: 'Asia/Almaty',\n  zones: ['Asia/Almaty', 'Asia/Qostanay']\n}, {\n  standard: {\n    name: 'Oral Time',\n    abbrev: 'ORAT'\n  },\n  pick: 'Asia/Oral',\n  zones: ['Asia/Aqtau', 'Asia/Aqtobe', 'Asia/Atyrau', 'Asia/Oral', 'Asia/Qyzylorda']\n}, {\n  standard: {\n    name: 'Yakutsk Time',\n    abbrev: 'YAKT'\n  },\n  pick: 'Asia/Yakutsk',\n  zones: ['Asia/Chita', 'Asia/Khandyga', 'Asia/Yakutsk']\n}, {\n  standard: {\n    name: 'Gulf Standard Time',\n    abbrev: 'GST'\n  },\n  pick: 'Asia/Dubai',\n  alias: ['uae'],\n  zones: ['Asia/Dubai', 'Asia/Muscat']\n}, {\n  standard: {\n    name: 'Hong Kong Time',\n    abbrev: 'HKT'\n  },\n  zones: ['Asia/Hong_Kong']\n}, {\n  standard: {\n    name: 'Western Indonesian Time',\n    abbrev: 'WIB'\n  },\n  alias: ['indonesia'],\n  //most of it\n  zones: ['Asia/Jakarta', 'Asia/Pontianak', 'Asia/Jayapura']\n}, {\n  standard: {\n    name: 'Central Indonesian Time',\n    abbrev: 'WITA'\n  },\n  zones: ['Asia/Makassar']\n}, {\n  standard: {\n    name: 'Israel Daylight Time',\n    abbrev: 'IDT'\n  },\n  daylight: {\n    name: 'Israel Standard Time',\n    abbrev: 'IST'\n  },\n  alias: ['israeli'],\n  zones: ['Asia/Jerusalem']\n}, {\n  standard: {\n    name: 'Krasnoyarsk Time',\n    abbrev: 'KRAT'\n  },\n  zones: ['Asia/Krasnoyarsk', 'Asia/Novokuznetsk', 'Asia/Barnaul']\n}, {\n  standard: {\n    name: 'Malaysia Time',\n    abbrev: 'MYT'\n  },\n  zones: ['Asia/Kuala_Lumpur', 'Asia/Kuching']\n}, {\n  standard: {\n    name: 'Singapore Time',\n    abbrev: 'SGT'\n  },\n  zones: ['Asia/Singapore']\n}, {\n  standard: {\n    name: 'Korea Standard Time',\n    abbrev: 'KST'\n  },\n  pick: 'Asia/Seoul',\n  alias: ['korean'],\n  zones: ['Asia/Pyongyang', 'Asia/Seoul']\n}, {\n  standard: {\n    name: 'Uzbekistan Time',\n    abbrev: 'UZT'\n  },\n  zones: ['Asia/Samarkand', 'Asia/Tashkent']\n}, {\n  standard: {\n    name: 'Vladivostok Time',\n    abbrev: 'VLAT'\n  },\n  pick: 'Asia/Vladivostok',\n  zones: ['Asia/Ust-nera', 'Asia/Vladivostok']\n}, {\n  standard: {\n    name: 'Anadyr Time',\n    abbrev: 'ANAT'\n  },\n  zones: ['Asia/Anadyr']\n}, {\n  standard: {\n    name: 'Turkmenistan Time',\n    abbrev: 'TMT'\n  },\n  zones: ['Asia/Ashgabat']\n}, {\n  standard: {\n    name: 'Azerbaijan Time',\n    abbrev: 'AZT'\n  },\n  zones: ['Asia/Baku']\n}, {\n  standard: {\n    name: 'Kyrgyzstan Time',\n    abbrev: 'KGT'\n  },\n  zones: ['Asia/Bishkek']\n}, {\n  standard: {\n    name: 'Brunei Darussalam Time',\n    abbrev: 'BNT'\n  },\n  zones: ['Asia/Brunei']\n}, // choibalsan: ['Asia/Choibalsan'],\n// { standard: { name: 'Bangladesh Standard Time', abbrev: 'BST' }, zones: ['Asia/Dhaka'] },\n// east_Timor: ['Asia/Dili'],\n// tajikistan: ['Asia/Dushanbe'],\n// hovd: ['Asia/Hovd'],\n// irkutsk: ['Asia/Irkutsk'],\n{\n  standard: {\n    name: 'Afghanistan Time',\n    abbrev: 'AFT'\n  },\n  zones: ['Asia/Kabul']\n}, {\n  standard: {\n    name: 'Kamchatka Time',\n    abbrev: 'PETT'\n  },\n  zones: ['Asia/Kamchatka']\n}, {\n  standard: {\n    name: 'Nepal Time',\n    abbrev: 'NPT'\n  },\n  zones: ['Asia/Katmandu']\n}, // magadan: ['Asia/Magadan'],\n{\n  standard: {\n    name: 'Philippine Time',\n    abbrev: 'PHT'\n  },\n  zones: ['Asia/Manila']\n}, // novosibirsk: ['Asia/Novosibirsk'],\n// omsk: ['Asia/Omsk'],\n{\n  standard: {\n    name: 'Myanmar Time',\n    abbrev: 'MMT'\n  },\n  zones: ['Asia/Rangoon']\n}, // sakhalin: ['Asia/Sakhalin'],\n// srednekolymsk: ['Asia/Srednekolymsk'],\n{\n  standard: {\n    name: 'Georgia Standard Time',\n    abbrev: 'GET'\n  },\n  zones: ['Asia/Tbilisi']\n}, // bhutan: ['Asia/Thimphu'],\n{\n  standard: {\n    name: 'Japan Standard Time',\n    abbrev: 'JST'\n  },\n  zones: ['Asia/Tokyo']\n}, {\n  standard: {\n    name: 'Ulaanbaatar Time',\n    abbrev: 'ULAT'\n  },\n  zones: ['Asia/Ulaanbaatar']\n}, // urumqi: ['Asia/Urumqi'],\n// yekaterinburg: ['Asia/Yekaterinburg'],\n// armenia: ['Asia/Yerevan'],\n// azores: ['Atlantic/Azores'],\n// cape_Verde: ['Atlantic/Cape_Verde'],\n// south_Georgia: ['Atlantic/South_Georgia'],\n// falkland: ['Atlantic/Stanley'],\n//India\n{\n  standard: {\n    name: 'Maldives Time',\n    abbrev: 'MVT'\n  },\n  zones: ['Indian/Maldives']\n}, {\n  standard: {\n    name: 'Mauritius Time',\n    abbrev: 'MUT'\n  },\n  zones: ['Indian/Mauritius']\n}, {\n  standard: {\n    name: 'Marshall Islands Time',\n    abbrev: 'MHT'\n  },\n  zones: ['Pacific/Kwajalein', 'Pacific/Majuro']\n}, {\n  standard: {\n    name: 'Samoa Standard Time',\n    abbrev: 'SST'\n  },\n  alias: ['somoan'],\n  zones: ['Pacific/Midway', 'Pacific/Pago_Pago']\n}, {\n  standard: {\n    name: 'Chamorro Standard Time',\n    abbrev: 'CHST'\n  },\n  zones: ['Pacific/Guam', 'Pacific/Saipan']\n}, {\n  standard: {\n    name: 'Papua New Guinea Time',\n    abbrev: 'PGT'\n  },\n  zones: ['Pacific/Bougainville', 'Pacific/Port_Moresby']\n} // indian_Ocean: ['Indian/Chagos'],\n// christmas: ['Indian/Christmas'],\n// cocos: ['Indian/Cocos'],\n// french_Southern: ['Indian/Kerguelen'],\n// seychelles: ['Indian/Mahe'],\n// reunion: ['Indian/Reunion'],\n//Pacific\n// apia: ['Pacific/Apia'],\n// easter: ['Pacific/Easter'],\n// vanuatu: ['Pacific/Efate'],\n// phoenix_Islands: ['Pacific/Enderbury'],\n// tokelau: ['Pacific/Fakaofo'],\n// fiji: ['Pacific/Fiji'],\n// tuvalu: ['Pacific/Funafuti'],\n// galapagos: ['Pacific/Galapagos'],\n// gambier: ['Pacific/Gambier'],\n// solomon: ['Pacific/Guadalcanal'],\n// line_Islands: ['Pacific/Kiritimati'],\n// kosrae: ['Pacific/Kosrae'],\n// marquesas: ['Pacific/Marquesas'],\n// nauru: ['Pacific/Nauru'],\n// niue: ['Pacific/Niue'],\n// norfolk: ['Pacific/Norfolk'],\n// new_Caledonia: ['Pacific/Noumea'],\n// palau: ['Pacific/Palau'],\n// pitcairn: ['Pacific/Pitcairn'],\n// ponape: ['Pacific/Ponape'],\n// cook: ['Pacific/Rarotonga'],\n// tahiti: ['Pacific/Tahiti'],\n// gilbert_Islands: ['Pacific/Tarawa'],\n// tonga: ['Pacific/Tongatapu'],\n// truk: ['Pacific/Truk'],\n// wake: ['Pacific/Wake'],\n// wallis: ['Pacific/Wallis'],\n// tomsk: ['Asia/Tomsk']\n// antarctic\n// greenland_Eastern: ['America/Scoresbysund'],\n// davis: ['Antarctica/Davis'],\n// dumontdurville: ['Antarctica/Dumontdurville'],\n// macquarie: ['Antarctica/Macquarie'],\n// mawson: ['Antarctica/Mawson'],\n// rothera: ['Antarctica/Rothera'],\n// syowa: ['Antarctica/Syowa'],\n// vostok: ['Antarctica/Vostok'],\n];\n\n//  a list of judgement-calls for country → timezone mappings\n//  with 'new zealand' we usually want 'Pacific/Auckland'.\n//  based on population, country-capital, and geographical center\n//  often some guesswork!\nvar _03ByCountry = {\n  //First, these countries only have one timezone.\n  andorra: {\n    code: 'ad',\n    choice: 'Europe/Andorra'\n  },\n  oman: {\n    code: 'om',\n    choice: 'Asia/Dubai'\n  },\n  afghanistan: {\n    code: 'af',\n    choice: 'Asia/Kabul'\n  },\n  'virgin islands': {\n    code: 'vi',\n    choice: 'America/Port_Of_Spain'\n  },\n  albania: {\n    code: 'al',\n    choice: 'Europe/Tirane'\n  },\n  armenia: {\n    code: 'am',\n    choice: 'Asia/Yerevan'\n  },\n  nigeria: {\n    code: 'ng',\n    choice: 'Africa/Lagos'\n  },\n  austria: {\n    code: 'at',\n    choice: 'Europe/Vienna'\n  },\n  'st maarten': {\n    code: 'sx',\n    choice: 'America/Curacao'\n  },\n  finland: {\n    code: 'fi',\n    choice: 'Europe/Helsinki'\n  },\n  azerbaijan: {\n    code: 'az',\n    choice: 'Asia/Baku'\n  },\n  slovenia: {\n    code: 'si',\n    choice: 'Europe/Belgrade'\n  },\n  barbados: {\n    code: 'bb',\n    choice: 'America/Barbados'\n  },\n  bangladesh: {\n    code: 'bd',\n    choice: 'Asia/Dhaka'\n  },\n  belgium: {\n    code: 'be',\n    choice: 'Europe/Brussels'\n  },\n  togo: {\n    code: 'tg',\n    choice: 'Africa/Abidjan'\n  },\n  bulgaria: {\n    code: 'bg',\n    choice: 'Europe/Sofia'\n  },\n  qatar: {\n    code: 'qa',\n    choice: 'Asia/Qatar'\n  },\n  zimbabwe: {\n    code: 'zw',\n    choice: 'Africa/Maputo'\n  },\n  bermuda: {\n    code: 'bm',\n    choice: 'Atlantic/Bermuda'\n  },\n  brunei: {\n    code: 'bn',\n    choice: 'Asia/Brunei'\n  },\n  bolivia: {\n    code: 'bo',\n    choice: 'America/La_Paz'\n  },\n  bahamas: {\n    code: 'bs',\n    choice: 'America/Nassau'\n  },\n  bhutan: {\n    code: 'bt',\n    choice: 'Asia/Thimphu'\n  },\n  belarus: {\n    code: 'by',\n    choice: 'Europe/Minsk'\n  },\n  belize: {\n    code: 'bz',\n    choice: 'America/Belize'\n  },\n  'cocos islands': {\n    code: 'cc',\n    choice: 'Indian/Cocos'\n  },\n  liechtenstein: {\n    code: 'li',\n    choice: 'Europe/Zurich'\n  },\n  'cook islands': {\n    code: 'ck',\n    choice: 'Pacific/Rarotonga'\n  },\n  colombia: {\n    code: 'co',\n    choice: 'America/Bogota'\n  },\n  'costa rica': {\n    code: 'cr',\n    choice: 'America/Costa_Rica'\n  },\n  cuba: {\n    code: 'cu',\n    choice: 'America/Havana'\n  },\n  'cape verde': {\n    code: 'cv',\n    choice: 'Atlantic/Cape_Verde'\n  },\n  'christmas island': {\n    code: 'cx',\n    choice: 'Indian/Christmas'\n  },\n  slovakia: {\n    code: 'sk',\n    choice: 'Europe/Prague'\n  },\n  mayotte: {\n    code: 'yt',\n    choice: 'Africa/Nairobi'\n  },\n  denmark: {\n    code: 'dk',\n    choice: 'Europe/Copenhagen'\n  },\n  'dominican republic': {\n    code: 'do',\n    choice: 'America/Santo_Domingo'\n  },\n  algeria: {\n    code: 'dz',\n    choice: 'Africa/Algiers'\n  },\n  estonia: {\n    code: 'ee',\n    choice: 'Europe/Tallinn'\n  },\n  egypt: {\n    code: 'eg',\n    choice: 'Africa/Cairo'\n  },\n  'western sahara': {\n    code: 'eh',\n    choice: 'Africa/El_Aaiun'\n  },\n  fiji: {\n    code: 'fj',\n    choice: 'Pacific/Fiji'\n  },\n  'falkland islands': {\n    code: 'fk',\n    choice: 'Atlantic/Stanley'\n  },\n  'faroe islands': {\n    code: 'fo',\n    choice: 'Atlantic/Faroe'\n  },\n  france: {\n    code: 'fr',\n    choice: 'Europe/Paris'\n  },\n  jersey: {\n    code: 'je',\n    choice: 'Europe/London'\n  },\n  georgia: {\n    code: 'ge',\n    choice: 'Asia/Tbilisi'\n  },\n  'french guiana': {\n    code: 'gf',\n    choice: 'America/Cayenne'\n  },\n  ghana: {\n    code: 'gh',\n    choice: 'Africa/Accra'\n  },\n  gibraltar: {\n    code: 'gi',\n    choice: 'Europe/Gibraltar'\n  },\n  greece: {\n    code: 'gr',\n    choice: 'Europe/Athens'\n  },\n  'south georgia': {\n    code: 'gs',\n    choice: 'Atlantic/South_Georgia'\n  },\n  guatemala: {\n    code: 'gt',\n    choice: 'America/Guatemala'\n  },\n  'northern mariana islands': {\n    code: 'mp',\n    choice: 'Pacific/Guam'\n  },\n  'guinea bissau': {\n    code: 'gw',\n    choice: 'Africa/Bissau'\n  },\n  guyana: {\n    code: 'gy',\n    choice: 'America/Guyana'\n  },\n  'hong kong': {\n    code: 'hk',\n    choice: 'Asia/Hong_Kong'\n  },\n  honduras: {\n    code: 'hn',\n    choice: 'America/Tegucigalpa'\n  },\n  haiti: {\n    code: 'ht',\n    choice: 'America/Port-au-prince'\n  },\n  hungary: {\n    code: 'hu',\n    choice: 'Europe/Budapest'\n  },\n  ireland: {\n    code: 'ie',\n    choice: 'Europe/Dublin'\n  },\n  israel: {\n    code: 'il',\n    choice: 'Asia/Jerusalem'\n  },\n  india: {\n    code: 'in',\n    choice: 'Asia/Kolkata'\n  },\n  'british indian ocean territory': {\n    code: 'io',\n    choice: 'Indian/Chagos'\n  },\n  iraq: {\n    code: 'iq',\n    choice: 'Asia/Baghdad'\n  },\n  iran: {\n    code: 'ir',\n    choice: 'Asia/Tehran'\n  },\n  iceland: {\n    code: 'is',\n    choice: 'Atlantic/Reykjavik'\n  },\n  'vatican city': {\n    code: 'va',\n    choice: 'Europe/Rome'\n  },\n  jamaica: {\n    code: 'jm',\n    choice: 'America/Jamaica'\n  },\n  jordan: {\n    code: 'jo',\n    choice: 'Asia/Amman'\n  },\n  japan: {\n    code: 'jp',\n    choice: 'Asia/Tokyo'\n  },\n  kyrgyzstan: {\n    code: 'kg',\n    choice: 'Asia/Bishkek'\n  },\n  'north korea': {\n    code: 'kp',\n    choice: 'Asia/Pyongyang'\n  },\n  'south korea': {\n    code: 'kr',\n    choice: 'Asia/Seoul'\n  },\n  yemen: {\n    code: 'ye',\n    choice: 'Asia/Riyadh'\n  },\n  panama: {\n    code: 'pa',\n    choice: 'America/Panama'\n  },\n  lebanon: {\n    code: 'lb',\n    choice: 'Asia/Beirut'\n  },\n  'sri lanka': {\n    code: 'lk',\n    choice: 'Asia/Colombo'\n  },\n  liberia: {\n    code: 'lr',\n    choice: 'Africa/Monrovia'\n  },\n  'south africa': {\n    code: 'za',\n    choice: 'Africa/Johannesburg'\n  },\n  lithuania: {\n    code: 'lt',\n    choice: 'Europe/Vilnius'\n  },\n  luxembourg: {\n    code: 'lu',\n    choice: 'Europe/Luxembourg'\n  },\n  latvia: {\n    code: 'lv',\n    choice: 'Europe/Riga'\n  },\n  libya: {\n    code: 'ly',\n    choice: 'Africa/Tripoli'\n  },\n  morocco: {\n    code: 'ma',\n    choice: 'Africa/Casablanca'\n  },\n  monaco: {\n    code: 'mc',\n    choice: 'Europe/Monaco'\n  },\n  moldova: {\n    code: 'md',\n    choice: 'Europe/Chisinau'\n  },\n  myanmar: {\n    code: 'mm',\n    choice: 'Asia/Yangon'\n  },\n  //(alias for myanmar)\n  burma: {\n    code: 'mm',\n    choice: 'Asia/Yangon'\n  },\n  macau: {\n    code: 'mo',\n    choice: 'Asia/Macau'\n  },\n  martinique: {\n    code: 'mq',\n    choice: 'America/Martinique'\n  },\n  malta: {\n    code: 'mt',\n    choice: 'Europe/Malta'\n  },\n  mauritius: {\n    code: 'mu',\n    choice: 'Indian/Mauritius'\n  },\n  maldives: {\n    code: 'mv',\n    choice: 'Indian/Maldives'\n  },\n  namibia: {\n    code: 'na',\n    choice: 'Africa/Windhoek'\n  },\n  'new caledonia': {\n    code: 'nc',\n    choice: 'Pacific/Noumea'\n  },\n  'norfolk island': {\n    code: 'nf',\n    choice: 'Pacific/Norfolk'\n  },\n  nicaragua: {\n    code: 'ni',\n    choice: 'America/Managua'\n  },\n  netherlands: {\n    code: 'nl',\n    choice: 'Europe/Amsterdam'\n  },\n  'svalbard and jan mayen': {\n    code: 'sj',\n    choice: 'Europe/Oslo'\n  },\n  nepal: {\n    code: 'np',\n    choice: 'Asia/Kathmandu'\n  },\n  nauru: {\n    code: 'nr',\n    choice: 'Pacific/Nauru'\n  },\n  niue: {\n    code: 'nu',\n    choice: 'Pacific/Niue'\n  },\n  peru: {\n    code: 'pe',\n    choice: 'America/Lima'\n  },\n  philippines: {\n    code: 'ph',\n    choice: 'Asia/Manila'\n  },\n  pakistan: {\n    code: 'pk',\n    choice: 'Asia/Karachi'\n  },\n  poland: {\n    code: 'pl',\n    choice: 'Europe/Warsaw'\n  },\n  'st pierre and miquelon': {\n    code: 'pm',\n    choice: 'America/Miquelon'\n  },\n  pitcairn: {\n    code: 'pn',\n    choice: 'Pacific/Pitcairn'\n  },\n  'puerto rico': {\n    code: 'pr',\n    choice: 'America/Puerto_Rico'\n  },\n  palau: {\n    code: 'pw',\n    choice: 'Pacific/Palau'\n  },\n  paraguay: {\n    code: 'py',\n    choice: 'America/Asuncion'\n  },\n  romania: {\n    code: 'ro',\n    choice: 'Europe/Bucharest'\n  },\n  'solomon islands': {\n    code: 'sb',\n    choice: 'Pacific/Guadalcanal'\n  },\n  seychelles: {\n    code: 'sc',\n    choice: 'Indian/Mahe'\n  },\n  sudan: {\n    code: 'sd',\n    choice: 'Africa/Khartoum'\n  },\n  sweden: {\n    code: 'se',\n    choice: 'Europe/Stockholm'\n  },\n  singapore: {\n    code: 'sg',\n    choice: 'Asia/Singapore'\n  },\n  suriname: {\n    code: 'sr',\n    choice: 'America/Paramaribo'\n  },\n  'south sudan': {\n    code: 'ss',\n    choice: 'Africa/Juba'\n  },\n  'sao tome': {\n    code: 'st',\n    choice: 'Africa/Sao_Tome'\n  },\n  'el salvador': {\n    code: 'sv',\n    choice: 'America/El_Salvador'\n  },\n  syria: {\n    code: 'sy',\n    choice: 'Asia/Damascus'\n  },\n  'turks and caicos': {\n    code: 'tc',\n    choice: 'America/Grand_Turk'\n  },\n  chad: {\n    code: 'td',\n    choice: 'Africa/Ndjamena'\n  },\n  tajikistan: {\n    code: 'tj',\n    choice: 'Asia/Dushanbe'\n  },\n  tokelau: {\n    code: 'tk',\n    choice: 'Pacific/Fakaofo'\n  },\n  'east timor': {\n    code: 'tl',\n    choice: 'Asia/Dili'\n  },\n  turkmenistan: {\n    code: 'tm',\n    choice: 'Asia/Ashgabat'\n  },\n  tunisia: {\n    code: 'tn',\n    choice: 'Africa/Tunis'\n  },\n  tonga: {\n    code: 'to',\n    choice: 'Pacific/Tongatapu'\n  },\n  turkey: {\n    code: 'tr',\n    choice: 'Europe/Istanbul'\n  },\n  tuvalu: {\n    code: 'tv',\n    choice: 'Pacific/Funafuti'\n  },\n  taiwan: {\n    code: 'tw',\n    choice: 'Asia/Taipei'\n  },\n  uruguay: {\n    code: 'uy',\n    choice: 'America/Montevideo'\n  },\n  venezuela: {\n    code: 've',\n    choice: 'America/Caracas'\n  },\n  vanuatu: {\n    code: 'vu',\n    choice: 'Pacific/Efate'\n  },\n  'wallis and futuna': {\n    code: 'wf',\n    choice: 'Pacific/Wallis'\n  },\n  'western samoa': {\n    code: 'ws',\n    choice: 'Pacific/Apia'\n  },\n  samoa: {\n    code: 'ws',\n    choice: 'Pacific/Apia'\n  },\n  ////////////\n  /// these countries have more than one timezone\n  /// and i picked one.\n  // (i tried to do my best.)\n  antarctica: {\n    code: 'aq',\n    choice: 'Antarctica/Davis'\n  },\n  argentina: {\n    code: 'ar',\n    choice: 'America/Argentina'\n  },\n  australia: {\n    code: 'au',\n    choice: 'Australia/Sydney'\n  },\n  brazil: {\n    code: 'br',\n    choice: 'America/Sao_Paulo'\n  },\n  canada: {\n    code: 'ca',\n    choice: 'America/Toronto'\n  },\n  congo: {\n    code: 'cd',\n    choice: 'Africa/Kinshasa' //'Africa/Lagos'?\n\n  },\n  chile: {\n    code: 'cl',\n    choice: 'America/Santiago'\n  },\n  china: {\n    code: 'cn',\n    choice: 'Asia/Shanghai'\n  },\n  cyprus: {\n    code: 'cy',\n    choice: 'Asia/Nicosia'\n  },\n  germany: {\n    code: 'de',\n    choice: 'Europe/Berlin'\n  },\n  ecuador: {\n    code: 'ec',\n    choice: 'America/Guayaquil'\n  },\n  spain: {\n    code: 'es',\n    choice: 'Europe/Madrid'\n  },\n  micronesia: {\n    code: 'fm',\n    choice: 'Pacific/Pohnpei'\n  },\n  greenland: {\n    code: 'gl',\n    choice: 'America/Godthab'\n  },\n  indonesia: {\n    code: 'id',\n    choice: 'Asia/Jakarta'\n  },\n  kiribati: {\n    code: 'ki',\n    choice: 'Pacific/Kiritimati'\n  },\n  kazakhstan: {\n    code: 'kz',\n    choice: 'Asia/Almaty'\n  },\n  'marshall islands': {\n    code: 'mh',\n    choice: 'Pacific/Majuro'\n  },\n  mongolia: {\n    code: 'mn',\n    choice: 'Asia/Ulaanbaatar'\n  },\n  mexico: {\n    code: 'mx',\n    choice: 'America/Mexico_City' // 'America/Monterrey'?\n\n  },\n  malaysia: {\n    code: 'my',\n    choice: 'Asia/Kuala_Lumpur'\n  },\n  'new zealand': {\n    code: 'nz',\n    choice: 'Pacific/Auckland'\n  },\n  'french polynesia': {\n    code: 'pf',\n    choice: 'Pacific/Pohnpei'\n  },\n  'papua new guinea': {\n    code: 'pg',\n    choice: 'Pacific/Port_Moresby'\n  },\n  palestine: {\n    code: 'ps',\n    choice: 'Asia/Gaza'\n  },\n  portugal: {\n    code: 'pt',\n    choice: 'Europe/Lisbon'\n  },\n  russia: {\n    code: 'ru',\n    choice: 'Europe/Moscow' // 'Europe/Kaliningrad'?\n\n  },\n  'french southern and antarctic lands': {\n    code: 'tf',\n    choice: 'Indian/Kerguelen'\n  },\n  ukraine: {\n    code: 'ua',\n    choice: 'Europe/Kiev'\n  },\n  'us minor outlying islands': {\n    code: 'um',\n    choice: 'Pacific/Wake'\n  },\n  'united states': {\n    code: 'us',\n    choice: 'America/New_York'\n  },\n  uzbekistan: {\n    code: 'uz',\n    choice: 'Asia/Tashkent' //'Asia/Samarkand'\n\n  },\n  vietnam: {\n    code: 'vn',\n    choice: 'Asia/Ho_Chi_Minh'\n  }\n};\n\nvar all = Object.assign({}, _01Iana, _02ByCity, _04OldZones, _07Parentheses); //Add country info\n\nObject.keys(_03ByCountry).forEach(function (key) {\n  //Add country name\n  all[key] = _03ByCountry[key].choice; //Add 2-letter country code\n\n  all[_03ByCountry[key].code] = _03ByCountry[key].choice;\n}); //Add metazone info\n\n_05Metazones.forEach(function (obj) {\n  var zone = obj.pick || obj.zones[0];\n  all[obj.standard.name.toLowerCase()] = zone;\n\n  if (obj.standard.abbrev) {\n    all[obj.standard.abbrev.toLowerCase()] = zone;\n  }\n\n  if (obj.daylight) {\n    if (obj.daylight.name) {\n      all[obj.daylight.name.toLowerCase()] = zone;\n    }\n\n    if (obj.daylight.abbrev) {\n      all[obj.daylight.abbrev.toLowerCase()] = zone;\n    }\n  }\n\n  if (obj.alias) {\n    obj.alias.forEach(function (str) {\n      return all[str.toLowerCase()] = zone;\n    });\n  }\n}); // add even-more abbreviations\n\nObject.keys(_06Abbreviations).forEach(function (k) {\n  var arr = (_06Abbreviations[k] || []).filter(function (a) {\n    return a;\n  });\n  arr.forEach(function (abbr) {\n    if (all.hasOwnProperty(abbr) === false) {\n      all[abbr] = k;\n    }\n  });\n}); // console.log(all['canada/vancouver'])\n// console.log(Object.keys(all).length)\n\nvar data = all;\n\nvar isOffset = /(\\-?[0-9]+)h(rs)?/i;\nvar isNumber = /(\\-?[0-9]+)/;\nvar utcOffset = /utc([\\-+]?[0-9]+)/i;\nvar gmtOffset = /gmt([\\-+]?[0-9]+)/i;\n\nvar toIana = function toIana(num) {\n  num = Number(num);\n\n  if (num > -13 && num < 13) {\n    num = num * -1; //it's opposite!\n\n    num = (num > 0 ? '+' : '') + num; //add plus sign\n\n    return 'Etc/GMT' + num;\n  }\n\n  return null;\n};\n\nvar parseOffset = function parseOffset(tz) {\n  // '+5hrs'\n  var m = tz.match(isOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'utc+5'\n\n\n  m = tz.match(utcOffset);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  } // 'GMT-5' (not opposite)\n\n\n  m = tz.match(gmtOffset);\n\n  if (m !== null) {\n    var num = Number(m[1]) * -1;\n    return toIana(num);\n  } // '+5'\n\n\n  m = tz.match(isNumber);\n\n  if (m !== null) {\n    return toIana(m[1]);\n  }\n\n  return null;\n};\n\nvar parseOffset_1 = parseOffset;\n\nvar normalizeOne = function normalizeOne(tz) {\n  tz = tz.replace(/ time/g, '');\n  tz = tz.replace(/ (standard|daylight|summer)/g, '');\n  tz = tz.replace(/ - .*/g, ''); //`Eastern Time - US & Canada`\n\n  tz = tz.replace(/, .*/g, ''); //`mumbai, india`\n\n  return tz.trim();\n}; //some more aggressive transformations\n\n\nvar normalizeTwo = function normalizeTwo(tz) {\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1');\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1');\n  tz = tz.replace(/\\beuropean/g, 'europe');\n  tz = tz.replace(/\\islands/g, 'island');\n  tz = tz.replace(/.*\\//g, '');\n  return tz.trim();\n}; // even-more agressive\n\n\nvar normalizeThree = function normalizeThree(tz) {\n  tz = tz.replace(/\\(.*\\)/, '');\n  return tz.trim();\n}; //\n\n\nvar find = function find(str) {\n  if (!str) {\n    return null;\n  }\n\n  str = str.toLowerCase().trim(); // lookup known abbreviations\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // -8hrs\n\n\n  if (/[0-9]/.test(str)) {\n    var etc = parseOffset_1(str);\n\n    if (etc) {\n      return etc;\n    }\n  } // start fuzzy-match against iana timezones\n\n\n  str = normalizeOne(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // 'eastern daylight'\n\n\n  var tmp = str + ' time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // 'pacific'\n\n\n  tmp = str + ' standard time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // -- harder normalizations --\n\n\n  str = normalizeTwo(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // -- HARDER normalizations --\n\n\n  str = normalizeThree(str);\n\n  if (data.hasOwnProperty(str)) {\n    return data[str];\n  } // 'eastern daylight'\n\n\n  tmp = str + ' time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  } // 'pacific'\n\n\n  tmp = str + ' standard time';\n\n  if (data.hasOwnProperty(tmp)) {\n    return data[tmp];\n  }\n\n  return null;\n};\n\nvar find_1 = find;\n\nvar display = function display(str) {\n  var id = find_1(str);\n\n  if (!id) {\n    return null;\n  }\n\n  var meta = _05Metazones.find(function (obj) {\n    return obj.zones.find(function (tz) {\n      return tz === id;\n    });\n  });\n  meta = meta || {};\n  return {\n    iana: id,\n    standard: meta.standard,\n    daylight: meta.daylight\n  };\n};\n\nvar display_1 = display;\n\nvar _version = '0.5.0';\n\nvar src = {\n  find: find_1,\n  display: display_1,\n  version: _version\n};\nvar src_1 = src.find;\nvar src_2 = src.display;\nvar src_3 = src.version;\n\nexport default src;\nexport { src_2 as display, src_1 as find, src_3 as version };\n"]},"metadata":{},"sourceType":"module"}