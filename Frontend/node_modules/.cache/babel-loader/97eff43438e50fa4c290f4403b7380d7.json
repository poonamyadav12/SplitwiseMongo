{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { alertActions } from '../_actions';\nimport { AlertMessages } from './Alert/Alert';\nimport { MyGroups } from './Groups/MyGroups';\nimport { Home } from './Home/Home';\nimport { Navbar } from './LandingPage/Navbar';\nimport { Login } from './Login/Login';\nimport { Profile } from './Profile/Profile';\nimport { Signup } from './Signup/Signup';\nimport { LandingPage } from './LandingPage/LandingPage'; //Create a Main Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.props.clearAlerts();\n    }\n  }\n\n  render() {\n    const {\n      alert\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), alert.messages && /*#__PURE__*/_jsxDEV(AlertBar, {\n        type: alert.type,\n        messages: alert.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/groups\",\n            component: MyGroups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/home\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            component: Signup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/profile\",\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst AlertBar = props => {\n  _s();\n\n  const [show, setShow] = useState(true);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(AlertMessages, {\n      type: props.type,\n      messages: props.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"danger\",\n    onClick: () => setShow(true),\n    children: \"Show Alert\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AlertBar, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = AlertBar;\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  return {\n    alert\n  };\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear\n};\nconst connectedApp = withRouter(connect(mapState, actionCreators)(Main));\nexport { connectedApp as Main };\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertBar\");","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/components/Main.js"],"names":["React","Component","useState","Button","Container","connect","Redirect","Route","Switch","withRouter","alertActions","AlertMessages","MyGroups","Home","Navbar","Login","Profile","Signup","LandingPage","Main","componentDidUpdate","prevProps","props","location","pathname","clearAlerts","render","alert","messages","type","AlertBar","show","setShow","mapState","state","actionCreators","clear","connectedApp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CAEA;;;;AACA,MAAMC,IAAN,SAAmBlB,SAAnB,CAA6B;AAEzBmB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiCH,SAAS,CAACE,QAAV,CAAmBC,QAAxD,EAAkE;AAC9D,WAAKF,KAAL,CAAWG,WAAX;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,wBAEI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKK,KAAK,CAACC,QAAN,iBAAkB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED,KAAK,CAACE,IAAtB;AAA4B,QAAA,QAAQ,EAAEF,KAAK,CAACC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHvB,eAII;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AACI,YAAA,KAAK,MADT;AAEI,YAAA,IAAI,EAAC,GAFT;AAGI,YAAA,MAAM,EAAE,mBAAM,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAHlB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,SAAS,EAAEb;AAAtC;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,SAAlB;AAA4B,YAAA,SAAS,EAAEH;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,OAAlB;AAA0B,YAAA,MAAM,EAAGU,KAAD,iBAAW,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,SAAlB;AAA4B,YAAA,SAAS,EAAEL;AAAvC;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,UAAlB;AAA6B,YAAA,SAAS,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAsBH;;AAhCwB;;AAmC7B,MAAMc,QAAQ,GAAGR,KAAK,IAAI;AAAA;;AACtB,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,IAAD,CAAhC;;AAEA,MAAI6B,IAAJ,EAAU;AACN,wBAAO,QAAC,aAAD;AAAe,MAAA,IAAI,EAAET,KAAK,CAACO,IAA3B;AAAiC,MAAA,QAAQ,EAAEP,KAAK,CAACM;AAAjD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAE,MAAMI,OAAO,CAAC,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAPD;;GAAMF,Q;;KAAAA,Q;;AASN,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEP,IAAAA;AAAF,MAAYO,KAAlB;AACA,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACH;;AAED,MAAMQ,cAAc,GAAG;AACnBV,EAAAA,WAAW,EAAEf,YAAY,CAAC0B;AADP,CAAvB;AAIA,MAAMC,YAAY,GAAG5B,UAAU,CAACJ,OAAO,CAAC4B,QAAD,EAAWE,cAAX,CAAP,CAAkChB,IAAlC,CAAD,CAA/B;AACA,SAASkB,YAAY,IAAIlB,IAAzB","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { alertActions } from '../_actions';\r\nimport { AlertMessages } from './Alert/Alert';\r\nimport { MyGroups } from './Groups/MyGroups';\r\nimport { Home } from './Home/Home';\r\nimport { Navbar } from './LandingPage/Navbar';\r\nimport { Login } from './Login/Login';\r\nimport { Profile } from './Profile/Profile';\r\nimport { Signup } from './Signup/Signup';\r\nimport { LandingPage } from './LandingPage/LandingPage';\r\n\r\n//Create a Main Component\r\nclass Main extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            this.props.clearAlerts();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { alert } = this.props;\r\n        return (\r\n\r\n            <Container fluid>\r\n                <Navbar />\r\n\r\n                {alert.messages && <AlertBar type={alert.type} messages={alert.messages} />}\r\n                <div>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/\"\r\n                            render={() => <LandingPage />}\r\n                        />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Route exact path=\"/groups\" component={MyGroups} />\r\n                        <Route exact path=\"/home\" render={(props) => <Home {...props} />} />\r\n                        <Route exact path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/profile\" component={Profile} />\r\n                    </Switch>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst AlertBar = props => {\r\n    const [show, setShow] = useState(true);\r\n\r\n    if (show) {\r\n        return <AlertMessages type={props.type} messages={props.messages} />;\r\n    }\r\n    return <Button variant=\"danger\" onClick={() => setShow(true)}>Show Alert</Button>;\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { alert } = state;\r\n    return { alert };\r\n}\r\n\r\nconst actionCreators = {\r\n    clearAlerts: alertActions.clear\r\n};\r\n\r\nconst connectedApp = withRouter(connect(mapState, actionCreators)(Main));\r\nexport { connectedApp as Main };\r\n"]},"metadata":{},"sourceType":"module"}