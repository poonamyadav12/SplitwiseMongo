/// <reference types="react" />
import type { Props as ReactSelectProps } from 'react-select';
declare type ExcludeValue<T> = Pick<T, Exclude<keyof T, 'value'>>;
export declare type ICustomTimezone = {
    [key: string]: string;
};
export declare const i18nTimezones: ICustomTimezone;
export declare type ILabelStyle = 'original' | 'altName' | 'abbrev';
export declare type TimezoneSelectOption = {
    value: string;
    label: string;
    abbrev?: string;
    altName?: string;
};
export declare type ITimezone = TimezoneSelectOption | string;
interface Props extends ExcludeValue<ReactSelectProps> {
    value: ITimezone;
    labelStyle?: ILabelStyle;
    timezones?: ICustomTimezone;
}
declare const TimezoneSelect: ({ value, onBlur, onChange, labelStyle, timezones, ...props }: Props) => JSX.Element;
export default TimezoneSelect;
