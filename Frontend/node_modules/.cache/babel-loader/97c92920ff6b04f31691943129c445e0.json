{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Image/UploadImage.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport { SERVER_URL } from '../../_constants';\nimport { getDefaultUserImage } from '../../_constants/avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class UploadImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageUrl: this.props.defaultImage,\n      image: null,\n      uploaded: false,\n      showButton: false\n    };\n\n    this.componentDidMount = () => {\n      this.props.onChange(this.state.imageUrl);\n    };\n\n    this.uploadImage = async () => {\n      if (!this.state.image) return;\n\n      try {\n        var formData = new FormData();\n        formData.append(\"image\", this.state.image);\n        const response = await axios.post(SERVER_URL + '/image-upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.props.onChange(response.data.imageUrl);\n        this.setState({\n          imageUrl: response.data.imageUrl,\n          uploaded: true,\n          showButton: false\n        });\n      } catch (error) {\n        this.setState({\n          uploaded: false,\n          showButton: true\n        });\n      }\n    };\n\n    this.handleDrop = dropped => {\n      this.setState({\n        image: dropped[0],\n        uploaded: false,\n        showButton: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"imageUplaod\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: this.props.label || 'Avatar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: this.handleDrop,\n          style: {\n            width: '150px',\n            height: '150px'\n          },\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n              children: [/*#__PURE__*/_jsxDEV(AvatarEditor, {\n                width: 150,\n                height: 150,\n                border: 10,\n                scale: 1,\n                borderRadius: 80,\n                rotate: 0,\n                color: [256, 256, 256],\n                image: this.state.image || this.state.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), !this.state.showButton && /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Drop images or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 48\n        }, this), this.state.showButton && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: this.uploadImage,\n          children: this.props.confirmButton || 'Confirm'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), this.state.uploaded && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Uploaded successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Image/UploadImage.js"],"names":["axios","React","AvatarEditor","Button","Col","Container","Form","Row","Dropzone","SERVER_URL","getDefaultUserImage","UploadImage","Component","state","imageUrl","props","defaultImage","image","uploaded","showButton","componentDidMount","onChange","uploadImage","formData","FormData","append","response","post","headers","data","setState","error","handleDrop","dropped","render","textAlign","label","width","height","getRootProps","getInputProps","confirmButton"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport { SERVER_URL } from '../../_constants';\nimport { getDefaultUserImage } from '../../_constants/avatar';\n\nexport class UploadImage extends React.Component {\n    state = {\n        imageUrl: this.props.defaultImage,\n        image: null,\n        uploaded: false,\n        showButton: false,\n    }\n\n    componentDidMount = () => {\n        this.props.onChange(this.state.imageUrl);\n    }\n\n    uploadImage = async () => {\n        if (!this.state.image) return;\n        try {\n            var formData = new FormData();\n            formData.append(\"image\", this.state.image);\n            const response = await axios.post(SERVER_URL + '/image-upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            this.props.onChange(response.data.imageUrl);\n            this.setState({\n                imageUrl: response.data.imageUrl,\n                uploaded: true,\n                showButton: false,\n            });\n        } catch (error) {\n            this.setState({ uploaded: false, showButton: true })\n        }\n    }\n\n    handleDrop = dropped => {\n        this.setState({ image: dropped[0], uploaded: false, showButton: true })\n    }\n\n    render() {\n        return (\n            <Col style={{ textAlign: 'center' }}>\n                <Form.Group controlId=\"imageUplaod\">\n                    <Form.Label><h5>{this.props.label || 'Avatar'}</h5></Form.Label>\n                    <Dropzone\n                        onDrop={this.handleDrop}\n                        style={{ width: '150px', height: '150px' }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <>\n                                <div {...getRootProps()}>\n                                    <AvatarEditor\n                                        width={150}\n                                        height={150}\n                                        border={10}\n                                        scale={1}\n                                        borderRadius={80}\n                                        rotate={0}\n                                        color={[256, 256, 256]}\n                                        image={this.state.image || this.state.imageUrl} />\n                                    <input {...getInputProps()} />\n                                </div>\n                            </>\n                        )}\n                    </Dropzone>\n                    {!this.state.showButton && <h5>Drop images or click to upload</h5>}\n                    {this.state.showButton && <Button variant=\"success\" onClick={this.uploadImage}>{this.props.confirmButton || 'Confirm'}</Button>}\n                </Form.Group>\n                {this.state.uploaded && <h4>Uploaded successfully</h4>}\n            </Col >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}