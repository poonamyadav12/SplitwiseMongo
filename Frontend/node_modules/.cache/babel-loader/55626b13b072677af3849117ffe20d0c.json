{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Dashboard/DashboardView.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Card, Col, Container, ListGroup, Row, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { calculateDebtPerFriend } from '../../_helper/debtcalculator';\nimport { getRoundedAmount } from '../../_helper/money';\nimport { LocalizedAmount, UserAvatar } from '../Shared/Shared';\nimport { SettleUpModal } from '../Transactions/SettleUpModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _ = require('lodash');\n\nclass DashboardView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactions: null\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    try {\n      if (this.props.user) {\n        const transactions = await axios.get(`${SERVER_URL}/user/transactions?userId=${this.props.user.email}`);\n        this.setState({\n          transactions: transactions.data\n        });\n      }\n    } catch (err) {\n      this.props.errorAlert([\"Something went wrong. Please try again\"]);\n    }\n  }\n\n  async forceReload() {\n    await this.fetchData();\n  }\n\n  render() {\n    if (!this.state.transactions) return null;\n    if (this.state.transactions.length === 0) return /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"No transactions yet. Start adding expenses to see the balances.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 54\n    }, this);\n    const calculatedDebt = calculateDebtPerFriend(this.props.user, this.state.transactions);\n    const negativeFriendBalances = calculatedDebt.per_friend.filter(f => getRoundedAmount(f.total) < 0);\n    const positiveFriendBalances = calculatedDebt.per_friend.filter(f => getRoundedAmount(f.total) > 0);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"You owe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"You are owed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      color: calculatedDebt.totalAmount >= 0 ? 'green' : 'red'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LocalizedAmount, {\n                      amount: calculatedDebt.total,\n                      doNotPrintAbs: true,\n                      currency: this.props.user.default_currency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this), '*']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LocalizedAmount, {\n                      amount: calculatedDebt.owed,\n                      currency: this.props.user.default_currency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 23\n                    }, this), '*']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      color: 'green'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LocalizedAmount, {\n                      amount: calculatedDebt.lent,\n                      currency: this.props.user.default_currency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 23\n                    }, this), '*']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              height: '80vh'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              style: {\n                height: '90vh',\n                borderRight: '1px solid grey'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"YOU OWE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: negativeFriendBalances.length > 0 ? negativeFriendBalances.map(friendBalance => /*#__PURE__*/_jsxDEV(BalanceView, {\n                  data: friendBalance,\n                  user: this.props.user,\n                  reloadDashboardView: this.forceReload.bind(this),\n                  setFriendView: this.props.setFriendView,\n                  setGroupView: this.props.setGroupView\n                }, friendBalance.friend.email, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\\"\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"YOU ARE OWED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: positiveFriendBalances.length > 0 ? positiveFriendBalances.map(friendBalance => /*#__PURE__*/_jsxDEV(BalanceView, {\n                  data: friendBalance,\n                  user: this.props.user,\n                  reloadDashboardView: this.forceReload.bind(this),\n                  setFriendView: this.props.setFriendView,\n                  setGroupView: this.props.setGroupView\n                }, friendBalance.friend.email, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this)) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst BalanceView = props => {\n  _s();\n\n  const [isSettleUpModalOpen, setSettleModalOpen] = useState(false);\n  const color = props.data.balance > 0 ? 'green' : 'red';\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        alignItems: 'baseline'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 9,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          onClick: () => props.setFriendView(props.data.friend),\n          children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n            user: props.data.friend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '3rem',\n              marginTop: '-1rem'\n            },\n            className: \"h5\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: ` ${props.data.total > 0 ? 'owes you' : 'you owe'} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color\n              },\n              children: /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n                amount: props.data.total,\n                currency: props.user.default_currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: props.data.per_group.length > 0 && props.data.per_group.filter(perGroupData => perGroupData.total !== 0).map(perGroupData => /*#__PURE__*/_jsxDEV(PerGroupBalanceView, {\n            type: perGroupData.total > 0 ? 'lent' : 'owe',\n            data: perGroupData,\n            friend: props.data.friend,\n            user: props.user,\n            setGroupView: props.setGroupView\n          }, perGroupData.groupId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: '1rem'\n          },\n          variant: \"primary\",\n          onClick: () => setSettleModalOpen(true),\n          children: \"Settle Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), isSettleUpModalOpen ? /*#__PURE__*/_jsxDEV(SettleUpModal, {\n          data: props.data,\n          reloadDashboardView: props.reloadDashboardView,\n          closeModal: () => setSettleModalOpen(false),\n          isOpen: isSettleUpModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, props.data.friend.email, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BalanceView, \"XPwOq24SxaCkNGypOINLEeUKuqo=\");\n\n_c = BalanceView;\n\nconst PerGroupBalanceView = props => {\n  const color = props.type === \"lent\" ? 'red' : 'green';\n  const prefix = props.type === \"lent\" ? `${props.friend.first_name} owes you ` : ` You owe ${props.friend.first_name} `;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"#\",\n    onClick: () => props.setGroupView(props.data.group.id),\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [prefix, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n          amount: props.data.total,\n          currency: props.user.default_currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), ' for ', '\"', props.data.group.name, '\"']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 105\n    }, this)\n  }, props.friend.email, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 11\n  }, this);\n};\n\n_c2 = PerGroupBalanceView;\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear\n};\nconst connectedDashboardView = connect(mapState, actionCreators)(DashboardView);\nexport { connectedDashboardView as DashboardView };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BalanceView\");\n$RefreshReg$(_c2, \"PerGroupBalanceView\");","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Dashboard/DashboardView.js"],"names":["axios","React","useState","Button","Card","Col","Container","ListGroup","Row","Table","connect","Link","alertActions","SERVER_URL","calculateDebtPerFriend","getRoundedAmount","LocalizedAmount","UserAvatar","SettleUpModal","_","require","DashboardView","Component","constructor","props","state","transactions","componentDidMount","fetchData","user","get","email","setState","data","err","errorAlert","forceReload","render","length","calculatedDebt","negativeFriendBalances","per_friend","filter","f","total","positiveFriendBalances","color","totalAmount","default_currency","owed","lent","height","borderRight","map","friendBalance","bind","setFriendView","setGroupView","friend","BalanceView","isSettleUpModalOpen","setSettleModalOpen","balance","display","alignItems","marginLeft","marginTop","per_group","perGroupData","groupId","reloadDashboardView","PerGroupBalanceView","type","prefix","first_name","group","id","name","mapState","authentication","actionCreators","error","clearAlert","clear","connectedDashboardView"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Card, Col, Container, ListGroup, Row, Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { alertActions } from '../../_actions';\nimport { SERVER_URL } from '../../_constants';\nimport { calculateDebtPerFriend } from '../../_helper/debtcalculator';\nimport { getRoundedAmount } from '../../_helper/money';\nimport { LocalizedAmount, UserAvatar } from '../Shared/Shared';\nimport { SettleUpModal } from '../Transactions/SettleUpModal';\nvar _ = require('lodash');\n\n\nclass DashboardView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { transactions: null };\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  async fetchData() {\n    try {\n      if (this.props.user) {\n        const transactions = await axios.get(`${SERVER_URL}/user/transactions?userId=${this.props.user.email}`);\n        this.setState({\n          transactions: transactions.data,\n        });\n      }\n    } catch (err) {\n      this.props.errorAlert([\"Something went wrong. Please try again\"]);\n    }\n  }\n\n  async forceReload() {\n    await this.fetchData();\n  }\n\n  render() {\n    if (!this.state.transactions) return null;\n    if (this.state.transactions.length === 0) return <h5>No transactions yet. Start adding expenses to see the balances.</h5>;\n\n    const calculatedDebt = calculateDebtPerFriend(this.props.user, this.state.transactions);\n\n    const negativeFriendBalances = calculatedDebt.per_friend.filter((f) => getRoundedAmount(f.total) < 0);\n    const positiveFriendBalances = calculatedDebt.per_friend.filter((f) => getRoundedAmount(f.total) > 0);\n\n    return (\n      <>\n        <Card>\n          <Container fluid={true}>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Total balance</th>\n                  <th>You owe</th>\n                  <th>You are owed</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <h4\n                      style={{\n                        color:\n                          calculatedDebt.totalAmount >= 0 ? 'green' : 'red',\n                      }}\n                    >\n                      <LocalizedAmount\n                        amount={calculatedDebt.total}\n                        doNotPrintAbs={true}\n                        currency={this.props.user.default_currency}\n                      />\n                      {'*'}\n                    </h4>\n                  </td>\n                  <td>\n                    <h4 style={{ color: 'red' }}>\n                      <LocalizedAmount\n                        amount={calculatedDebt.owed}\n                        currency={this.props.user.default_currency}\n                      />\n                      {'*'}\n                    </h4>\n                  </td>\n                  <td>\n                    <h4 style={{ color: 'green' }}>\n                      <LocalizedAmount\n                        amount={calculatedDebt.lent}\n                        currency={this.props.user.default_currency}\n                      />\n                      {'*'}\n                    </h4>\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n            <Row style={{ height: '80vh' }}>\n              <Col\n                sm={6}\n                style={{ height: '90vh', borderRight: '1px solid grey' }}\n              >\n                <h3>YOU OWE</h3>\n                <ListGroup>\n                  {negativeFriendBalances.length > 0\n                    ? negativeFriendBalances.map((friendBalance) => (\n                      <BalanceView key={friendBalance.friend.email}\n                        data={friendBalance}\n                        user={this.props.user}\n                        reloadDashboardView={this.forceReload.bind(this)}\n                        setFriendView={this.props.setFriendView}\n                        setGroupView={this.props.setGroupView}\n                      />\n                    ))\n                    : <h4>\"\"</h4>}\n                </ListGroup>\n              </Col>\n              <Col sm={6}>\n                <h3>YOU ARE OWED</h3>\n                <ListGroup>\n                  {positiveFriendBalances.length > 0\n                    ? positiveFriendBalances.map((friendBalance) => (\n                      <BalanceView key={friendBalance.friend.email}\n                        data={friendBalance}\n                        user={this.props.user}\n                        reloadDashboardView={this.forceReload.bind(this)}\n                        setFriendView={this.props.setFriendView}\n                        setGroupView={this.props.setGroupView}\n                      />\n                    ))\n                    : null}\n                </ListGroup>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </>\n    );\n  }\n}\n\nconst BalanceView = (props) => {\n  const [isSettleUpModalOpen, setSettleModalOpen] = useState(false);\n\n  const color = props.data.balance > 0 ? 'green' : 'red';\n  return (\n    <ListGroup.Item key={props.data.friend.email}>\n      <Row style={{ display: 'flex', alignItems: 'baseline' }}>\n        <Col sm={9}>\n          <Link to='#' onClick={() => props.setFriendView(props.data.friend)}>\n            <UserAvatar user={props.data.friend} />\n            <div style={{ marginLeft: '3rem', marginTop: '-1rem' }} className=\"h5\">\n              <span>{` ${props.data.total > 0 ? 'owes you' : 'you owe'} `}</span>\n              <span style={{ color }}>\n                <LocalizedAmount\n                  amount={props.data.total}\n                  currency={props.user.default_currency}\n                />\n              </span>\n            </div>\n          </Link>\n          <ul>\n            {props.data.per_group.length > 0 &&\n              props.data.per_group.filter((perGroupData) => perGroupData.total !== 0).map((perGroupData) => (\n                <PerGroupBalanceView\n                  key={perGroupData.groupId}\n                  type={perGroupData.total > 0 ? 'lent' : 'owe'}\n                  data={perGroupData}\n                  friend={props.data.friend}\n                  user={props.user}\n                  setGroupView={props.setGroupView}\n                />\n              ))}\n          </ul>\n        </Col>\n        <Col sm={1}>\n          <Button style={{ marginLeft: '1rem' }} variant='primary' onClick={() => setSettleModalOpen(true)}>Settle Up</Button>\n          {isSettleUpModalOpen ? <SettleUpModal data={props.data} reloadDashboardView={props.reloadDashboardView} closeModal={() => setSettleModalOpen(false)} isOpen={isSettleUpModalOpen} /> : null}\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  );\n};\n\nconst PerGroupBalanceView = (props) => {\n  const color = props.type === \"lent\" ? 'red' : 'green';\n  const prefix = props.type === \"lent\" ? `${props.friend.first_name} owes you ` : ` You owe ${props.friend.first_name} `;\n  return (<Link key={props.friend.email} to='#' onClick={() => props.setGroupView(props.data.group.id)}><li>\n    {prefix}<span style={{ color }}><LocalizedAmount amount={props.data.total} currency={props.user.default_currency} /></span>{' for '}{'\"'}{props.data.group.name}{'\"'}\n  </li></Link>);\n};\n\n\n\nfunction mapState(state) {\n  const { user } = state.authentication;\n  return { user };\n}\n\nconst actionCreators = {\n  errorAlert: alertActions.error,\n  clearAlert: alertActions.clear,\n};\n\n\nconst connectedDashboardView = connect(mapState, actionCreators)(DashboardView);\nexport { connectedDashboardView as DashboardView };\n"]},"metadata":{},"sourceType":"module"}