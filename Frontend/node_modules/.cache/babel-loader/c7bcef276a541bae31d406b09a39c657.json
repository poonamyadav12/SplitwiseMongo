{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Transactions/TransactionView.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Accordion, Button, Card, Col, Container, Image, ListGroup, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { SETTLEUP_TXN } from '../../_helper/money';\nimport { LocalizedAmount, UserAvatar } from '../Shared/Shared';\nimport { GrEdit } from 'react-icons/gr';\nimport { UpdateExpenseModal } from './UpdateExpenseModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar dateFormat = require(\"dateformat\");\n\nexport class TransactionView extends Component {\n  render() {\n    const uiTxns = this.props.transactions.map(txn => convertToUiTransactionView(txn));\n    if (uiTxns.length === 0) return /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: \"No Transaction to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      fluid: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: uiTxns.map(transaction => /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: /*#__PURE__*/_jsxDEV(TransactionAccordian, {\n            transaction: transaction,\n            reloadGroupView: this.props.reloadGroupView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction TransactionAccordian(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(TransactionHeader, {\n      reloadGroupView: props.reloadGroupView,\n      transaction: props.transaction,\n      eventKey: props.transaction.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n      eventKey: props.transaction.id,\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(TransactionCardDetail, {\n          transaction: props.transaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, props.transaction.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TransactionAccordian;\n\nfunction TransactionHeader(props) {\n  _s();\n\n  const [isUpdateExpenseFormOpen, setUpdateExpenseModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Card.Header, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Button,\n          variant: \"link\",\n          eventKey: props.eventKey,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 1,\n            style: {\n              width: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  marginRight: '5px',\n                  color: 'grey'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: dateFormat(props.transaction.createdAt, 'mmm').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: dateFormat(props.transaction.createdAt, 'd')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: props.transaction.type !== SETTLEUP_TXN ? 3 : 4,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: props.transaction.type !== SETTLEUP_TXN ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'baseline',\n                  marginLeft: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h5\",\n                  style: {\n                    marginRight: '1rem'\n                  },\n                  children: props.transaction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(GrEdit, {\n                  onClick: () => setUpdateExpenseModalOpen(true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), isUpdateExpenseFormOpen ? /*#__PURE__*/_jsxDEV(UpdateExpenseModal, {\n                  transaction: props.transaction,\n                  reloadGroupView: props.reloadGroupView,\n                  closeModal: () => setUpdateExpenseModalOpen(false),\n                  isOpen: isUpdateExpenseFormOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this) : null, ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h5\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: 'https://assets.splitwise.com/assets/api/payment_icon/square/small/offline.png',\n                  style: {\n                    width: '2rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: props.transaction.from.first_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), ' paid to ', /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: props.transaction.to[0].first_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), ' #settleup ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), props.transaction.type !== SETTLEUP_TXN ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(ConnectedPayerTransactionBanner, {\n                transaction: props.transaction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(ConnectedLentTransactionBanner, {\n                transaction: props.transaction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Col, {\n            sm: 7,\n            style: {\n              textAlign: 'center',\n              marginLeft: '22rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Settled amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'blue'\n              },\n              children: /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n                amount: props.transaction.amount,\n                currency: props.transaction.currency_code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionHeader, \"n9Qo77aggQs5gPVxm/nvfN4Mubo=\");\n\n_c2 = TransactionHeader;\n\nclass PayerTransactionBanner extends React.Component {\n  render() {\n    const userId = this.props.user.email;\n    const payerName = this.props.transaction.from.email === userId ? 'you' : this.props.transaction.from.first_name;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [payerName, \"\\xA0paid\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: payerName === 'you' ? {\n          color: 'green'\n        } : {\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n          amount: this.props.transaction.amount,\n          currency: this.props.transaction.currency_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nclass LentTransactionBanner extends React.Component {\n  render() {\n    const userId = this.props.user.email;\n    const payerName = this.props.transaction.from.email === userId ? 'you' : this.props.transaction.from.first_name;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [payerName, \"\\xA0lent\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: payerName === 'you' ? {\n          color: 'green'\n        } : {\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n          amount: this.props.transaction.lentAmount,\n          currency: this.props.transaction.currency_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst TransactionCardDetail = props => {\n  const owesList = props.transaction.to.map(payee => {\n    return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n        user: payee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 52\n      }, this), ' ', \"owes\", ' ', /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n        amount: payee.oweAmount,\n        currency: props.transaction.currency_code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 93\n      }, this)]\n    }, payee.first_name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: [/*#__PURE__*/_jsxDEV(UserAvatar, {\n        user: props.transaction.from\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 69\n      }, this), \"\\xA0paid \", /*#__PURE__*/_jsxDEV(LocalizedAmount, {\n        amount: props.transaction.amount,\n        currency: props.transaction.currency_code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 124\n      }, this)]\n    }, props.transaction.from.first_name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), owesList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = TransactionCardDetail;\n\nfunction convertToUiTransactionView(transaction) {\n  const amount = transaction.amount;\n  const totalpayees = transaction.to.length;\n  const amountPerMember = transaction.type === SETTLEUP_TXN ? amount : amount / (totalpayees + 1);\n  transaction.to = transaction.to.map(payee => {\n    payee.oweAmount = amountPerMember;\n    return payee;\n  });\n  transaction.lentAmount = transaction.type === SETTLEUP_TXN ? amount : amount * totalpayees / (totalpayees + 1);\n  return transaction;\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst ConnectedLentTransactionBanner = connect(mapState, {})(LentTransactionBanner);\nconst ConnectedPayerTransactionBanner = connect(mapState, {})(PayerTransactionBanner);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TransactionAccordian\");\n$RefreshReg$(_c2, \"TransactionHeader\");\n$RefreshReg$(_c3, \"TransactionCardDetail\");","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Transactions/TransactionView.js"],"names":["React","Component","useState","Accordion","Button","Card","Col","Container","Image","ListGroup","Row","connect","SETTLEUP_TXN","LocalizedAmount","UserAvatar","GrEdit","UpdateExpenseModal","dateFormat","require","TransactionView","render","uiTxns","props","transactions","map","txn","convertToUiTransactionView","length","transaction","reloadGroupView","id","TransactionAccordian","TransactionHeader","isUpdateExpenseFormOpen","setUpdateExpenseModalOpen","display","alignItems","eventKey","width","marginRight","color","createdAt","toUpperCase","type","marginLeft","description","from","first_name","to","textAlign","amount","currency_code","PayerTransactionBanner","userId","user","email","payerName","LentTransactionBanner","lentAmount","TransactionCardDetail","owesList","payee","oweAmount","totalpayees","amountPerMember","mapState","state","authentication","ConnectedLentTransactionBanner","ConnectedPayerTransactionBanner"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Accordion, Button, Card, Col, Container, Image, ListGroup, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { SETTLEUP_TXN } from '../../_helper/money';\nimport { LocalizedAmount, UserAvatar } from '../Shared/Shared';\nimport { GrEdit } from 'react-icons/gr';\nimport { UpdateExpenseModal } from './UpdateExpenseModal';\nvar dateFormat = require(\"dateformat\");\n\nexport class TransactionView extends Component {\n    render() {\n        const uiTxns = this.props.transactions.map((txn) => convertToUiTransactionView(txn));\n        if (uiTxns.length === 0) return <ListGroup><ListGroup.Item>No Transaction to show</ListGroup.Item></ListGroup>;\n        return (\n            <Card fluid='true'>\n                <Accordion>\n                    {uiTxns.map((transaction) => (\n                        <ListGroup key={transaction.id}>\n                            <TransactionAccordian\n                                transaction={transaction}\n                                reloadGroupView={this.props.reloadGroupView}\n                            />\n                        </ListGroup>\n                    ))}\n                </Accordion>\n            </Card>\n        );\n    }\n}\n\nfunction TransactionAccordian(props) {\n\n    return (\n        <Card key={props.transaction.id}>\n            <TransactionHeader\n                reloadGroupView={props.reloadGroupView}\n                transaction={props.transaction}\n                eventKey={props.transaction.id}\n            />\n            <Accordion.Collapse eventKey={props.transaction.id}>\n                <Card.Body>\n                    <TransactionCardDetail transaction={props.transaction} />\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    );\n}\n\n\nfunction TransactionHeader(props) {\n    const [isUpdateExpenseFormOpen, setUpdateExpenseModalOpen] = useState(false);\n\n    return (\n        <Card.Header>\n            <Container>\n                <Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <Accordion.Toggle as={Button} variant='link' eventKey={props.eventKey}>\n                        <Col sm={1} style={{ width: '1rem' }}>\n                            <Row>\n                                <h5 style={{ marginRight: '5px', color: 'grey' }}>\n                                    <div>\n                                        {dateFormat(\n                                            props.transaction.createdAt,\n                                            'mmm'\n                                        ).toUpperCase()}\n                                    </div>{' '}\n                                    <div>{dateFormat(props.transaction.createdAt, 'd')}</div>\n                                </h5>\n                            </Row>\n                        </Col>\n                        <Col sm={props.transaction.type !== SETTLEUP_TXN ? 3 : 4}>\n                            <Row>\n                                {props.transaction.type !== SETTLEUP_TXN ? (\n                                    <div style={{ display: 'flex', alignItems: 'baseline', marginLeft: '1rem' }}>\n                                        <div className='h5' style={{ marginRight: '1rem' }}>{props.transaction.description}</div>\n                                        <GrEdit onClick={() => setUpdateExpenseModalOpen(true)} />\n                                        {isUpdateExpenseFormOpen ? (\n                                            <UpdateExpenseModal\n                                                transaction={props.transaction}\n                                                reloadGroupView={props.reloadGroupView}\n                                                closeModal={() => setUpdateExpenseModalOpen(false)}\n                                                isOpen={isUpdateExpenseFormOpen}\n                                            />\n                                        ) : null}{' '}\n                                    </div>\n                                ) : (\n                                    <div className='h5'>\n                                        <Image\n                                            src={\n                                                'https://assets.splitwise.com/assets/api/payment_icon/square/small/offline.png'\n                                            }\n                                            style={{ width: '2rem' }}\n                                        />{' '}\n                                        <b>{props.transaction.from.first_name}</b>\n                                        {' paid to '}\n                                        <b>{props.transaction.to[0].first_name}</b>\n                                        {' #settleup '}\n                                    </div>\n                                )}\n                            </Row>\n                        </Col>\n                        {props.transaction.type !== SETTLEUP_TXN ? (\n                            <>\n                                <Col sm={4}>\n                                    <ConnectedPayerTransactionBanner\n                                        transaction={props.transaction}\n                                    />\n                                </Col>\n                                <Col sm={4}>\n                                    <ConnectedLentTransactionBanner\n                                        transaction={props.transaction}\n                                    />\n                                </Col>\n                            </>\n                        ) : (\n                            <Col\n                                sm={7}\n                                style={{ textAlign: 'center', marginLeft: '22rem' }}\n                            >\n                                <div>Settled amount</div>\n                                <div style={{ color: 'blue' }}>\n                                    <LocalizedAmount\n                                        amount={props.transaction.amount}\n                                        currency={props.transaction.currency_code}\n                                    />\n                                </div>\n                            </Col>\n                        )}\n                        </Accordion.Toggle>\n                    </Row>\n                </Container>\n        </Card.Header>\n    );\n}\n\nclass PayerTransactionBanner extends React.Component {\n    render() {\n        const userId = this.props.user.email;\n        const payerName = this.props.transaction.from.email === userId ? 'you' : this.props.transaction.from.first_name;\n        return (\n            <>\n                <div>{payerName}&nbsp;paid</div>\n                <div style={payerName === 'you' ? { color: 'green' } : { color: 'red' }}><LocalizedAmount amount={this.props.transaction.amount} currency={this.props.transaction.currency_code} /></div>\n            </>\n        );\n    }\n}\n\nclass LentTransactionBanner extends React.Component {\n    render() {\n        const userId = this.props.user.email;\n        const payerName = this.props.transaction.from.email === userId ? 'you' : this.props.transaction.from.first_name;\n        return (\n            <>\n                <div>{payerName}&nbsp;lent</div>\n                <div style={payerName === 'you' ? { color: 'green' } : { color: 'red' }}><LocalizedAmount amount={this.props.transaction.lentAmount} currency={this.props.transaction.currency_code} /></div>\n            </>\n        );\n    }\n}\n\nconst TransactionCardDetail = (props) => {\n    const owesList = props.transaction.to.map(payee => {\n        return (\n            <ListGroup.Item key={payee.first_name}><UserAvatar user={payee} />{' '}owes{' '}<LocalizedAmount amount={payee.oweAmount} currency={props.transaction.currency_code} /></ListGroup.Item>\n        );\n    });\n    return (\n        <ListGroup>\n            <ListGroup.Item key={props.transaction.from.first_name}><UserAvatar user={props.transaction.from} />&nbsp;paid <LocalizedAmount amount={props.transaction.amount} currency={props.transaction.currency_code} /></ListGroup.Item>\n            {owesList}\n        </ListGroup>\n    );\n}\n\nfunction convertToUiTransactionView(transaction) {\n    const amount = transaction.amount;\n    const totalpayees = transaction.to.length;\n\n    const amountPerMember = (transaction.type === SETTLEUP_TXN) ? amount : (amount / (totalpayees + 1));\n    transaction.to = transaction.to.map((payee) => {\n        payee.oweAmount = amountPerMember;\n        return payee;\n    });\n    transaction.lentAmount = (transaction.type === SETTLEUP_TXN) ? amount : (amount * totalpayees / (totalpayees + 1));\n    return transaction;\n}\n\nfunction mapState(state) {\n    const { user } = state.authentication;\n    return { user };\n}\n\nconst ConnectedLentTransactionBanner = connect(mapState, {})(LentTransactionBanner);\nconst ConnectedPayerTransactionBanner = connect(mapState, {})(PayerTransactionBanner);"]},"metadata":{},"sourceType":"module"}