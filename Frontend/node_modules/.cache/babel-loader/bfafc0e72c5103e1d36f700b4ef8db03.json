{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/LandingPage/Navbar.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, NavDropdown } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { userActions } from '../../_actions';\nimport { ProfileAvatar } from '../Shared/Shared';\nimport { GrGroup } from 'react-icons/gr'; //create the Navbar Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = () => {\n      this.props.logout();\n    };\n\n    this.handleLogout = this.handleLogout.bind(this);\n  } //handle logout to destroy the cookie\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar navbar-inverse\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navbar-header\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                className: \"navbar-brand\",\n                children: \"Splitwise App\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"nav navbar-nav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), !this.props.user && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"nav navbar-nav navbar-right\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/signup\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"glyphicon glyphicon-user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 23\n                  }, this), \"Sign me Up\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"nav navbar-nav navbar-right\",\n              children: this.props.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/groups\",\n                    children: \"My groups\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n                    title: /*#__PURE__*/_jsxDEV(ProfileAvatar, {\n                      user: this.props.user,\n                      textColor: 'white'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 27\n                    }, this),\n                    id: \"basic-nav-dropdown\",\n                    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      style: {\n                        backgroundColor: 'lightgray'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/profile\",\n                        children: \"Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      style: {\n                        backgroundColor: 'lightgray'\n                      },\n                      onClick: this.handleLogout,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        children: \"Logout\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"glyphicon glyphicon-log-in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), ' ', \"Login\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    user\n  } = state.authentication;\n  return {\n    user\n  };\n}\n\nconst actionCreators = {\n  logout: userActions.logout\n};\nconst connectedNavBar = connect(mapState, actionCreators)(Navbar);\nexport { connectedNavBar as Navbar };","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/LandingPage/Navbar.js"],"names":["React","Component","ListGroup","NavDropdown","connect","Link","userActions","ProfileAvatar","GrGroup","Navbar","constructor","props","handleLogout","logout","bind","render","user","backgroundColor","mapState","state","authentication","actionCreators","connectedNavBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CAEA;;;;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJ,MAAM;AACnB,WAAKD,KAAL,CAAWE,MAAX;AACD,KAPkB;;AAEjB,SAAKD,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB;AACD,GAJ4B,CAK7B;;;AAKAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,GAAT;AAAa,gBAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBANF,EAOG,CAAC,KAAKJ,KAAL,CAAWK,IAAZ,iBACC;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,qCACE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,SAAT;AAAA,0CACE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARJ,eAiBE;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,wBACG,KAAKL,KAAL,CAAWK,IAAX,gBACC;AAAA,wCACE;AAAA,yCACE,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,KAAK,eACH,QAAC,aAAD;AACE,sBAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IADnB;AAEE,sBAAA,SAAS,EAAE;AAFb;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAOE,oBAAA,EAAE,EAAC,oBAPL;AAAA,4CASE,QAAC,SAAD,CAAW,IAAX;AACE,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,eAAe,EAAE;AAAnB,uBADT;AAAA,6CAGE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,4BATF,eAcE,QAAC,SAAD,CAAW,IAAX;AACE,sBAAA,KAAK,EAAE;AAAEA,wBAAAA,eAAe,EAAE;AAAnB,uBADT;AAEE,sBAAA,OAAO,EAAE,KAAKL,YAFhB;AAAA,6CAIE,QAAC,IAAD;AAAM,wBAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,4BAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA,8BADD,gBAgCC;AAAA,wCACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,QAAT;AAAA,0CACE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADF,EACuD,GADvD;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjCJ;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAoED;;AA/E4B;;AAkF/B,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEH,IAAAA;AAAF,MAAWG,KAAK,CAACC,cAAvB;AACA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD;;AAED,MAAMK,cAAc,GAAG;AACrBR,EAAAA,MAAM,EAAEP,WAAW,CAACO;AADC,CAAvB;AAIA,MAAMS,eAAe,GAAGlB,OAAO,CAACc,QAAD,EAAWG,cAAX,CAAP,CAAkCZ,MAAlC,CAAxB;AACA,SAASa,eAAe,IAAIb,MAA5B","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, NavDropdown } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userActions } from '../../_actions';\r\nimport { ProfileAvatar } from '../Shared/Shared';\r\nimport { GrGroup } from 'react-icons/gr';\r\n\r\n//create the Navbar Component\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n  //handle logout to destroy the cookie\r\n  handleLogout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <nav className='navbar navbar-inverse'>\r\n            <div className='container-fluid'>\r\n              <div className='navbar-header'>\r\n                <Link to=\"/\" className='navbar-brand'>\r\n                  Splitwise App\r\n                    </Link>\r\n              </div>\r\n              <ul className='nav navbar-nav'></ul>\r\n              {!this.props.user && (\r\n                <ul className='nav navbar-nav navbar-right'>\r\n                  <li>\r\n                    <Link to='/signup'>\r\n                      <span className='glyphicon glyphicon-user'></span>Sign\r\n                          me Up\r\n                        </Link>\r\n                  </li>\r\n                </ul>\r\n              )}\r\n              <ul className='nav navbar-nav navbar-right'>\r\n                {this.props.user ? (\r\n                  <>\r\n                    <li>\r\n                      <Link to='/groups'>\r\n                        My groups\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <NavDropdown\r\n                        title={\r\n                          <ProfileAvatar\r\n                            user={this.props.user}\r\n                            textColor={'white'}\r\n                          />\r\n                        }\r\n                        id='basic-nav-dropdown'\r\n                      >\r\n                        <ListGroup.Item\r\n                          style={{ backgroundColor: 'lightgray' }}\r\n                        >\r\n                          <Link to='/profile'>Profile</Link>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          style={{ backgroundColor: 'lightgray' }}\r\n                          onClick={this.handleLogout}\r\n                        >\r\n                          <Link to='#'>Logout</Link>\r\n                        </ListGroup.Item>\r\n                      </NavDropdown>\r\n                    </li>\r\n                  </>\r\n                ) : (\r\n                  <li>\r\n                    <Link to='/login'>\r\n                      <span className='glyphicon glyphicon-log-in'></span>{' '}\r\n                          Login\r\n                        </Link>\r\n                        )\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapState(state) {\r\n  const { user } = state.authentication;\r\n  return { user };\r\n}\r\n\r\nconst actionCreators = {\r\n  logout: userActions.logout\r\n};\r\n\r\nconst connectedNavBar = connect(mapState, actionCreators)(Navbar);\r\nexport { connectedNavBar as Navbar };"]},"metadata":{},"sourceType":"module"}