{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\nimport axios from 'axios';\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware, loggerMiddleware))); // Add a request interceptor\n\naxios.interceptors.request.use(function (config) {\n  const token = store.getState().authentication.token;\n  config.headers.Authorization = token;\n  config.headers.common['authorization'] = token;\n  config.withCredentials = true;\n  return config;\n});","map":{"version":3,"sources":["/Users/poonam/Projects/SplitwiseMongoDb/Frontend/src/_helper/store.js"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","createLogger","rootReducer","axios","loggerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","interceptors","request","use","config","token","getState","authentication","headers","Authorization","common","withCredentials"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAGH,YAAY,EAArC;AACA,MAAMI,gBAAgB,GAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,oCAAzC,IAAkFR,OAA3G;AACA,OAAO,MAAMS,KAAK,GAAGX,WAAW,CAC5BK,WAD4B,EAE5BG,gBAAgB,CACZP,eAAe,CACXE,eADW,EAEXI,gBAFW,CADH,CAFY,CAAzB,C,CASP;;AACAD,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C,QAAMC,KAAK,GAAGL,KAAK,CAACM,QAAN,GAAiBC,cAAjB,CAAgCF,KAA9C;AACAD,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAA+BJ,KAA/B;AACAD,EAAAA,MAAM,CAACI,OAAP,CAAeE,MAAf,CAAsB,eAAtB,IAAyCL,KAAzC;AACAD,EAAAA,MAAM,CAACO,eAAP,GAAyB,IAAzB;AAEA,SAAOP,MAAP;AACH,CAPD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\nimport axios from 'axios';\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(\n            thunkMiddleware,\n            loggerMiddleware\n        ))\n);\n\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    const token = store.getState().authentication.token;\n    config.headers.Authorization = token;\n    config.headers.common['authorization'] = token;\n    config.withCredentials = true;\n\n    return config;\n});"]},"metadata":{},"sourceType":"module"}