{"ast":null,"code":"var _jsxFileName = \"/Users/poonam/Projects/Splitwise/Frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { userActions } from '../../_actions';\nimport { Row, Container, Col, Card, Form, Button } from 'react-bootstrap'; //Define a Login Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); // reset login status\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      e.preventDefault();\n      this.props.login(this.state.username, this.state.password);\n    };\n\n    this.props.logout(); //maintain the state required for this component\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    }; //Bind the handlers to this class\n\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {} //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.user && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: '17rem'\n              },\n              src: \"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '35rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter email\",\n                    onChange: this.usernameChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\",\n                    children: \"We'll never share your email with anyone else.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    onChange: this.passwordChangeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  type: \"submit\",\n                  onClick: this.submitLogin,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    loggingIn,\n    user\n  } = state.authentication;\n  return {\n    user,\n    loggingIn\n  };\n}\n\nconst actionCreators = {\n  login: userActions.login,\n  logout: userActions.logout\n};\nconst connectedLoginPage = connect(mapState, actionCreators)(Login);\nexport { connectedLoginPage as Login };","map":{"version":3,"sources":["/Users/poonam/Projects/Splitwise/Frontend/src/components/Login/Login.js"],"names":["React","Component","Redirect","connect","userActions","Row","Container","Col","Card","Form","Button","Login","constructor","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","submitLogin","preventDefault","login","state","logout","bind","componentWillMount","render","user","alignItems","width","mapState","loggingIn","authentication","actionCreators","connectedLoginPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { userActions } from '../../_actions';\r\nimport { Row, Container, Col, Card, Form, Button } from 'react-bootstrap';\r\n\r\n\r\n//Define a Login Component\r\nclass Login extends Component {\r\n    //call the constructor method\r\n    constructor(props) {\r\n        //Call the constrictor of Super class i.e The Component\r\n        super(props);\r\n\r\n        // reset login status\r\n        this.props.logout();\r\n        //maintain the state required for this component\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n        }\r\n\r\n        //Bind the handlers to this class\r\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n    }\r\n    //Call the Will Mount to set the auth Flag to false\r\n    componentWillMount() { }\r\n    //username change handler to update state variable with the text entered by the user\r\n    usernameChangeHandler = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n    //password change handler to update state variable with the text entered by the user\r\n    passwordChangeHandler = (e) => {\r\n        this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n    submitLogin = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state.username, this.state.password);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.user && <Redirect to=\"/home\" />}\r\n                <Container>\r\n                    <Row style={{ alignItems: 'center' }}>\r\n                        <Col lg={4}>\r\n                            <img style={{ width: '17rem' }} src=\"https://assets.splitwise.com/assets/core/logo-square-65a6124237868b1d2ce2f5db2ab0b7c777e2348b797626816400534116ae22d7.svg\" alt=\"Logo\" />\r\n                        </Col>\r\n\r\n                        <Col lg={8}>\r\n                            <Card style={{ width: '35rem' }}>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Email address</Form.Label>\r\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.usernameChangeHandler} />\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            We'll never share your email with anyone else.\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.passwordChangeHandler} />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"success\" type=\"submit\" onClick={this.submitLogin}>\r\n                                        Submit\r\n                                </Button>\r\n                                </Form>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\nfunction mapState(state) {\r\n    const { loggingIn, user } = state.authentication;\r\n    return { user, loggingIn };\r\n}\r\n\r\nconst actionCreators = {\r\n    login: userActions.login,\r\n    logout: userActions.logout\r\n};\r\n\r\n\r\nconst connectedLoginPage = connect(mapState, actionCreators)(Login);\r\nexport { connectedLoginPage as Login };\r\n"]},"metadata":{},"sourceType":"module"}